{"version":3,"sources":["assets/icons/inactivo.svg","vistas/proyectos/panel_proyectos/ProyectosPanel.js"],"names":["ProyectosPanel","history","token","localStorage","getItem","servicios","useContext","ServicesContext","useState","cargando","setCargando","proyectos","setProyectos","details","setDetails","getProyectos","a","Promise","callback","getUserAPI","promesas","map","proyecto","getProyectoByIds","all","resultado","lista_proyectos","nombre","area","linea","tipo","estado","id","_id","click","direccion","push","useEffect","intervalo","setInterval","clearInterval","style","display","placeItems","height","fluid","sm","className","items","fields","key","_style","width","label","sorter","filter","columnFilter","itemsPerPage","responsive","pagination","scopedSlots","item","onClick","icono","iconoactivo","iconoinactivo","src","show_details","index","size","position","indexOf","newDetails","slice","splice","toggleDetails","includes","show","md","find","element"],"mappings":"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","file":"static/js/19.cea751c0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/inactivo.c25580cd.svg\";","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { ServicesContext } from \"src/containers/UserContext\";\r\nimport Loader from \"src/reusable/Loader\";\r\nimport \"./ProyectosPanel.css\";\r\nimport iconoactivo from \"../../../assets/icons/activo.svg\";\r\nimport iconoinactivo from \"../../../assets/icons/inactivo.svg\";\r\nimport { getProyectoByIds, getUserAPI } from \"src/helpers/peticionesAPI\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CCollapse,\r\n  CContainer,\r\n  CDataTable,\r\n  CRow,\r\n} from \"@coreui/react\";\r\n\r\nconst ProyectosPanel = ({ history }) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const servicios = useContext(ServicesContext);\r\n  const [cargando, setCargando] = useState(true);\r\n\r\n  const [proyectos, setProyectos] = useState([]);\r\n  const [details, setDetails] = useState([]);\r\n\r\n  const toggleDetails = (index) => {\r\n    const position = details.indexOf(index);\r\n    let newDetails = details.slice();\r\n    if (position !== -1) {\r\n      newDetails.splice(position, 1);\r\n    } else {\r\n      newDetails = [...details, index];\r\n    }\r\n    setDetails(newDetails);\r\n  };\r\n\r\n  const fields = [\r\n    { key: \"nombre\", _style: { width: \"30%\" } },\r\n    { key: \"area\", _style: { width: \"20%\" } },\r\n    { key: \"linea\", _style: { width: \"20%\" } },\r\n    { key: \"tipo\", _style: { width: \"20%\" } },\r\n    { key: \"estado\", _style: { width: \"10%\" } },\r\n    {\r\n      key: \"show_details\",\r\n      label: \"\",\r\n      _style: { width: \"1%\" },\r\n      sorter: false,\r\n      filter: false,\r\n    },\r\n  ];\r\n\r\n  const getProyectos = async () => {\r\n    return new Promise(async (callback) => {\r\n      const { proyectos } = await getUserAPI(token);\r\n      const promesas = proyectos.map(async (proyecto) => {\r\n        return getProyectoByIds(token, proyecto);      \r\n      });\r\n      const resultado = await Promise.all(promesas);\r\n      const lista_proyectos = resultado.map((proyecto) => {\r\n        return {\r\n          nombre: proyecto.nombre,\r\n          area: proyecto.area,\r\n          linea: proyecto.linea,\r\n          tipo: proyecto.tipo,\r\n          estado: proyecto.estado,\r\n          id: proyecto._id,\r\n        }\r\n      });   \r\n      setProyectos(lista_proyectos);    \r\n      callback(true);\r\n    });\r\n  };\r\n  const getIntervalo = () => {\r\n    return setInterval(getProyectos, 30000);\r\n  };\r\n\r\n  const click = (id, direccion) => {\r\n    history.push(`/proyectos/${id}/${direccion}`);\r\n  };\r\n\r\n  useEffect(async () => {\r\n    setCargando(true);\r\n    await getProyectos();\r\n    const intervalo = getIntervalo();\r\n    setCargando(false);\r\n    return () => clearInterval(intervalo);\r\n  }, []);\r\n\r\n  if (cargando)\r\n    return (\r\n      <div style={{ display: \"grid\", placeItems: \"center\", height: \"40vh\" }}>\r\n        <Loader height=\"10vh\" />\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <CContainer fluid>\r\n      <CRow>\r\n        <CCol sm=\"12\">\r\n          <CCard className=\"shadow\">\r\n            <CCardHeader className=\"contenedor-cabecera\">\r\n              <h4 className=\"m-0\">Proyectos</h4>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CDataTable\r\n                items={proyectos}\r\n                fields={fields}\r\n                columnFilter\r\n                itemsPerPage={5}\r\n                sorter\r\n                responsive\r\n                pagination\r\n                scopedSlots={{\r\n                  nombre: (item) => {\r\n                    return (\r\n                      <div className=\"mt-2 pt-1 cursor\" onClick={() => click(item.id, \"informacion\")}>{item.nombre}</div>\r\n                    )\r\n                  },\r\n                  estado: (item) => {\r\n                    const icono = item.estado == \"activo\" ? iconoactivo : iconoinactivo;\r\n                    return (\r\n                      <td>\r\n                        <img src={icono} className=\"icono\" />\r\n                      </td>\r\n                    );\r\n                  },\r\n                  show_details: (item, index) => {\r\n                    return (\r\n                      <td className=\"py-2\">\r\n                        <CButton\r\n                          className=\"boton-elemento\"\r\n                          size=\"sm\"\r\n                          onClick={() => {\r\n                            toggleDetails(index);\r\n                          }}\r\n                        >\r\n                          {details.includes(index)\r\n                            ? \"Ocultar\"\r\n                            : \"Caracteristicas\"}\r\n                        </CButton>\r\n                      </td>\r\n                    );\r\n                  },\r\n                  details: (item, index) => {\r\n                    return (\r\n                      <CCollapse show={details.includes(index)}>\r\n                        <CCardBody>\r\n                          <CRow>\r\n                            \r\n                            <CCol md=\"3\" className=\"my-1\">\r\n                              <CButton\r\n                                className=\"boton-elemento \"\r\n                                onClick={() => click(item.id, \"informacion\")}\r\n                              >\r\n                                Información\r\n                              </CButton>\r\n                            </CCol>\r\n                            {servicios.find((element) => element === \"PC\") ? (\r\n                              <CCol md=\"3\" className=\"my-1\">\r\n                                <CButton\r\n                                  className=\"boton-elemento\"\r\n                                  onClick={() =>\r\n                                    click(item.id, \"configuracion\")\r\n                                  }\r\n                                >\r\n                                  Configuración\r\n                                </CButton>\r\n                              </CCol>\r\n                            ) : null}\r\n                            {servicios.find((element) => element === \"PE\") ? (\r\n                              <CCol md=\"3\" className=\"my-1\">\r\n                                <CButton\r\n                                  className=\"boton-elemento\"\r\n                                  onClick={() => click(item.id, \"estadistica\")}\r\n                                >\r\n                                  Estadisticas\r\n                                </CButton>\r\n                              </CCol>\r\n                            ) : null}\r\n                            <CCol md=\"3\" className=\"my-1\">\r\n                              <CButton\r\n                                className=\"boton-elemento\"\r\n                                onClick={() => click(item.id, \"elementos\")}\r\n                              >\r\n                                Elementos\r\n                              </CButton>\r\n                            </CCol>\r\n                          </CRow>\r\n                        </CCardBody>\r\n                      </CCollapse>\r\n                    );\r\n                  },\r\n                }}\r\n              ></CDataTable>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </CContainer>\r\n  );\r\n};\r\n\r\nexport default ProyectosPanel;\r\n"],"sourceRoot":""}