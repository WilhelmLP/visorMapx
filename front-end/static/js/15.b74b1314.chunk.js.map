{"version":3,"sources":["assets/icons/inactivo.svg","vistas/general/Navegacion.js","vistas/tarjetas/graficas/Basica.js","vistas/tarjetas/graficas/Landmark.js","vistas/tarjetas/graficas/Peligrosidad.js","vistas/tarjetas/graficas/Graficas.js","vistas/tarjetas/graficas/Custom.js","vistas/tarjetas/graficas/Landmarks.js","vistas/tarjetas/graficas/Basicas.js","vistas/tarjetas/graficas/Peligrosidades.js","vistas/tarjetas/graficas/Layout.js"],"names":["NavegacionTipo","TARJETA","ELEMENTO","PROYECTO","Navegacion","activo","tipo","history","direccion","servicios","useContext","ServicesContext","navegacion","useMemo","push","titulo","id","key","undefined","includes","className","variant","map","item","index","active","onClick","click","data","labels","values","arr_colors","etiquetas","hour","arr_values","length","forEach","label","slice","v","idx","alias","fill","backgroundColor","borderColor","datasets","options","scales","y","grace","plugins","zoom","pan","enabled","mode","wheel","pinch","onZoomComplete","chart","update","maintainAspectRatio","Basica","sensores","chartRef","useRef","graficasDatos","store","getState","arr_clean","useState","setLabels","accordion","setAccordion","setValues","ultimoDato","oldData","newData","corto","useEffect","Chart","register","arr_dates","matrix_val","sensor","fecha","arr","i","valor","inicializar","old","array","style","minHeight","maxHeight","ref","current","resetZoom","block","nombre","show","toFixed","Landmark","disponibilidad","setDisponibilidad","landmark","nivel","deltai","deltay","Peligrosidad","peligrosidad","Graficas","graficaActiva","custom","setCustom","sm","xs","name","value","onChange","e","target","Custom","nombreTarjeta","graficasActivas","setGraficasActivas","cargando","setCargando","token","localStorage","getItem","getData","a","getRecursosAPI","graficas","str_sensores","Promise","all","getPaquetesAPI","getLandmarksAPI","getPeligrosidadAPI","land","peligro","reverse","arr_graficas","grafica","arr_grafica","estado","getIntervalo","setInterval","intervalo","clearInterval","display","placeItems","height","Loader","class","md","Lanmarks","datos","Basicas","Peligrosidades","Layout","match","params","icono","iconoinactivo","setData","getTarjeta","iconoactivo","estadoformato","toUpperCase","substring","fluid","src","activeTab"],"mappings":"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","file":"static/js/15.b74b1314.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/inactivo.c25580cd.svg\";","import React, { useContext, useMemo} from \"react\";\r\nimport { CCard, CCol, CRow, CNav, CNavItem, CNavLink } from \"@coreui/react\";\r\nimport { ServicesContext } from \"src/containers/UserContext\";\r\nimport propTypes from \"prop-types\";\r\nimport \"./Navegacion.css\";\r\n\r\nconst NavegacionTipo = {\r\n  TARJETA : 0,\r\n  ELEMENTO : 1,\r\n  PROYECTO : 2 \r\n}\r\nconst Navegacion = ({activo = 0,tipo = NavegacionTipo.ELEMENTO, history, direccion}) => {\r\n\r\n  const servicios = useContext(ServicesContext);\r\n  const navegacion = useMemo(() =>{\r\n    const navegacion = [];\r\n    switch(tipo) {\r\n      case NavegacionTipo.TARJETA:\r\n        navegacion.push({titulo:\"Información\",id:0,direccion:\"informacion\",key:\"tinformacion\"});\r\n        if(servicios!=undefined){\r\n          if(servicios.includes(\"TC\"))\r\n            navegacion.push({titulo:\"Configuración\",id:1,direccion:\"configuracion\",key:\"tconfiguracion\"});\r\n          if(servicios.includes(\"TGI\") || servicios.includes(\"TGII\"))\r\n            navegacion.push({titulo:\"Graficas\",id:2,direccion:\"graficas\",key:\"tgraficas\"});\r\n          if(servicios.includes(\"TE\"))\r\n            navegacion.push({titulo:\"Estadistica\",id:3,direccion:\"estadistica\",key:\"testadistica\"});\r\n        }        \r\n        break;        \r\n      case NavegacionTipo.ELEMENTO:\r\n        navegacion.push({titulo:\"Información\",id:0,direccion:\"informacion\",key:\"einformacion\"});\r\n        if(servicios!=undefined){\r\n          if(servicios.includes(\"EC\"))\r\n            navegacion.push({titulo:\"Configuración\",id:1,direccion:\"configuracion\",key:\"econfiguracion\"});\r\n          if(servicios.includes(\"EGI\") || servicios.includes(\"EGII\"))\r\n            navegacion.push({titulo:\"Graficas\",id:2, direccion:\"graficas\",key:\"egraficas\"});\r\n          if(servicios.includes(\"EE\"))\r\n            navegacion.push({titulo:\"Estadistica\",id:3,direccion:\"estadistica\",key:\"3estadistica\"});\r\n        }        \r\n        break;\r\n      case NavegacionTipo.PROYECTO:\r\n        if(servicios!=undefined){\r\n          if(servicios.includes(\"EGI\") || servicios.includes(\"EGII\"))\r\n            navegacion.push({titulo:\"Información\",id:0,direccion:\"informacion\",key:\"pinformacion\"});\r\n          if(servicios.includes(\"EC\"))\r\n            navegacion.push({titulo:\"Configuración\",id:1,direccion:\"configuracion\",key:\"pconfiguracion\"});\r\n          if(servicios.includes(\"EE\"))\r\n            navegacion.push({titulo:\"Estadistica\",id:2,direccion:\"estadistica\",key:\"pestadistica\"});\r\n          navegacion.push({titulo:\"Elementos\",id:3,direccion:\"elementos\",key:\"pelementos\"});\r\n        }\r\n        break;        \r\n    } \r\n    return navegacion;\r\n  },[servicios,tipo]);\r\n  \r\n  const click = (index) => {\r\n    \r\n    switch(tipo) {\r\n      case NavegacionTipo.TARJETA:\r\n        history.push(`/tarjetas/${direccion}/${navegacion[index].direccion}`);           \r\n        break;        \r\n      case NavegacionTipo.ELEMENTO:\r\n        history.push(`/elementos/${direccion}/${navegacion[index].direccion}`);         \r\n       break;\r\n      case NavegacionTipo.PROYECTO:\r\n        history.push(`/proyectos/${direccion}/${navegacion[index].direccion}`);         \r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CCard className=\"navegacion py-1\">                                                          \r\n        <div className=\"panel d-flex justify-content-end\">\r\n          <CNav variant=\"tabs\">\r\n            {navegacion.map((item,index) => {\r\n              return (\r\n                <CNavItem key={item.key}>\r\n                  {\r\n                    (item.id==activo)?\r\n                    <CNavLink className=\"link\" active>{item.titulo}</CNavLink>\r\n                    :\r\n                    <CNavLink className=\"link\" onClick={()=>click(index)}>{item.titulo}</CNavLink>\r\n                  }        \r\n                </CNavItem>\r\n              );\r\n            })}  \r\n          </CNav>            \r\n        </div>                  \r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nNavegacion.propTypes = {\r\n  activo: propTypes.number,\r\n  tipo: propTypes.oneOf([0,1,2]),\r\n  direccion: propTypes.string,\r\n  history: propTypes.object\r\n};\r\n\r\nexport {NavegacionTipo};\r\nexport default Navegacion;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  CButton,\r\n  CCollapse,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n} from \"@coreui/react\";\r\nimport { Chart, Line } from \"react-chartjs-2\";\r\nimport \"./Graficas.css\";\r\nimport zoom from \"chartjs-plugin-zoom\";\r\nimport store from \"src/store\";\r\n\r\nconst data = (labels, values, arr_colors, etiquetas) => {\r\n  let hour = [];\r\n  let arr_values = [];\r\n  if (labels.length > 1) {\r\n    labels.forEach((label) => {\r\n      hour.push(label.slice(11, label.length));\r\n    });\r\n  }\r\n  values.forEach((v, idx) => {\r\n    arr_values.push({\r\n      label: `${etiquetas[idx].alias}`,\r\n      data: v,\r\n      fill: false,\r\n      backgroundColor: `rgb(${arr_colors[idx]})`,\r\n      borderColor: `rgb(${arr_colors[idx]}, 0.2)`,\r\n    });\r\n  });\r\n\r\n  return {\r\n    labels: hour,\r\n    datasets: arr_values,\r\n  };\r\n};\r\n\r\nconst options = {\r\n  scales: {\r\n    y: {\r\n      grace: \"0.25%\",\r\n    },\r\n  },\r\n  plugins: {\r\n    zoom: {\r\n      pan: {\r\n        enabled: true,\r\n        mode: \"xy\",\r\n      },\r\n      zoom: {\r\n        wheel: {\r\n          enabled: true,\r\n        },\r\n        pinch: {\r\n          enabled: true,\r\n        },\r\n        mode: \"xy\",\r\n        onZoomComplete({ chart }) {\r\n          chart.update(\"none\");\r\n        },\r\n      },\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n};\r\nconst arr_colors = [\"81,205,160\", \"109,120,173\", \"224,125,117\"];\r\n\r\nconst Basica = ({ sensores }) => {\r\n  const chartRef = useRef(null);\r\n  const { graficasDatos } = store.getState();\r\n  const arr_clean = sensores[0].map(() => {\r\n    return [];\r\n  });\r\n  const [labels, setLabels] = useState([]);\r\n  const [accordion, setAccordion] = useState();\r\n  const [values, setValues] = useState(arr_clean);\r\n\r\n  const ultimoDato = (oldData, newData) => {\r\n    if (oldData.length < graficasDatos.corto) return [...oldData, newData];\r\n    else\r\n      return [\r\n        ...oldData.slice(\r\n          oldData.length - (graficasDatos.corto - 1),\r\n          oldData.length\r\n        ),\r\n        newData,\r\n      ];\r\n  };\r\n\r\n  const inicializar = () => {\r\n    let arr_dates = [];\r\n    let matrix_val = [...arr_clean];\r\n    sensores.forEach((sensor) => {\r\n      arr_dates.push(sensor[0].fecha);\r\n      let arr = [];\r\n      for (let i = 0; i < sensor.length; i++) {\r\n        arr.push(ultimoDato(matrix_val[i], sensor[i].valor));\r\n      }\r\n      matrix_val = [...arr];\r\n    });\r\n    setValues(matrix_val);\r\n    setLabels(arr_dates);\r\n  };\r\n\r\n  const actualizar = () => {\r\n    setLabels((old) => {\r\n      return ultimoDato(old, sensores[0][0].fecha);\r\n    });\r\n    setValues((old) => {\r\n      let array = [];\r\n      for (let i = 0; i < sensores[0].length; i++)\r\n        array.push(ultimoDato(old[i], sensores[0][i].valor));\r\n      return array;\r\n    });\r\n  };\r\n\r\n  const resetZoom = () => {\r\n    chartRef.current.resetZoom();\r\n  };\r\n\r\n  useEffect(() => {\r\n    Chart.register(zoom);\r\n    if (sensores.length > 1) inicializar();\r\n    else if (sensores.length == 1) actualizar();\r\n  }, [sensores]);\r\n\r\n  return (\r\n    <>\r\n      {values[0][0] === null ? (\r\n        \"Información no disponible\"\r\n      ) : (\r\n        <>\r\n          <div\r\n            className=\"container-fluid\"\r\n            style={{ minHeight: \"40vh\", maxHeight: \"50vh\" }}\r\n          >\r\n            <Line\r\n              data={data(labels, values, arr_colors, sensores[0])}\r\n              options={options}\r\n              ref={chartRef}\r\n            />\r\n            <CButton className=\"boton-reset\" onClick={resetZoom}>\r\n              Restablecer Zoom\r\n            </CButton>\r\n          </div>\r\n          <div className=\"mt-5\">\r\n            {sensores[0].map((sensor, idx) => {\r\n              return (\r\n                <div id=\"accordion\" key={idx}>\r\n                  <CCard className=\"mb-0\">\r\n                    <CCardHeader className=\"contenedor-cabecera\">\r\n                      <CButton\r\n                        block\r\n                        className=\"text-left m-0 p-0 \"\r\n                        onClick={() =>\r\n                          setAccordion(accordion === idx ? null : idx)\r\n                        }\r\n                      >\r\n                        <h5 className=\"m-0 p-0\">\r\n                          <span className=\"text-color\">\r\n                            {sensor.nombre} ({sensor.alias})\r\n                          </span>\r\n                        </h5>\r\n                      </CButton>\r\n                    </CCardHeader>\r\n                    <CCollapse show={accordion === idx}>\r\n                      <CCardBody>\r\n                        <pre>\r\n                          <h6>Fecha : {labels[labels.length - 1]} </h6>\r\n                        </pre>\r\n                        <pre>\r\n                          <h6>\r\n                            Valor (actual) :\r\n                            {values[idx][values[idx].length - 1] != undefined\r\n                              ? values[idx][values[idx].length - 1].toFixed(4)\r\n                              : 0}\r\n                          </h6>\r\n                        </pre>\r\n                      </CCardBody>\r\n                    </CCollapse>\r\n                  </CCard>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Basica;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  CButton,\r\n  CCollapse,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n} from \"@coreui/react\";\r\nimport { Chart, Line } from \"react-chartjs-2\";\r\nimport \"./Graficas.css\";\r\nimport zoom from \"chartjs-plugin-zoom\";\r\nimport store from \"src/store\";\r\n\r\nconst data = (labels, values, arr_colors, etiquetas) => {\r\n  let hour = [];\r\n  let arr_values = [];\r\n  if (labels.length > 1) {\r\n    labels.forEach((label) => {\r\n      hour.push(label.slice(11, label.length));\r\n    });\r\n  }\r\n  values.forEach((v, idx) => {\r\n    arr_values.push({\r\n      label: `${etiquetas[idx].alias}`,\r\n      data: v,\r\n      fill: false,\r\n      backgroundColor: `rgb(${arr_colors[idx]})`,\r\n      borderColor: `rgb(${arr_colors[idx]}, 0.2)`,\r\n    });\r\n  });\r\n\r\n  return {\r\n    labels: hour,\r\n    datasets: arr_values,\r\n  };\r\n};\r\n\r\nconst options = {\r\n  scales: {\r\n    y: {\r\n      grace: \"0.25%\",\r\n    },\r\n  },\r\n  plugins: {\r\n    zoom: {\r\n      pan: {\r\n        enabled: true,\r\n        mode: \"xy\",\r\n      },\r\n      zoom: {\r\n        wheel: {\r\n          enabled: true,\r\n        },\r\n        pinch: {\r\n          enabled: true,\r\n        },\r\n        mode: \"xy\",\r\n        onZoomComplete({ chart }) {\r\n          chart.update(\"none\");\r\n        },\r\n      },\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n};\r\n\r\nconst arr_colors = [\"81,205,160\", \"109,120,173\", \"224,125,117\"];\r\n\r\nconst Landmark = ({ sensores }) => {\r\n  const chartRef = useRef(null);\r\n  const arr_clean = sensores[0].map(() => {\r\n    return [];\r\n  });\r\n  const [accordion, setAccordion] = useState();\r\n  const [labels, setLabels] = useState([]);\r\n  const [values, setValues] = useState(arr_clean);\r\n  const [disponibilidad, setDisponibilidad] = useState(false);\r\n\r\n  const { graficasDatos } = store.getState();\r\n\r\n  const ultimoDato = (oldData, newData) => {\r\n    if (oldData.length < graficasDatos.corto) return [...oldData, newData];\r\n    else\r\n      return [\r\n        ...oldData.slice(\r\n          oldData.length - (graficasDatos.corto - 1),\r\n          oldData.length\r\n        ),\r\n        newData,\r\n      ];\r\n  };\r\n\r\n  const inicializar = () => {\r\n    let arr_dates = [];\r\n    let matrix_val = [...arr_clean];\r\n    sensores.forEach((sensor) => {\r\n      if (sensor[0].landmark === null) {\r\n        return;\r\n      }\r\n      setDisponibilidad(true);\r\n      arr_dates.push(sensor[0].fecha);\r\n      let arr = [];\r\n      for (let i = 0; i < sensor.length; i++) {\r\n        arr.push(ultimoDato(matrix_val[i], sensor[i].landmark.nivel[1]));\r\n      }\r\n      matrix_val = [...arr];\r\n    });\r\n    setValues(matrix_val);\r\n    setLabels(arr_dates);\r\n  };\r\n\r\n  const actualizar = () => {\r\n    if (sensores[0][0].landmark === null) {\r\n      return;\r\n    }\r\n    setDisponibilidad(true);\r\n    setLabels((old) => {\r\n      return ultimoDato(old, sensores[0][0].fecha);\r\n    });\r\n    setValues((old) => {\r\n      let arr = [];\r\n      for (let i = 0; i < sensores[0].length; i++) {\r\n        arr.push(ultimoDato(old[i], sensores[0][i].landmark.nivel[1]));\r\n      }\r\n      return arr;\r\n    });\r\n  };\r\n\r\n  const resetZoom = () => {\r\n    chartRef.current.resetZoom();\r\n  };\r\n\r\n  useEffect(() => {\r\n    Chart.register(zoom);\r\n    if (sensores.length > 1) inicializar();\r\n    else if (sensores.length === 1) actualizar();\r\n  }, [sensores]);\r\n\r\n  return (\r\n    <>\r\n      {disponibilidad ? (\r\n        <div>\r\n          <div\r\n            className=\"container-fluid\"\r\n            style={{ minHeight: \"40vh\", maxHeight: \"50vh\" }}\r\n          >\r\n            <Line\r\n              data={data(labels, values, arr_colors, sensores[0])}\r\n              options={options}\r\n              ref={chartRef}\r\n            />\r\n            <CButton className=\"boton-reset\" onClick={resetZoom}>\r\n              Restablecer Zoom\r\n            </CButton>\r\n          </div>\r\n          <div className=\"mt-5\">\r\n            {sensores[0].map((sensor, idx) => {\r\n              return (\r\n                <div id=\"accordion\" key={idx}>\r\n                  <CCard className=\"mb-0\">\r\n                    <CCardHeader className=\"contenedor-cabecera\">\r\n                      <CButton\r\n                        block\r\n                        className=\"text-left m-0 p-0 \"\r\n                        onClick={() =>\r\n                          setAccordion(accordion === idx ? null : idx)\r\n                        }\r\n                      >\r\n                        <h5 className=\"m-0 p-0\">\r\n                          <span className=\"text-color\">\r\n                            {\" \"}\r\n                            {sensor.nombre} ({sensor.alias}){\" \"}\r\n                          </span>\r\n                        </h5>\r\n                      </CButton>\r\n                    </CCardHeader>\r\n                    <CCollapse show={accordion === idx}>\r\n                      <CCardBody>\r\n                        <pre>\r\n                          <h6>Fecha : {sensor.fecha} </h6>\r\n                        </pre>\r\n                        <pre>\r\n                          <h6>\r\n                            Valor (actual) :{\" \"}\r\n                            {sensor.landmark.nivel[1].toFixed(4)}\r\n                          </h6>\r\n                        </pre>\r\n                        <pre>\r\n                          <h6>\r\n                            Cambio t : {(sensor.landmark.deltai / 2).toFixed(4)}{\" \"}\r\n                            min\r\n                          </h6>\r\n                        </pre>\r\n                        <pre>\r\n                          <h6>\r\n                            Cambio f(t) : {sensor.landmark.deltay.toFixed(4)}\r\n                          </h6>\r\n                        </pre>\r\n                      </CCardBody>\r\n                    </CCollapse>\r\n                  </CCard>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"Información no disponible\"\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Landmark;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  CButton,\r\n  CCollapse,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n} from \"@coreui/react\";\r\nimport { Chart, Line } from \"react-chartjs-2\";\r\nimport \"./Graficas.css\";\r\nimport zoom from \"chartjs-plugin-zoom\";\r\nimport store from \"src/store\";\r\n\r\nconst data = (labels, values, arr_colors, etiquetas) => {\r\n  let hour = [];\r\n  let arr_values = [];\r\n  if (labels.length > 1) {\r\n    labels.forEach((label) => {\r\n      hour.push(label.slice(11, label.length));\r\n    });\r\n  }\r\n  values.forEach((v, idx) => {\r\n    arr_values.push({\r\n      label: `${etiquetas[idx].alias}`,\r\n      data: v,\r\n      fill: false,\r\n      backgroundColor: `rgb(${arr_colors[idx]})`,\r\n      borderColor: `rgb(${arr_colors[idx]}, 0.2)`,\r\n    });\r\n  });\r\n\r\n  return {\r\n    labels: hour,\r\n    datasets: arr_values,\r\n  };\r\n};\r\n\r\nconst options = {\r\n  scales: {\r\n    y: {\r\n      grace: \"0.25%\",\r\n    },\r\n  },\r\n  plugins: {\r\n    zoom: {\r\n      pan: {\r\n        enabled: true,\r\n        mode: \"xy\",\r\n      },\r\n      zoom: {\r\n        wheel: {\r\n          enabled: true,\r\n        },\r\n        pinch: {\r\n          enabled: true,\r\n        },\r\n        mode: \"xy\",\r\n        onZoomComplete({ chart }) {\r\n          chart.update(\"none\");\r\n        },\r\n      },\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n};\r\n\r\nconst arr_colors = [\"81,205,160\", \"109,120,173\", \"224,125,117\"];\r\n\r\nconst Peligrosidad = ({ sensores }) => {\r\n  const chartRef = useRef(null);\r\n  const arr_clean = sensores[0].map(() => {\r\n    return [];\r\n  });\r\n  const [accordion, setAccordion] = useState();\r\n  const [labels, setLabels] = useState([]);\r\n  const [values, setValues] = useState(arr_clean);\r\n  const [disponibilidad, setDisponibilidad] = useState(false);\r\n\r\n  const { graficasDatos } = store.getState();\r\n\r\n  const ultimoDato = (oldData, newData) => {\r\n    if (oldData.length < graficasDatos.corto) return [...oldData, newData];\r\n    else\r\n      return [\r\n        ...oldData.slice(\r\n          oldData.length - (graficasDatos.corto - 1),\r\n          oldData.length\r\n        ),\r\n        newData,\r\n      ];\r\n  };\r\n\r\n  const inicializar = () => {\r\n    let arr_dates = [];\r\n    let matrix_val = [...arr_clean];\r\n    sensores.forEach((sensor) => {\r\n      if (sensor[0].peligrosidad === null) {\r\n        return;\r\n      }\r\n      setDisponibilidad(true);\r\n      arr_dates.push(sensor[0].fecha);\r\n      let arr = [];\r\n      for (let i = 0; i < sensor.length; i++) {\r\n        arr.push(\r\n          ultimoDato(matrix_val[i], sensor[i].peligrosidad.peligrosidad[1])\r\n        );\r\n      }\r\n      matrix_val = [...arr];\r\n    });\r\n    setValues(matrix_val);\r\n    setLabels(arr_dates);\r\n  };\r\n  const actualizar = () => {\r\n    if (sensores[0][0].peligrosidad === null) {\r\n      return;\r\n    }\r\n    setDisponibilidad(true);\r\n    setLabels((old) => {\r\n      return ultimoDato(old, sensores[0][0].fecha);\r\n    });\r\n    setValues((old) => {\r\n      let arr = [];\r\n      for (let i = 0; i < sensores[0].length; i++) {\r\n        arr.push(\r\n          ultimoDato(old[i], sensores[0][i].peligrosidad.peligrosidad[1])\r\n        );\r\n      }\r\n      return arr;\r\n    });\r\n  };\r\n\r\n  const resetZoom = () => {\r\n    chartRef.current.resetZoom();\r\n  };\r\n\r\n  useEffect(() => {\r\n    Chart.register(zoom);\r\n    if (sensores.length > 1) inicializar();\r\n    else if (sensores.length === 1) actualizar();\r\n  }, [sensores]);\r\n  return (\r\n    <>\r\n      {disponibilidad ? (\r\n        <div>\r\n          <div\r\n            className=\"container-fluid\"\r\n            style={{ minHeight: \"40vh\", maxHeight: \"50vh\" }}\r\n          >\r\n            <Line\r\n              data={data(labels, values, arr_colors, sensores[0])}\r\n              options={options}\r\n              ref={chartRef}\r\n            />\r\n            <CButton className=\"boton-reset\" onClick={resetZoom}>\r\n              Restablecer Zoom\r\n            </CButton>\r\n          </div>\r\n          <div className=\"mt-5\">\r\n            {sensores[0].map((sensor, idx) => {\r\n              return (\r\n                <div id=\"accordion\" key={idx}>\r\n                  <CCard className=\"mb-0\">\r\n                    <CCardHeader className=\"contenedor-cabecera\">\r\n                      <CButton\r\n                        block\r\n                        className=\"text-left m-0 p-0 \"\r\n                        onClick={() =>\r\n                          setAccordion(accordion === idx ? null : idx)\r\n                        }\r\n                      >\r\n                        <h5 className=\"m-0 p-0\">\r\n                          <span className=\"text-color\">\r\n                            {\" \"}\r\n                            {sensor.nombre} ({sensor.alias}){\" \"}\r\n                          </span>\r\n                        </h5>\r\n                      </CButton>\r\n                    </CCardHeader>\r\n                    <CCollapse show={accordion === idx}>\r\n                      <CCardBody>\r\n                        <pre>\r\n                          <h6>Fecha : {sensor.fecha} </h6>\r\n                        </pre>\r\n                        <pre>\r\n                          <h6>\r\n                            Tendencia (sostenida) :{\" \"}\r\n                            {sensor.peligrosidad.peligrosidad[0].toFixed(4)}\r\n                          </h6>\r\n                        </pre>\r\n                        <pre>\r\n                          <h6>\r\n                            Tendencia (actual) :{\" \"}\r\n                            {sensor.peligrosidad.peligrosidad[1].toFixed(4)}\r\n                          </h6>\r\n                        </pre>\r\n                        <pre>\r\n                          <h6>\r\n                            Cambio f(t) (sostenido) :{\" \"}\r\n                            {sensor.peligrosidad.deltay[1].toFixed(4)}\r\n                          </h6>\r\n                        </pre>\r\n                        <pre>\r\n                          <h6>\r\n                            Cambio f(t) (actual) :{\" \"}\r\n                            {sensor.peligrosidad.deltay[1].toFixed(4)}\r\n                          </h6>\r\n                        </pre>\r\n                      </CCardBody>\r\n                    </CCollapse>\r\n                  </CCard>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"Información no disponible\"\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Peligrosidad;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CSelect,\r\n  CRow,\r\n  CCol,\r\n} from \"@coreui/react\";\r\nimport Basica from \"./Basica\";\r\nimport Landmark from \"./Landmark\";\r\nimport Peligrosidad from \"./Peligrosidad\";\r\nimport \"./Graficas.css\";\r\n\r\n\r\nconst Graficas = ({ graficaActiva, idx }) => {\r\n  const [custom, setCustom] = useState(\"Basica\");\r\n\r\n  const handleChange = (e) => {\r\n    setCustom(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <CCard className=\"shadow\" key={idx}>\r\n      <CCardHeader className=\"contenedor-cabecera\">\r\n        <CRow className=\"justify-content-between align-items-center\">\r\n          <CCol sm=\"6\" className=\"my-2\">\r\n            <h5 className=\"m-0\">{graficaActiva.nombre}</h5>\r\n          </CCol>\r\n          <CCol sm=\"6\" className=\"my-2\">\r\n            <CCol xs=\"12\">\r\n              <CSelect\r\n                custom\r\n                name=\"select\"\r\n                id=\"select\"\r\n                value={custom}\r\n                onChange={handleChange}\r\n              >\r\n                <option value=\"Basica\">Basica</option>\r\n                <option value=\"Nivel\">Nivel</option>\r\n                <option value=\"Tendencia\">Tendencia</option>\r\n              </CSelect>\r\n            </CCol>\r\n          </CCol>\r\n        </CRow>\r\n      </CCardHeader>\r\n      <CCardBody>\r\n        <div className={custom === \"Basica\" ? \"\" : \"ocultar\"}>\r\n          <Basica sensores={graficaActiva.sensores} />\r\n        </div>\r\n        <div className={custom === \"Nivel\" ? \"\" : \"ocultar\"}>\r\n          <Landmark sensores={graficaActiva.sensores} />\r\n        </div>\r\n        <div className={custom === \"Tendencia\" ? \"\" : \"ocultar\"}>\r\n          <Peligrosidad sensores={graficaActiva.sensores} />\r\n        </div>\r\n      </CCardBody>\r\n    </CCard>\r\n  );\r\n};\r\n\r\nexport default Graficas;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport {\r\n  getLandmarksAPI,\r\n  getPaquetesAPI,\r\n  getPeligrosidadAPI,\r\n  getRecursosAPI,\r\n} from \"src/helpers/peticionesAPI\";\r\nimport Loader from \"src/reusable/Loader\";\r\nimport Graficas from \"./Graficas\";\r\nimport \"./Graficas.css\";\r\nimport store from \"src/store\";\r\n\r\nconst Custom = ({ nombreTarjeta }) => {\r\n  const [graficasActivas, setGraficasActivas] = useState([]);\r\n  const [cargando, setCargando] = useState(true);\r\n  const {graficasDatos} = store.getState();\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n  const nombre = nombreTarjeta;\r\n\r\n  const getData = async () => {\r\n    const { graficas, sensores } = await getRecursosAPI(nombre, token);\r\n\r\n    let str_sensores = [];\r\n    sensores.forEach((sensor) => {\r\n      str_sensores.push(`${nombre}.S${sensor.index}`);\r\n    });\r\n\r\n    let [valor,land,peligro] = await Promise.all([\r\n                                      getPaquetesAPI(str_sensores, token, graficasDatos.corto),\r\n                                      getLandmarksAPI(str_sensores, token, graficasDatos.corto),\r\n                                      getPeligrosidadAPI(str_sensores, token, graficasDatos.corto)\r\n                                    ]);\r\n\r\n    valor.sensores = valor.sensores.reverse();\r\n    land.sensores = land.sensores.reverse();\r\n    peligro.sensores = peligro.sensores.reverse();\r\n\r\n    let arr_graficas = [];\r\n    graficas.forEach((grafica) => {\r\n      let arr_grafica = [];\r\n      for (let i = 0; i < valor.sensores.length; i++) {\r\n        let arr = [];\r\n        grafica.sensores.forEach((sensor) => {\r\n          if (sensores[sensor].estado === \"activo\") {\r\n            arr.push({\r\n              nombre: sensores[sensor].nombre,\r\n              alias: sensores[sensor].alias,\r\n              ...valor.sensores[i][sensor],\r\n              ...land.sensores[i][sensor],\r\n              ...peligro.sensores[i][sensor],\r\n            });\r\n          }\r\n        });\r\n        if (arr.length > 0) {\r\n          arr_grafica.push(arr);\r\n        }\r\n      }\r\n      if (arr_grafica.length > 0)\r\n        arr_graficas.push({ nombre: grafica.nombre, sensores: arr_grafica });\r\n    });\r\n\r\n    setGraficasActivas(arr_graficas);\r\n  };\r\n\r\n  const getIntervalo = async () => {\r\n    return setInterval(async () => {\r\n      const { graficas, sensores } = await getRecursosAPI(nombre, token);\r\n\r\n      let str_sensores = [];\r\n      sensores.forEach((sensor) => {\r\n        str_sensores.push(`${nombre}.S${sensor.index}`);\r\n      });\r\n      \r\n      const [valor,land,peligro] = await Promise.all([\r\n        getPaquetesAPI(str_sensores, token, 1),\r\n        getLandmarksAPI(str_sensores, token, 1),\r\n        getPeligrosidadAPI(str_sensores, token, 1)\r\n      ]);\r\n\r\n      let arr_graficas = [];\r\n      graficas.forEach((grafica) => {\r\n        let arr_grafica = [];\r\n        for (let i = 0; i < valor.sensores.length; i++) {\r\n          let arr = [];\r\n          grafica.sensores.forEach((sensor) => {\r\n            if (sensores[sensor].estado === \"activo\") {\r\n              arr.push({\r\n                nombre: sensores[sensor].nombre,\r\n                alias: sensores[sensor].alias,\r\n                ...valor.sensores[i][sensor],\r\n                ...land.sensores[i][sensor],\r\n                ...peligro.sensores[i][sensor],\r\n              });\r\n            }\r\n          });\r\n          if (arr.length > 0) arr_grafica.push(arr);\r\n        }\r\n        if (arr_grafica.length > 0)\r\n          arr_graficas.push({ nombre: grafica.nombre, sensores: arr_grafica });\r\n      });\r\n      setGraficasActivas(arr_graficas);\r\n    }, 30000);\r\n  };\r\n\r\n  useEffect(async () => {\r\n    await getData();\r\n    const intervalo = getIntervalo();\r\n    setCargando(false);\r\n    return () => clearInterval(intervalo);\r\n  }, []);\r\n\r\n  if (cargando)\r\n    return (\r\n      <div style={{ display: \"grid\", placeItems: \"center\", height: \"40vh\" }}>\r\n        <Loader height=\"10vh\" />\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div>\r\n      <CRow class=\"row w-100\">\r\n        {graficasActivas.map((graficaActiva, idx) => {\r\n          return  <CCol sm=\"12\" md=\"6\"  key={idx}>\r\n                    <Graficas graficaActiva={graficaActiva} idx={idx} key={idx} />\r\n                  </CCol>\r\n        })}\r\n      </CRow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Custom;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { CCard, CCardBody, CRow, CCol, CCardHeader } from \"@coreui/react\";\r\nimport { getRecursosAPI, getLandmarksAPI } from \"../../../helpers/peticionesAPI\";\r\nimport Landmark from \"./Landmark\";\r\nimport store from \"src/store\";\r\n\r\nconst Lanmarks = ({nombreTarjeta}) => {\r\n  const [graficasActivas, setGraficasActivas] = useState([]);\r\n  const {graficasDatos} = store.getState();  \r\n  const token = localStorage.getItem(\"token\");\r\n  const nombre = nombreTarjeta;  \r\n\r\n  const getData = async () => {\r\n\r\n    const { graficas, sensores } = await getRecursosAPI(nombre, token);\r\n    \r\n    let str_sensores = [];\r\n    sensores.forEach((sensor) => {\r\n      str_sensores.push(`${nombre}.S${sensor.index}`);\r\n    });\r\n\r\n    let datos = await getLandmarksAPI(str_sensores, token, graficasDatos.corto);\r\n\r\n    datos.sensores = datos.sensores.reverse();\r\n    let arr_graficas = [];\r\n    graficas.forEach((grafica) => {\r\n      let arr_grafica = [];\r\n      for (let i = 0; i < datos.sensores.length; i++) {\r\n        let arr = [];\r\n        grafica.sensores.forEach((sensor) => {\r\n          if (sensores[sensor].estado === \"activo\") {\r\n            arr.push({\r\n              nombre: sensores[sensor].nombre,\r\n              alias: sensores[sensor].alias,\r\n              ...datos.sensores[i][sensor],\r\n            });\r\n          }\r\n        });\r\n        if (arr.length > 0) arr_grafica.push(arr);\r\n      }\r\n      if (arr_grafica.length > 0)\r\n        arr_graficas.push({ nombre: grafica.nombre, sensores: arr_grafica });\r\n    });\r\n\r\n    setGraficasActivas(arr_graficas);\r\n  };\r\n  const getSecuencia = () => {\r\n    return setInterval(async () => {\r\n      const { graficas, sensores } = await getRecursosAPI(nombre, token);\r\n\r\n      let str_sensores = [];\r\n      sensores.forEach((sensor) => {\r\n        str_sensores.push(`${nombre}.S${sensor.index}`);\r\n      });\r\n      const datos = await getLandmarksAPI(str_sensores, token, 1);\r\n      let arr_graficas = [];\r\n      graficas.forEach((grafica) => {\r\n        let arr_grafica = [];\r\n        for (let i = 0; i < datos.sensores.length; i++) {\r\n          let arr = [];\r\n          grafica.sensores.forEach((sensor) => {\r\n            if (sensores[sensor].estado === \"activo\") {\r\n              arr.push({\r\n                nombre: sensores[sensor].nombre,\r\n                alias: sensores[sensor].alias,\r\n                ...datos.sensores[i][sensor],\r\n              });\r\n            }\r\n          });\r\n          if (arr.length > 0) arr_grafica.push(arr);\r\n        }\r\n        if (arr_grafica.length > 0)\r\n          arr_graficas.push({ nombre: grafica.nombre, sensores: arr_grafica });\r\n      });\r\n      setGraficasActivas(arr_graficas);\r\n    }, 30000);\r\n  };\r\n\r\n  useEffect( async () => {\r\n    await getData();\r\n    const intervalo = getSecuencia();\r\n    return () => clearInterval(intervalo);\r\n  }, []);\r\n\r\n  return (\r\n    <CRow>\r\n      {graficasActivas.map((graficaActiva, idx) => {\r\n        return (\r\n          <CCol sm=\"12\" md=\"6\" key={idx}>\r\n            <CCard className=\"shadow\">\r\n              <CCardHeader className=\"contenedor-cabecera\">\r\n                <h6 className=\"m-2\">{graficaActiva.nombre}</h6>\r\n              </CCardHeader>\r\n              <CCardBody>\r\n                <Landmark sensores={graficaActiva.sensores} />\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n        );\r\n      })}\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport default Lanmarks;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Basica from \"./Basica\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow\r\n} from \"@coreui/react\";\r\nimport { getPaquetesAPI, getRecursosAPI } from \"src/helpers/peticionesAPI\";\r\nimport \"./Graficas.css\";\r\nimport store from \"src/store\";\r\n\r\nconst Basicas = ({nombreTarjeta}) => {\r\n  const [graficasActivas, setGraficasActivas] = useState([]);\r\n  const {graficasDatos} = store.getState();  \r\n\r\n  const token = localStorage.getItem(\"token\");\r\n  const nombre = nombreTarjeta;\r\n\r\n  const getData = async () => {\r\n    const { graficas, sensores } = await getRecursosAPI(nombre, token);\r\n    let str_sensores = [];\r\n    sensores.forEach((sensor) => {\r\n      str_sensores.push(`${nombre}.S${sensor.index}`);\r\n    });\r\n\r\n    let datos = await getPaquetesAPI(str_sensores, token, graficasDatos.corto);\r\n\r\n    datos.sensores = datos.sensores.reverse();\r\n    let arr_graficas = [];\r\n    graficas.forEach((grafica) => {\r\n      let arr_grafica = [];\r\n      for (let i = 0; i < datos.sensores.length; i++) {\r\n        let arr = [];\r\n        grafica.sensores.forEach((sensor) => {\r\n          if (sensores[sensor].estado == \"activo\") {\r\n            arr.push({\r\n              nombre: sensores[sensor].nombre,\r\n              alias: sensores[sensor].alias,\r\n              ...datos.sensores[i][sensor],\r\n            });\r\n          }\r\n        });\r\n        if (arr.length > 0) {\r\n          arr_grafica.push(arr);\r\n        }\r\n      }\r\n      if (arr_grafica.length > 0)\r\n        arr_graficas.push({ nombre: grafica.nombre, sensores: arr_grafica });\r\n    });\r\n    setGraficasActivas(arr_graficas);\r\n  };\r\n\r\n  const getIntervalo = async () => {\r\n    return setInterval(async () => {\r\n      const { graficas, sensores } = await getRecursosAPI(nombre, token);\r\n      let str_sensores = [];\r\n      sensores.forEach((sensor) => {\r\n        str_sensores.push(`${nombre}.S${sensor.index}`);\r\n      });\r\n      const datos = await getPaquetesAPI(str_sensores, token, 1);\r\n      let arr_graficas = [];\r\n      graficas.forEach((grafica) => {\r\n        let arr_grafica = [];\r\n        for (let i = 0; i < datos.sensores.length; i++) {\r\n          let arr = [];\r\n          grafica.sensores.forEach((sensor) => {\r\n            if (sensores[sensor].estado == \"activo\") {\r\n              arr.push({\r\n                nombre: sensores[sensor].nombre,\r\n                alias: sensores[sensor].alias,\r\n                ...datos.sensores[i][sensor],\r\n              });\r\n            }\r\n          });\r\n          if (arr.length > 0) arr_grafica.push(arr);\r\n        }\r\n        if (arr_grafica.length > 0)\r\n          arr_graficas.push({ nombre: grafica.nombre, sensores: arr_grafica });\r\n      });\r\n      setGraficasActivas(arr_graficas);\r\n    }, 30000);\r\n  };\r\n\r\n  useEffect(async () => {\r\n    await getData();\r\n    const intervalo = getIntervalo();\r\n    return () => clearInterval(intervalo);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <CRow>\r\n        {graficasActivas.map((graficaActiva, idx) => {\r\n          return (\r\n            <CCol sm=\"12\" md=\"6\" key={idx}>\r\n              <CCard className=\"shadow\" >\r\n                <CCardHeader className=\"contenedor-cabecera\">\r\n                  <h6 className=\"m-2\">{graficaActiva.nombre}</h6>\r\n                </CCardHeader>\r\n                <CCardBody>\r\n                  <Basica sensores={graficaActiva.sensores} />\r\n                </CCardBody>\r\n              </CCard>\r\n            </CCol>\r\n          )\r\n        })}\r\n      </CRow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Basicas;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { CCard, CCardBody, CRow, CCol, CCardHeader } from \"@coreui/react\";\r\nimport {\r\n  getRecursosAPI,\r\n  getPeligrosidadAPI,\r\n} from \"../../../helpers/peticionesAPI\";\r\nimport Peligrosidad from \"./Peligrosidad\";\r\nimport store from \"src/store\";\r\n\r\nconst Peligrosidades = ({nombreTarjeta}) => {\r\n  const [graficasActivas, setGraficasActivas] = useState([]);\r\n  const {graficasDatos} = store.getState();    \r\n\r\n  const token = localStorage.getItem(\"token\");\r\n  const nombre = nombreTarjeta;\r\n\r\n  const getData = async () => {\r\n    const { graficas, sensores } = await getRecursosAPI(nombre, token);\r\n\r\n    let str_sensores = [];\r\n    sensores.forEach((sensor) => {\r\n      str_sensores.push(`${nombre}.S${sensor.index}`);\r\n    });\r\n    let datos = await getPeligrosidadAPI(str_sensores, token, graficasDatos.corto);\r\n    datos.sensores = datos.sensores.reverse();\r\n    let arr_graficas = [];\r\n    graficas.forEach((grafica) => {\r\n      let arr_grafica = [];\r\n      for (let i = 0; i < datos.sensores.length; i++) {\r\n        let arr = [];\r\n        grafica.sensores.forEach((sensor) => {\r\n          if (sensores[sensor].estado === \"activo\") {\r\n            arr.push({\r\n              nombre: sensores[sensor].nombre,\r\n              alias: sensores[sensor].alias,\r\n              ...datos.sensores[i][sensor],\r\n            });\r\n          }\r\n        });\r\n        if (arr.length > 0) arr_grafica.push(arr);\r\n      }\r\n      if (arr_grafica.length > 0)\r\n        arr_graficas.push({ nombre: grafica.nombre, sensores: arr_grafica });\r\n    });\r\n    setGraficasActivas(arr_graficas);\r\n  };\r\n\r\n  const getIntervalo = () => {\r\n    return setInterval(async () => {\r\n      const { graficas, sensores } = await getRecursosAPI(nombre, token);\r\n\r\n      let str_sensores = [];\r\n      sensores.forEach((sensor) => {\r\n        str_sensores.push(`${nombre}.S${sensor.index}`);\r\n      });\r\n      const datos = await getPeligrosidadAPI(str_sensores, token, 1);\r\n      let arr_graficas = [];\r\n      graficas.forEach((grafica) => {\r\n        let arr_grafica = [];\r\n        for (let i = 0; i < datos.sensores.length; i++) {\r\n          let arr = [];\r\n          grafica.sensores.forEach((sensor) => {\r\n            if (sensores[sensor].estado === \"activo\") {\r\n              arr.push({\r\n                nombre: sensores[sensor].nombre,\r\n                alias: sensores[sensor].alias,\r\n                ...datos.sensores[i][sensor],\r\n              });\r\n            }\r\n          });\r\n          if (arr.length > 0) arr_grafica.push(arr);\r\n        }\r\n        if (arr_grafica.length > 0)\r\n          arr_graficas.push({ nombre: grafica.nombre, sensores: arr_grafica });\r\n      });\r\n      setGraficasActivas(arr_graficas);\r\n    }, 30000);\r\n  };\r\n\r\n  useEffect(async () => {\r\n    await getData();\r\n    const intervalo =  getIntervalo();\r\n    return () => clearInterval(intervalo);\r\n  }, []);\r\n\r\n  return (\r\n    <CRow>\r\n      {graficasActivas.map((graficaActiva, idx) => {\r\n        return (\r\n          <CCol sm=\"12\" md=\"6\" key={idx}>\r\n            <CCard className=\"shadow\">\r\n              <CCardHeader className=\"contenedor-cabecera\">\r\n                <h6 className=\"m-2\">{graficaActiva.nombre}</h6>\r\n              </CCardHeader>\r\n              <CCardBody>\r\n                <Peligrosidad sensores={graficaActiva.sensores} />\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n        );\r\n      })}\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport default Peligrosidades;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CContainer,\r\n  CRow,\r\n  CCol,\r\n  CCard,\r\n  CCardHeader,\r\n  CCardBody,\r\n  CTabs,\r\n  CNav,\r\n  CNavItem,\r\n  CNavLink,\r\n  CTabContent,\r\n  CTabPane,\r\n} from \"@coreui/react\";\r\nimport Custom from \"./Custom\";\r\nimport Lanmarks from \"./Landmarks\";\r\nimport Basicas from \"./Basicas\";\r\nimport Peligrosidades from \"./Peligrosidades\";\r\nimport iconoactivo from \"../../../assets/icons/activo.svg\";\r\nimport iconoinactivo from \"../../../assets/icons/inactivo.svg\";\r\nimport Loader from \"src/reusable/Loader\";\r\nimport { getTarjeta } from \"src/helpers/peticionesAPI\";\r\nimport \"./Graficas.css\";\r\nimport Navegacion, { NavegacionTipo } from \"src/vistas/general/Navegacion\";\r\n\r\nconst Layout = ({\r\n  match: {\r\n    params: { nombreTarjeta },\r\n  },\r\n  history,\r\n}) => {\r\n  const [data, setData] = useState({\r\n    estado: \"inactivo\",\r\n    icono: iconoinactivo,\r\n  });\r\n  const [cargando, setCargando] = useState(true);\r\n  const token = localStorage.getItem(\"token\");\r\n  const nombre = nombreTarjeta;\r\n\r\n  const getData = async () => {\r\n    const { estado } = await getTarjeta(nombre, token);\r\n    const icono = estado == \"activo\" ? iconoactivo : iconoinactivo;\r\n    const estadoformato = estado[0].toUpperCase() + estado.substring(1);\r\n    setData({ estado: estadoformato, icono });\r\n  };\r\n  const getIntervalo = () => {\r\n    return setInterval(async () => {\r\n      const { estado } = await getTarjeta(nombre, token);\r\n      const icono = estado == \"activo\" ? iconoactivo : iconoinactivo;\r\n      const estadoformato = estado[0].toUpperCase() + estado.substring(1);\r\n      setData({ estado: estadoformato, icono });\r\n    }, 30000);\r\n  };\r\n\r\n  useEffect(async () => {\r\n    await getData();\r\n    const intervalo = getIntervalo();\r\n    setCargando(false);\r\n    return () => clearInterval(intervalo);\r\n  }, []);\r\n\r\n  if (cargando)\r\n    return (\r\n      <div style={{ display: \"grid\", placeItems: \"center\", height: \"40vh\" }}>\r\n        <Loader height=\"10vh\" />\r\n      </div>\r\n    );\r\n  return (\r\n    <CContainer fluid>\r\n      <Navegacion\r\n        activo={2}\r\n        tipo={NavegacionTipo.TARJETA}\r\n        history={history}\r\n        direccion={nombre}\r\n      />\r\n      <CRow>\r\n        <CCol sm=\"12\">\r\n          <CCard className=\"shadow\">\r\n            <CCardBody>\r\n              <CRow className=\"justify-content-between\">\r\n                <CCol className=\"col-3 d-flex align-items-center\">\r\n                  <img src={data.icono} className=\"icono\" />\r\n                  <h4 className=\"ml-2\">{data.estado}</h4>\r\n                </CCol>\r\n                <CCol className=\"col-9 text-right\">\r\n                  <h5>Tarjeta</h5>\r\n                  <h3>{nombre}</h3>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol sm=\"12\">\r\n          <CCard className=\"shadow\">\r\n            <CCardHeader className=\"contenedor-cabecera\">\r\n              <h4>\r\n                <i className=\"far fa-chart-bar\"></i> <span> Graficas </span>\r\n              </h4>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CTabs activeTab=\"custom\">\r\n                <CNav variant=\"tabs\">\r\n                  <CNavItem>\r\n                    <CNavLink data-tab=\"custom\">Custom</CNavLink>\r\n                  </CNavItem>\r\n                  <CNavItem>\r\n                    <CNavLink data-tab=\"basica\">Basica</CNavLink>\r\n                  </CNavItem>\r\n                  <CNavItem>\r\n                    <CNavLink data-tab=\"nivel\">Nivel</CNavLink>\r\n                  </CNavItem>\r\n                  <CNavItem>\r\n                    <CNavLink data-tab=\"tendencia\">Tendencia</CNavLink>\r\n                  </CNavItem>\r\n                </CNav>\r\n                <CTabContent>\r\n                  <CTabPane data-tab=\"custom\">\r\n                    <div className=\"mt-4\">\r\n                      <Custom nombreTarjeta={nombreTarjeta} />\r\n                    </div>\r\n                  </CTabPane>\r\n                  <CTabPane data-tab=\"basica\">\r\n                    <div className=\"mt-4\">\r\n                      <Basicas nombreTarjeta={nombreTarjeta} />\r\n                    </div>\r\n                  </CTabPane>\r\n                  <CTabPane data-tab=\"nivel\">\r\n                    <div className=\"mt-4\">\r\n                      <Lanmarks nombreTarjeta={nombreTarjeta} />\r\n                    </div>\r\n                  </CTabPane>\r\n                  <CTabPane data-tab=\"tendencia\">\r\n                    <div className=\"mt-4\">\r\n                      <Peligrosidades nombreTarjeta={nombreTarjeta} />\r\n                    </div>\r\n                  </CTabPane>\r\n                </CTabContent>\r\n              </CTabs>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </CContainer>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n"],"sourceRoot":""}