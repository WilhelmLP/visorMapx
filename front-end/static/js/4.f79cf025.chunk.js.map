{"version":3,"sources":["assets/icons/inactivo.svg","vistas/general/Navegacion.js","vistas/proyectos/graficas_proyectos/ProyectosBasica.js","vistas/proyectos/graficas_proyectos/ProyectosLandmark.js","vistas/proyectos/graficas_proyectos/ProyectosPeligrosidad.js","vistas/proyectos/informacion_proyectos/ProyectosInformacionSensor.js","vistas/proyectos/informacion_proyectos/ProyectosInformacionSensores.js","vistas/proyectos/informacion_proyectos/ProyectosInformacion.js"],"names":["NavegacionTipo","TARJETA","ELEMENTO","PROYECTO","Navegacion","activo","tipo","history","direccion","servicios","useContext","ServicesContext","navegacion","useMemo","push","titulo","id","key","undefined","includes","className","variant","map","item","index","active","onClick","click","data","labels","values","arr_colors","etiquetas","hour","arr_values","length","forEach","label","slice","v","idx","alias","fill","backgroundColor","borderColor","datasets","options","scales","y","grace","plugins","zoom","pan","enabled","mode","wheel","pinch","onZoomComplete","chart","update","maintainAspectRatio","ProyectosBasica","sensores","chartRef","useRef","graficasDatos","store","getState","arr_clean","datos","useState","setLabels","accordion","setAccordion","setValues","ultimoDato","oldData","newData","corto","useEffect","Chart","register","arr_dates","matrix_val","sensor","fecha","arr","i","valor","inicializar","old","style","minHeight","maxHeight","ref","current","resetZoom","block","nombre","show","toFixed","ProyectosLandmark","landmark","nivel","deltai","deltay","ProyectosPeligrosidad","peligrosidad","ProyectosInformacionSensor","sm","unidades","estado","toUpperCase","md","src","iconoactivo","iconoinactivo","ProyectosInformacionSensores","info","ProyectosInformacion","idProyecto","match","params","identificador","descripcion","area","linea","proceso","icono","informacion","setInformacion","cargando","setCargando","graficasProyectoInfo","setGraficasProyectoInfo","SA","SI","GA","GI","VA","VI","general","setGeneral","token","localStorage","getItem","getValor","a","getProyectoById","graficas_proyecto","graficas","sensores_proyecto","variables_proyecto","variables","tarjeta","substr","getRecursosAPI","lista_sensores","str_sensores","str_variables","variable","Promise","all","getPaquetesAPI","getLandmarksAPI","getPeligrosidadAPI","getProyectosPaquetesApi","sensores_datos","land","peligro","variables_datos","reverse","sensore","countSA","countSI","countGA","countGI","countVA","countVI","arr_graficas","grafica","arr_grafica","arr_variables","arr_sensores","direcciones","variable_index","find","parseInt","substring","direccion_proyecto","direccion_sensor","sensor_index","indexOf","sensor_info","estadoformato","getIntervalo","setInterval","intervalo","clearInterval","display","placeItems","height","Loader","fluid","accent","activeTab"],"mappings":"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","file":"static/js/4.f79cf025.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/inactivo.c25580cd.svg\";","import React, { useContext, useMemo} from \"react\";\r\nimport { CCard, CCol, CRow, CNav, CNavItem, CNavLink } from \"@coreui/react\";\r\nimport { ServicesContext } from \"src/containers/UserContext\";\r\nimport propTypes from \"prop-types\";\r\nimport \"./Navegacion.css\";\r\n\r\nconst NavegacionTipo = {\r\n  TARJETA : 0,\r\n  ELEMENTO : 1,\r\n  PROYECTO : 2 \r\n}\r\nconst Navegacion = ({activo = 0,tipo = NavegacionTipo.ELEMENTO, history, direccion}) => {\r\n\r\n  const servicios = useContext(ServicesContext);\r\n  const navegacion = useMemo(() =>{\r\n    const navegacion = [];\r\n    switch(tipo) {\r\n      case NavegacionTipo.TARJETA:\r\n        navegacion.push({titulo:\"Información\",id:0,direccion:\"informacion\",key:\"tinformacion\"});\r\n        if(servicios!=undefined){\r\n          if(servicios.includes(\"TC\"))\r\n            navegacion.push({titulo:\"Configuración\",id:1,direccion:\"configuracion\",key:\"tconfiguracion\"});\r\n          if(servicios.includes(\"TGI\") || servicios.includes(\"TGII\"))\r\n            navegacion.push({titulo:\"Graficas\",id:2,direccion:\"graficas\",key:\"tgraficas\"});\r\n          if(servicios.includes(\"TE\"))\r\n            navegacion.push({titulo:\"Estadistica\",id:3,direccion:\"estadistica\",key:\"testadistica\"});\r\n        }        \r\n        break;        \r\n      case NavegacionTipo.ELEMENTO:\r\n        navegacion.push({titulo:\"Información\",id:0,direccion:\"informacion\",key:\"einformacion\"});\r\n        if(servicios!=undefined){\r\n          if(servicios.includes(\"EC\"))\r\n            navegacion.push({titulo:\"Configuración\",id:1,direccion:\"configuracion\",key:\"econfiguracion\"});\r\n          if(servicios.includes(\"EGI\") || servicios.includes(\"EGII\"))\r\n            navegacion.push({titulo:\"Graficas\",id:2, direccion:\"graficas\",key:\"egraficas\"});\r\n          if(servicios.includes(\"EE\"))\r\n            navegacion.push({titulo:\"Estadistica\",id:3,direccion:\"estadistica\",key:\"3estadistica\"});\r\n        }        \r\n        break;\r\n      case NavegacionTipo.PROYECTO:\r\n        if(servicios!=undefined){\r\n          if(servicios.includes(\"EGI\") || servicios.includes(\"EGII\"))\r\n            navegacion.push({titulo:\"Información\",id:0,direccion:\"informacion\",key:\"pinformacion\"});\r\n          if(servicios.includes(\"EC\"))\r\n            navegacion.push({titulo:\"Configuración\",id:1,direccion:\"configuracion\",key:\"pconfiguracion\"});\r\n          if(servicios.includes(\"EE\"))\r\n            navegacion.push({titulo:\"Estadistica\",id:2,direccion:\"estadistica\",key:\"pestadistica\"});\r\n          navegacion.push({titulo:\"Elementos\",id:3,direccion:\"elementos\",key:\"pelementos\"});\r\n        }\r\n        break;        \r\n    } \r\n    return navegacion;\r\n  },[servicios,tipo]);\r\n  \r\n  const click = (index) => {\r\n    \r\n    switch(tipo) {\r\n      case NavegacionTipo.TARJETA:\r\n        history.push(`/tarjetas/${direccion}/${navegacion[index].direccion}`);           \r\n        break;        \r\n      case NavegacionTipo.ELEMENTO:\r\n        history.push(`/elementos/${direccion}/${navegacion[index].direccion}`);         \r\n       break;\r\n      case NavegacionTipo.PROYECTO:\r\n        history.push(`/proyectos/${direccion}/${navegacion[index].direccion}`);         \r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CCard className=\"navegacion py-1\">                                                          \r\n        <div className=\"panel d-flex justify-content-end\">\r\n          <CNav variant=\"tabs\">\r\n            {navegacion.map((item,index) => {\r\n              return (\r\n                <CNavItem key={item.key}>\r\n                  {\r\n                    (item.id==activo)?\r\n                    <CNavLink className=\"link\" active>{item.titulo}</CNavLink>\r\n                    :\r\n                    <CNavLink className=\"link\" onClick={()=>click(index)}>{item.titulo}</CNavLink>\r\n                  }        \r\n                </CNavItem>\r\n              );\r\n            })}  \r\n          </CNav>            \r\n        </div>                  \r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nNavegacion.propTypes = {\r\n  activo: propTypes.number,\r\n  tipo: propTypes.oneOf([0,1,2]),\r\n  direccion: propTypes.string,\r\n  history: propTypes.object\r\n};\r\n\r\nexport {NavegacionTipo};\r\nexport default Navegacion;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  CButton,\r\n  CCollapse,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n} from \"@coreui/react\";\r\nimport { Chart, Line } from \"react-chartjs-2\";\r\nimport \"./ProyectosGraficas.css\";\r\nimport zoom from \"chartjs-plugin-zoom\";\r\nimport store from \"src/store\";\r\n\r\nconst data = (labels, values, arr_colors, etiquetas) => {\r\n  let hour = [];\r\n  let arr_values = [];\r\n  if (labels.length > 1) {\r\n    labels.forEach((label) => {\r\n      hour.push(label.slice(11, label.length));\r\n    });\r\n  }\r\n  values.forEach((v, idx) => {\r\n    arr_values.push({\r\n      label: `${etiquetas[idx].alias}`,\r\n      data: v,\r\n      fill: false,\r\n      backgroundColor: `rgb(${arr_colors[idx]})`,\r\n      borderColor: `rgb(${arr_colors[idx]}, 0.2)`,\r\n    });\r\n  });\r\n\r\n  return {\r\n    labels: hour,\r\n    datasets: arr_values,\r\n  };\r\n};\r\n\r\nconst options = {\r\n  scales: {\r\n    y: {\r\n      grace: \"0.25%\",\r\n    },\r\n  },\r\n  plugins: {\r\n    zoom: {\r\n      pan: {\r\n        enabled: true,\r\n        mode: \"xy\",\r\n      },\r\n      zoom: {\r\n        wheel: {\r\n          enabled: true,\r\n        },\r\n        pinch: {\r\n          enabled: true,\r\n        },\r\n        mode: \"xy\",\r\n        onZoomComplete({ chart }) {\r\n          chart.update(\"none\");\r\n        },\r\n      },\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n};\r\n\r\nconst arr_colors = [\"81,205,160\", \"109,120,173\", \"224,125,117\"];\r\n\r\nconst ProyectosBasica = ({ sensores }) => {\r\n  const chartRef = useRef(null);\r\n  const { graficasDatos } = store.getState();\r\n  const arr_clean = sensores[0].datos.map(() => {\r\n    return [];\r\n  });\r\n  const [labels, setLabels] = useState([]);\r\n  const [accordion, setAccordion] = useState();\r\n  const [values, setValues] = useState(arr_clean);\r\n\r\n  const ultimoDato = (oldData, newData) => {\r\n    if (oldData.length < graficasDatos.corto) {\r\n      return [...oldData, newData];\r\n    } else {\r\n      return [\r\n        ...oldData.slice(\r\n          oldData.length - (graficasDatos.corto - 1),\r\n          oldData.length\r\n        ),\r\n        newData,\r\n      ];\r\n    }\r\n  };\r\n\r\n  const inicializar = () => {\r\n    let arr_dates = [];\r\n    let matrix_val = [...arr_clean];\r\n    sensores.forEach((sensor) => {\r\n      arr_dates.push(sensor.datos[0].fecha);\r\n      let arr = [];\r\n      for (let i = 0; i < sensor.datos.length; i++) {\r\n        arr.push(ultimoDato(matrix_val[i], sensor.datos[i].valor));\r\n      }\r\n      matrix_val = [...arr];\r\n    });\r\n    setValues(matrix_val);\r\n    setLabels(arr_dates);\r\n  };\r\n\r\n  const actualizar = () => {\r\n    setLabels((old) => {\r\n      return ultimoDato(old, sensores[0][0].fecha);\r\n    });\r\n    setValues((old) => {\r\n      let arr = [];\r\n      for (let i = 0; i < sensores[0].length; i++) {\r\n        arr.push(ultimoDato(old[i], sensores[0][i].valor));\r\n      }\r\n      return arr;\r\n    });\r\n  };\r\n\r\n  const resetZoom = () => {\r\n    chartRef.current.resetZoom();\r\n  };\r\n\r\n  useEffect(() => {\r\n    Chart.register(zoom);\r\n    if (sensores.length > 1) inicializar();\r\n    else if (sensores.length == 1) actualizar();\r\n  }, [sensores]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container-fluid\"\r\n        style={{ minHeight: \"40vh\", maxHeight: \"50vh\" }}\r\n      >\r\n        <Line\r\n          data={data(labels, values, arr_colors, sensores[0].datos)}\r\n          options={options}\r\n          ref={chartRef}\r\n        />\r\n        <CButton className=\"boton-reset\" onClick={resetZoom}>\r\n          Restablecer Zoom\r\n        </CButton>\r\n      </div>\r\n      <div className=\"mt-5\">\r\n        {sensores[0].datos.map((sensor, idx) => {\r\n          return (\r\n            <div id=\"accordion\" key={idx}>\r\n              <CCard className=\"mb-0\">\r\n                <CCardHeader className=\"contenedor-cabecera\">\r\n                  <CButton\r\n                    block\r\n                    className=\"text-left m-0 p-0 \"\r\n                    onClick={() => setAccordion(accordion === idx ? null : idx)}\r\n                  >\r\n                    <h5 className=\"m-0 p-0\">\r\n                      <span className=\"text-color\">\r\n                        {sensor.tipo} - {sensor.nombre} ({sensor.alias})\r\n                      </span>\r\n                    </h5>\r\n                  </CButton>\r\n                </CCardHeader>\r\n                <CCollapse show={accordion === idx}>\r\n                  <CCardBody>\r\n                    <pre>\r\n                      <h6>Fecha : {labels[labels.length - 1]} </h6>\r\n                    </pre>\r\n                    <pre>\r\n                      <h6>\r\n                        Valor (actual) :{\" \"}\r\n                        {values[idx][values[idx].length - 1] != undefined\r\n                          ? values[idx][values[idx].length - 1].toFixed(4)\r\n                          : 0}\r\n                      </h6>\r\n                    </pre>\r\n                  </CCardBody>\r\n                </CCollapse>\r\n              </CCard>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProyectosBasica;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Chart, Line } from \"react-chartjs-2\";\r\nimport {\r\n  CButton,\r\n  CCollapse,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n} from \"@coreui/react\";\r\nimport zoom from \"chartjs-plugin-zoom\";\r\nimport store from \"src/store\";\r\n\r\nconst data = (labels, values, arr_colors, etiquetas) => {\r\n  let hour = [];\r\n  let arr_values = [];\r\n  if (labels.length > 1) {\r\n    labels.forEach((label) => {\r\n      hour.push(label.slice(11, label.length));\r\n    });\r\n  }\r\n  values.forEach((v, idx) => {\r\n    arr_values.push({\r\n      label: `${etiquetas[idx].alias}`,\r\n      data: v,\r\n      fill: false,\r\n      backgroundColor: `rgb(${arr_colors[idx]})`,\r\n      borderColor: `rgb(${arr_colors[idx]}, 0.2)`,\r\n    });\r\n  });\r\n\r\n  return {\r\n    labels: hour,\r\n    datasets: arr_values,\r\n  };\r\n};\r\n\r\nconst options = {\r\n  scales: {\r\n    y: {\r\n      grace: \"0.25%\",\r\n    },\r\n  },\r\n  plugins: {\r\n    zoom: {\r\n      pan: {\r\n        enabled: true,\r\n        mode: \"xy\",\r\n      },\r\n      zoom: {\r\n        wheel: {\r\n          enabled: true,\r\n        },\r\n        pinch: {\r\n          enabled: true,\r\n        },\r\n        mode: \"xy\",\r\n        onZoomComplete({ chart }) {\r\n          chart.update(\"none\");\r\n        },\r\n      },\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n};\r\nconst arr_colors = [\"81,205,160\", \"109,120,173\", \"224,125,117\"];\r\n\r\nconst ProyectosLandmark = ({ sensores }) => {\r\n  const chartRef = useRef(null);\r\n  const { graficasDatos } = store.getState();\r\n  const arr_clean = sensores[0].datos.map(() => {\r\n    return [];\r\n  });\r\n  const [accordion, setAccordion] = useState();\r\n  const [labels, setLabels] = useState([]);\r\n  const [values, setValues] = useState(arr_clean);\r\n\r\n  const ultimoDato = (oldData, newData) => {\r\n    if (oldData.length < graficasDatos.corto) return [...oldData, newData];\r\n    else\r\n      return [\r\n        ...oldData.slice(\r\n          oldData.length - (graficasDatos.corto - 1),\r\n          oldData.length\r\n        ),\r\n        newData,\r\n      ];\r\n  };\r\n\r\n  const inicializar = () => {\r\n    let arr_dates = [];\r\n    let matrix_val = [...arr_clean];\r\n    sensores.forEach((sensor) => {\r\n      arr_dates.push(sensor.datos[0].fecha);\r\n      let arr = [];\r\n      for (let i = 0; i < sensor.datos.length; i++) {\r\n        arr.push(ultimoDato(matrix_val[i], sensor.datos[i].landmark.nivel[1]));\r\n      }\r\n      matrix_val = [...arr];\r\n    });\r\n    setValues(matrix_val);\r\n    setLabels(arr_dates);\r\n  };\r\n\r\n  const actualizar = () => {\r\n    setLabels((old) => {\r\n      return ultimoDato(old, sensores[0][0].fecha);\r\n    });\r\n    setValues((old) => {\r\n      let arr = [];\r\n      for (let i = 0; i < sensores[0].length; i++) {\r\n        arr.push(ultimoDato(old[i], sensores[0][i].landmark.nivel[1]));\r\n      }\r\n      return arr;\r\n    });\r\n  };\r\n\r\n  const resetZoom = () => {\r\n    chartRef.current.resetZoom();\r\n  };\r\n\r\n  useEffect(() => {\r\n    Chart.register(zoom);\r\n    if (sensores.length > 1) inicializar();\r\n    else if (sensores.length == 1) actualizar();\r\n  }, [sensores]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container-fluid\"\r\n        style={{ minHeight: \"40vh\", maxHeight: \"50vh\" }}\r\n      >\r\n        <Line\r\n          data={data(labels, values, arr_colors, sensores[0].datos)}\r\n          options={options}\r\n          ref={chartRef}\r\n        />\r\n        <CButton className=\"boton-reset\" onClick={resetZoom}>\r\n          Restablecer Zoom\r\n        </CButton>\r\n      </div>\r\n      <div className=\"mt-5\">\r\n        {sensores[0].datos.map((sensor, idx) => {\r\n          return (\r\n            <div id=\"accordion\" key={idx}>\r\n              <CCard className=\"mb-0 shadow\">\r\n                <CCardHeader className=\"contenedor-cabecera\">\r\n                  <CButton\r\n                    block\r\n                    className=\"text-left m-0 p-0 \"\r\n                    onClick={() => setAccordion(accordion === idx ? null : idx)}\r\n                  >\r\n                    <h5 className=\"m-0 p-0\">\r\n                      <span className=\"text-color\">\r\n                        {sensor.tipo} - {sensor.nombre} ({sensor.alias})\r\n                      </span>\r\n                    </h5>\r\n                  </CButton>\r\n                </CCardHeader>\r\n                <CCollapse show={accordion === idx}>\r\n                  <CCardBody>\r\n                    <pre>\r\n                      <h6>Fecha : {sensor.fecha} </h6>\r\n                    </pre>\r\n                    <pre>\r\n                      <h6>\r\n                        Valor (actual) : {sensor.landmark.nivel[1].toFixed(4)}\r\n                      </h6>\r\n                    </pre>\r\n                    <pre>\r\n                      <h6>\r\n                        Cambio t : {(sensor.landmark.deltai / 2).toFixed(4)} min\r\n                      </h6>\r\n                    </pre>\r\n                    <pre>\r\n                      <h6>Cambio f(t) : {sensor.landmark.deltay.toFixed(4)}</h6>\r\n                    </pre>\r\n                  </CCardBody>\r\n                </CCollapse>\r\n              </CCard>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProyectosLandmark;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Chart, Line } from \"react-chartjs-2\";\r\nimport {\r\n  CButton,\r\n  CCollapse,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n} from \"@coreui/react\";\r\nimport \"./ProyectosGraficas.css\";\r\nimport zoom from \"chartjs-plugin-zoom\";\r\nimport store from \"src/store\";\r\n\r\nconst data = (labels, values, arr_colors, etiquetas) => {\r\n  let hour = [];\r\n  let arr_values = [];\r\n  if (labels.length > 1) {\r\n    labels.forEach((label) => {\r\n      hour.push(label.slice(11, label.length));\r\n    });\r\n  }\r\n  values.forEach((v, idx) => {\r\n    arr_values.push({\r\n      label: `${etiquetas[idx].alias}`,\r\n      data: v,\r\n      fill: false,\r\n      backgroundColor: `rgb(${arr_colors[idx]})`,\r\n      borderColor: `rgb(${arr_colors[idx]}, 0.2)`,\r\n    });\r\n  });\r\n\r\n  return {\r\n    labels: hour,\r\n    datasets: arr_values,\r\n  };\r\n};\r\n\r\nconst options = {\r\n  scales: {\r\n    y: {\r\n      grace: \"0.25%\",\r\n    },\r\n  },\r\n  plugins: {\r\n    zoom: {\r\n      pan: {\r\n        enabled: true,\r\n        mode: \"xy\",\r\n      },\r\n      zoom: {\r\n        wheel: {\r\n          enabled: true,\r\n        },\r\n        pinch: {\r\n          enabled: true,\r\n        },\r\n        mode: \"xy\",\r\n        onZoomComplete({ chart }) {\r\n          chart.update(\"none\");\r\n        },\r\n      },\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n};\r\nconst arr_colors = [\"81,205,160\", \"109,120,173\", \"224,125,117\"];\r\n\r\nconst ProyectosPeligrosidad = ({ sensores }) => {\r\n  const chartRef = useRef(null);\r\n  const { graficasDatos } = store.getState();\r\n  const arr_clean = sensores[0].datos.map(() => {\r\n    return [];\r\n  });\r\n  const [accordion, setAccordion] = useState();\r\n  const [labels, setLabels] = useState([]);\r\n  const [values, setValues] = useState(arr_clean);\r\n\r\n  const ultimoDato = (oldData, newData) => {\r\n    if (oldData.length < graficasDatos.corto) return [...oldData, newData];\r\n    else\r\n      return [\r\n        ...oldData.slice(\r\n          oldData.length - (graficasDatos.corto - 1),\r\n          oldData.length\r\n        ),\r\n        newData,\r\n      ];\r\n  };\r\n\r\n  const inicializar = () => {\r\n    let arr_dates = [];\r\n    let matrix_val = [...arr_clean];\r\n    sensores.forEach((sensor) => {\r\n      arr_dates.push(sensor.datos[0].fecha);\r\n      let arr = [];\r\n      for (let i = 0; i < sensor.datos.length; i++) {\r\n        arr.push(\r\n          ultimoDato(\r\n            matrix_val[i],\r\n            sensor.datos[i].peligrosidad.peligrosidad[1]\r\n          )\r\n        );\r\n      }\r\n      matrix_val = [...arr];\r\n    });\r\n    setValues(matrix_val);\r\n    setLabels(arr_dates);\r\n  };\r\n\r\n  const actualizar = () => {\r\n    setLabels((old) => {\r\n      return ultimoDato(old, sensores[0][0].fecha);\r\n    });\r\n    setValues((old) => {\r\n      let arr = [];\r\n      for (let i = 0; i < sensores[0].length; i++) {\r\n        arr.push(\r\n          ultimoDato(old[i], sensores[0][i].peligrosidad.peligrosidad[1])\r\n        );\r\n      }\r\n      return arr;\r\n    });\r\n  };\r\n\r\n  const resetZoom = () => {\r\n    chartRef.current.resetZoom();\r\n  };\r\n\r\n  useEffect(() => {\r\n    Chart.register(zoom);\r\n    if (sensores.length > 1) inicializar();\r\n    else if (sensores.length == 1) actualizar();\r\n  }, [sensores]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container-fluid\"\r\n        style={{ minHeight: \"40vh\", maxHeight: \"50vh\" }}\r\n      >\r\n        <Line\r\n          data={data(labels, values, arr_colors, sensores[0].datos)}\r\n          options={options}\r\n          ref={chartRef}\r\n        />\r\n        <CButton className=\"boton-reset\" onClick={resetZoom}>\r\n          Restablecer Zoom\r\n        </CButton>\r\n      </div>\r\n      <div className=\"mt-5\">\r\n        {sensores[0].datos.map((sensor, idx) => {\r\n          return (\r\n            <div id=\"accordion\" key={idx}>\r\n              <CCard className=\"mb-0 shadow\">\r\n                <CCardHeader className=\"contenedor-cabecera\">\r\n                  <CButton\r\n                    block\r\n                    className=\"text-left m-0 p-0 \"\r\n                    onClick={() => setAccordion(accordion === idx ? null : idx)}\r\n                  >\r\n                    <h5 className=\"m-0 p-0\">\r\n                      <span className=\"text-color\">\r\n                        {sensor.tipo} - {sensor.nombre} ({sensor.alias})\r\n                      </span>\r\n                    </h5>\r\n                  </CButton>\r\n                </CCardHeader>\r\n                <CCollapse show={accordion === idx}>\r\n                  <CCardBody>\r\n                    <pre>\r\n                      <h6>Fecha : {sensor.fecha} </h6>\r\n                    </pre>\r\n                    <pre>\r\n                      <h6>\r\n                        Tendencia (sostenida) :\r\n                        {sensor.peligrosidad.peligrosidad[0].toFixed(4)}\r\n                      </h6>\r\n                    </pre>\r\n                    <pre>\r\n                      <h6>\r\n                        Tendencia (actual) :\r\n                        {sensor.peligrosidad.peligrosidad[1].toFixed(4)}\r\n                      </h6>\r\n                    </pre>\r\n                    <pre>\r\n                      <h6>\r\n                        Delta f(t) (sostenido) :\r\n                        {sensor.peligrosidad.deltay[1].toFixed(4)}\r\n                      </h6>\r\n                    </pre>\r\n                    <pre>\r\n                      <h6>\r\n                        Delta f(t) (actual) :\r\n                        {sensor.peligrosidad.deltay[1].toFixed(4)}\r\n                      </h6>\r\n                    </pre>\r\n                  </CCardBody>\r\n                </CCollapse>\r\n              </CCard>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProyectosPeligrosidad;\r\n","import React from \"react\";\r\nimport { CCard, CCardBody, CCardHeader, CCol, CRow } from \"@coreui/react\";\r\nimport iconoactivo from '../../../assets/icons/activo.svg';\r\nimport iconoinactivo from '../../../assets/icons/inactivo.svg';\r\nimport \"./ProyectosInformacion.css\";\r\n\r\nconst ProyectosInformacionSensor = ({ sensor }) => {\r\n  return (\r\n    <CCol>\r\n      <CCard className=\"shadow\">\r\n        <CCardHeader className=\"contenedor-cabecera\">\r\n          <h5 className=\"m-0\">{sensor.nombre}</h5>\r\n        </CCardHeader>\r\n        {sensor.valor === null ? (\r\n          <CCardBody>\r\n            Información no disponible\r\n          </CCardBody>\r\n          ) : (\r\n          <CCardBody>\r\n          <CRow className=\"align-items-center justify-content-center\">\r\n            <CCol sm=\"8\">\r\n              <p><b>{sensor.valor.toFixed(2)} {sensor.unidades}</b></p>\r\n              {sensor.tipo == \"S\" ? (\r\n                <p>NORMALIZACIÓN : {sensor.landmark.nivel[1].toFixed(4)}</p>\r\n              ) : undefined}\r\n              {sensor.tipo == \"S\" ? (\r\n                <p>\r\n                  TENDENCIA : {sensor.peligrosidad.peligrosidad[0].toFixed(4)}\r\n                </p>\r\n              ) : undefined}\r\n              <p>{sensor.estado.toUpperCase()} </p>\r\n            </CCol>\r\n            <CCol md=\"4\">\r\n              {sensor.tipo == \"S\" ? (\r\n                sensor.estado == \"activo\" &&\r\n                sensor.landmark.nivel[1] <= 1 &&\r\n                sensor.landmark.nivel[1] >= 0 ? (\r\n                  <div className=\"contenedor-icono\">\r\n                    <img src={iconoactivo} className=\"icono\"/>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"contenedor-icono\">\r\n                    <img src={iconoinactivo} className=\"icono\"/>\r\n                  </div>\r\n                )\r\n              ) : sensor.estado == \"activo\" ? (\r\n                  <div className=\"contenedor-icono\">\r\n                    <img src={iconoactivo} className=\"icono\"/>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"contenedor-icono\">\r\n                    <img src={iconoinactivo} className=\"icono\"/>\r\n                  </div>\r\n              )}\r\n            </CCol>\r\n          </CRow>\r\n        </CCardBody>\r\n          )\r\n        }\r\n      </CCard>\r\n    </CCol>\r\n  );\r\n};\r\n\r\nexport default ProyectosInformacionSensor;\r\n","import React from \"react\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport ProyectosInformacionSensor from \"./ProyectosInformacionSensor\";\r\n\r\nconst ProyectosInformacionSensores = ({ sensores }) => {\r\n  return (\r\n    <>\r\n      {sensores.map((sensor, idx) => {\r\n        if(idx === sensores.length -1){\r\n          return sensor.datos.map((info, idx) => {\r\n            return <ProyectosInformacionSensor key={idx} sensor={info} />;\r\n          })\r\n        }\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProyectosInformacionSensores;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  CContainer,\r\n  CRow,\r\n  CCol,\r\n  CCard,\r\n  CCardHeader,\r\n  CCardBody,\r\n  CTabs,\r\n  CNav,\r\n  CNavItem,\r\n  CNavLink,\r\n  CTabContent,\r\n  CTabPane,\r\n  CListGroup,\r\n  CListGroupItem,\r\n  CButton,\r\n} from \"@coreui/react\";\r\nimport {\r\n  getLandmarksAPI,\r\n  getPaquetesAPI,\r\n  getPeligrosidadAPI,\r\n  getProyectoById,\r\n  getProyectosPaquetesApi,\r\n  getRecursosAPI,\r\n} from \"src/helpers/peticionesAPI\";\r\nimport ProyectosInformacionSensores from \"./ProyectosInformacionSensores\";\r\nimport \"./ProyectosInformacion.css\";\r\nimport Navegacion,{NavegacionTipo} from \"src/vistas/general/Navegacion\";\r\nimport Loader from \"src/reusable/Loader\";\r\nimport iconoactivo from \"../../../assets/icons/activo.svg\";\r\nimport iconoinactivo from \"../../../assets/icons/inactivo.svg\";\r\nimport ProyectosBasica from \"../graficas_proyectos/ProyectosBasica\";\r\nimport ProyectosLandmark from \"../graficas_proyectos/ProyectosLandmark\";\r\nimport ProyectosPeligrosidad from \"../graficas_proyectos/ProyectosPeligrosidad\";\r\nimport store from \"src/store\";\r\n\r\nconst ProyectosInformacion = ({\r\n  match: {\r\n    params: { idProyecto },\r\n  },\r\n  history\r\n}) => {\r\n  \r\n  const {graficasDatos} = store.getState();\r\n  const [informacion, setInformacion] = useState({\r\n    nombre: \"\",\r\n    identificador:\"\",\r\n    descripcion:\"\",\r\n    area:\"\",\r\n    linea:\"\",\r\n    proceso:\"\",      \r\n    tipo:\"\",\r\n    estado: \"inactivo\",\r\n    icono: iconoinactivo,\r\n  });\r\n  const [cargando, setCargando] = useState(true);\r\n  const [sensoresProyectoInfo, setSensoresProyectoInfo] = useState([]);\r\n  const [graficasProyectoInfo, setGraficasProyectoInfo] = useState([]);\r\n  const [general, setGeneral] = useState({\r\n    SA: 0,\r\n    SI: 0,\r\n    GA: 0,\r\n    GI: 0,\r\n    VA: 0,\r\n    VI: 0,\r\n  });\r\n  const token = localStorage.getItem(\"token\");\r\n  const id = idProyecto;\r\n\r\n  const getValor = async () => {\r\n    const {\r\n      nombre,\r\n      identificador,      \r\n      descripcion,\r\n      area,\r\n      linea,\r\n      proceso,\r\n      tipo,\r\n      estado,\r\n      graficas: graficas_proyecto,\r\n      sensores: sensores_proyecto,\r\n      variables: variables_proyecto,\r\n    } = await getProyectoById(token, id);\r\n    let tarjeta = \"\";\r\n    if(sensores_proyecto.length > 0)\r\n      tarjeta = sensores_proyecto[0].direccion.substr(0,5);   \r\n    const { sensores: lista_sensores } = await getRecursosAPI(tarjeta, token);\r\n\r\n    let str_sensores = [];\r\n    let str_variables = [];\r\n    variables_proyecto.forEach((variable) => {\r\n      str_variables.push(`${id}.V${variable.index}`);\r\n    });\r\n    sensores_proyecto.forEach((sensor) => {\r\n      str_sensores.push(`${sensor.direccion}`);\r\n    });\r\n\r\n    let [\r\n      { sensores: sensores_datos },\r\n      land,\r\n      peligro,\r\n      { variables: variables_datos },\r\n    ] = await Promise.all([\r\n      getPaquetesAPI(str_sensores, token, graficasDatos.corto),\r\n      getLandmarksAPI(str_sensores, token, graficasDatos.corto),\r\n      getPeligrosidadAPI(str_sensores, token, graficasDatos.corto),\r\n      getProyectosPaquetesApi(str_variables, token, graficasDatos.corto),\r\n    ]);\r\n\r\n    sensores_datos        = sensores_datos.reverse();\r\n    land.sensore          = land.sensores.reverse();\r\n    peligro.sensores      = peligro.sensores.reverse();\r\n    variables_datos       = variables_datos.reverse();\r\n\r\n    let countSA = 0;\r\n    let countSI = 0;\r\n    let countGA = 0;\r\n    let countGI = 0;\r\n    let countVA = 0;\r\n    let countVI = 0;\r\n\r\n    let arr_graficas = [];\r\n    graficas_proyecto.forEach((grafica) => {\r\n      let tipo = ''\r\n      let arr_grafica = [];\r\n      for (let i = 0; i < variables_datos.length; i++) {\r\n        let arr_variables = [];\r\n        let arr_sensores = [];\r\n        grafica.direcciones.forEach((direccion) => {\r\n          if (direccion[0] === \"V\") {\r\n            tipo = 'variable'\r\n            const variable_index = variables_proyecto.find(\r\n              (variable) => variable.index === parseInt(direccion.substring(1))\r\n            );\r\n            if (variable_index.estado === \"activo\") {\r\n              if(i === 0)\r\n                countVA += 1;\r\n              arr_variables.push({\r\n                nombre: variable_index.nombre,\r\n                alias: variable_index.alias,\r\n                estado: variable_index.estado,\r\n                unidades: variable_index.unidades,\r\n                tipo: \"V\",\r\n                ...variables_datos[i][parseInt(variable_index.index)],\r\n              });\r\n            } else {\r\n              if(i === 0)\r\n                countVI += 1;\r\n            }\r\n          } else {\r\n            tipo = 'sensor'\r\n            const direccion_proyecto = parseInt(direccion.substring(1));\r\n            const direccion_sensor =\r\n              sensores_proyecto[direccion_proyecto].direccion;\r\n            const sensor_index = direccion_sensor.substring(\r\n              direccion_sensor.indexOf(\".\") + 2\r\n            );\r\n            const sensor_info = lista_sensores.find(\r\n              (sensor) => sensor.index === parseInt(sensor_index)\r\n            );\r\n            if (sensor_info.estado === \"activo\") {\r\n              if(i === 0)\r\n                countSA += 1;\r\n              arr_sensores.push({\r\n                nombre: sensor_info.nombre,\r\n                alias: sensor_info.alias,\r\n                estado: sensor_info.estado,\r\n                unidades: sensor_info.unidades,\r\n                tipo: \"S\",\r\n                ...sensores_datos[i][direccion_proyecto],\r\n                ...land.sensores[i][direccion_proyecto],\r\n                ...peligro.sensores[i][direccion_proyecto],\r\n              });\r\n            } else {\r\n              if(i === 0)\r\n                countSI += 1;\r\n            }\r\n          }\r\n        });\r\n        if (arr_variables.length > 0) {\r\n          arr_grafica.push({datos: arr_variables, tipo: 'variable'});\r\n        }\r\n        if (arr_sensores.length > 0) {\r\n          arr_grafica.push({datos: arr_sensores, tipo: 'sensor'});\r\n        }\r\n      }\r\n      if (arr_grafica.length > 0) {\r\n        countGA += 1;\r\n        arr_graficas.push({ nombre: grafica.nombre, datos: arr_grafica, tipo: tipo });\r\n      } else {\r\n        countGI += 1;\r\n      }\r\n    });\r\n    setGraficasProyectoInfo(arr_graficas);\r\n\r\n    const icono = estado == \"activo\" ? iconoactivo : iconoinactivo;\r\n    const estadoformato = estado[0].toUpperCase() + estado.substring(1);\r\n    setInformacion({\r\n      nombre,\r\n      identificador,      \r\n      descripcion,\r\n      area,\r\n      linea,\r\n      proceso,\r\n      tipo,\r\n      estado: estadoformato,\r\n      icono,\r\n    });\r\n\r\n    setGeneral({\r\n      SA: countSA,\r\n      SI: countSI,\r\n      GA: countGA,\r\n      GI: countGI,\r\n      VA: countVA,\r\n      VI: countVI,\r\n    });\r\n  };\r\n  const getIntervalo = async () => {\r\n    return setInterval(getValor, 30000);\r\n  };\r\n\r\n  useEffect(async () => {\r\n    await getValor();\r\n    const intervalo = getIntervalo();\r\n    setCargando(false);\r\n    return () => clearInterval(intervalo);\r\n  }, []);\r\n\r\n  if (cargando)\r\n    return (\r\n      <div style={{ display: \"grid\", placeItems: \"center\", height: \"40vh\" }}>\r\n        <Loader height=\"10vh\" />\r\n      </div>\r\n    );\r\n  return (\r\n    <CContainer fluid>\r\n      <Navegacion activo={0} tipo={NavegacionTipo.PROYECTO} history={history} direccion={id}/>\r\n      <CRow>\r\n        <CCol sm=\"12\">\r\n          <CCard className=\"shadow\">\r\n            <CCardBody>\r\n              <CRow className=\"justify-content-between\">\r\n                <CCol className=\"col-3 d-flex align-items-center\">\r\n                  <img src={informacion.icono} className=\"icono\" />\r\n                  <h4 className=\"ml-2\">{informacion.estado}</h4>\r\n                </CCol>\r\n                <CCol className=\"col-9 text-right\">\r\n                  <h5>Proyecto</h5>\r\n                  <h3>{`${informacion.nombre}`}</h3>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CRow>\r\n        <CCol>\r\n          <CCard className=\"shadow\">\r\n            <CCardHeader className=\"contenedor-cabecera-principal\">\r\n              General\r\n            </CCardHeader>\r\n\r\n            <CCardBody>\r\n              <CListGroup accent>\r\n                <CRow>\r\n                  <CCol sm=\"4\">\r\n                    <CListGroupItem accent=\"info\">Identificador :</CListGroupItem>\r\n                  </CCol>\r\n                  <CCol sm=\"4\" className=\"align-self-center\">\r\n                    {informacion.identificador}\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                  <CCol sm=\"4\">\r\n                    <CListGroupItem accent=\"info\">Descripcion :</CListGroupItem>\r\n                  </CCol>\r\n                  <CCol sm=\"4\" className=\"align-self-center\">\r\n                    {informacion.descripcion}\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                  <CCol sm=\"4\">\r\n                    <CListGroupItem accent=\"info\">Area :</CListGroupItem>\r\n                  </CCol>\r\n                  <CCol sm=\"4\" className=\"align-self-center\">\r\n                    {informacion.area}\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                  <CCol sm=\"4\">\r\n                    <CListGroupItem accent=\"info\">Linea :</CListGroupItem>\r\n                  </CCol>\r\n                  <CCol sm=\"4\" className=\"align-self-center\">\r\n                    {informacion.linea}\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                  <CCol sm=\"4\">\r\n                    <CListGroupItem accent=\"info\">Proceso :</CListGroupItem>\r\n                  </CCol>\r\n                  <CCol sm=\"4\" className=\"align-self-center\">\r\n                    {informacion.proceso}\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                  <CCol sm=\"4\">\r\n                    <CListGroupItem accent=\"info\">Tipo :</CListGroupItem>\r\n                  </CCol>\r\n                  <CCol sm=\"4\" className=\"align-self-center\">\r\n                    {informacion.tipo}\r\n                  </CCol>\r\n                </CRow>\r\n              </CListGroup>\r\n              <hr />\r\n              <CListGroup accent>\r\n                <CRow className=\"justify-content-end\">\r\n                  <CCol sm=\"3\" className=\"align-self-center encabezado_general\">\r\n                    Sensores\r\n                  </CCol>\r\n                  <CCol sm=\"3\" className=\"align-self-center encabezado_general\">\r\n                    Variables\r\n                  </CCol>\r\n                  <CCol sm=\"3\" className=\"align-self-center encabezado_general\">\r\n                    Grupos\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                  <CCol sm=\"3\">\r\n                    <CListGroupItem accent=\"dark\">Inactivos :</CListGroupItem>\r\n                  </CCol>\r\n                  <CCol sm=\"3\" className=\"align-self-center\">\r\n                    {general.SI}\r\n                  </CCol>\r\n                  <CCol sm=\"3\" className=\"align-self-center\">\r\n                    {general.VI}\r\n                  </CCol>\r\n                  <CCol sm=\"3\" className=\"align-self-center\">\r\n                    {general.GI}\r\n                  </CCol>\r\n                </CRow>\r\n\r\n                <CRow>\r\n                  <CCol sm=\"3\">\r\n                    <CListGroupItem accent=\"dark\">Activos :</CListGroupItem>\r\n                  </CCol>\r\n                  <CCol sm=\"3\" className=\"align-self-center\">\r\n                    {general.SA}\r\n                  </CCol>\r\n                  <CCol sm=\"3\" className=\"align-self-center\">\r\n                    {general.VA}\r\n                  </CCol>\r\n                  <CCol sm=\"3\" className=\"align-self-center\">\r\n                    {general.GA}\r\n                  </CCol>\r\n                </CRow>\r\n\r\n                <CRow>\r\n                  <CCol sm=\"3\">\r\n                    <CListGroupItem accent=\"dark\">Totales :</CListGroupItem>\r\n                  </CCol>\r\n                  <CCol sm=\"3\" className=\"align-self-center\">\r\n                    {general.SA + general.SI}\r\n                  </CCol>\r\n                  <CCol sm=\"3\" className=\"align-self-center\">\r\n                    {general.VA + general.VI}\r\n                  </CCol>\r\n                  <CCol sm=\"3\" className=\"align-self-center\">\r\n                    {general.GA + general.GI}\r\n                  </CCol>\r\n                </CRow>\r\n              </CListGroup>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol>\r\n          <CCard className=\"shadow\">\r\n            <CCardHeader className=\"contenedor-cabecera-principal\">\r\n              Sensores / Variables\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CTabs activeTab=\"basica\">\r\n                <CNav variant=\"tabs\">\r\n                  <CNavItem>\r\n                    <CNavLink data-tab=\"basica\">Basica</CNavLink>\r\n                  </CNavItem>\r\n                  <CNavItem>\r\n                    <CNavLink data-tab=\"nivel\">Nivel</CNavLink>\r\n                  </CNavItem>\r\n                  <CNavItem>\r\n                    <CNavLink data-tab=\"tendencia\">Tendencia</CNavLink>\r\n                  </CNavItem>\r\n                </CNav>\r\n                <CTabContent className=\"mt-4\">\r\n                  <CTabPane data-tab=\"basica\">\r\n                    {graficasProyectoInfo.map((grafica, idx) => {\r\n                      return (\r\n                        <CCard key={\"proyectos\" + idx}>\r\n                          <CCardHeader className=\"contenedor-cabecera-grafica\">\r\n                            <h4>{grafica.nombre}</h4>\r\n                          </CCardHeader>\r\n                          <CCardBody>\r\n                            <CRow>\r\n                              <CCol sm=\"6\">\r\n                                <ProyectosInformacionSensores\r\n                                  sensores={grafica.datos}\r\n                                />\r\n                              </CCol>\r\n                              <CCol sm=\"6\">\r\n                                <ProyectosBasica sensores={grafica.datos} />\r\n                              </CCol>\r\n                            </CRow>\r\n                          </CCardBody>\r\n                        </CCard>\r\n                      );\r\n                    })}\r\n                  </CTabPane>\r\n                  <CTabPane data-tab=\"nivel\">\r\n                    {graficasProyectoInfo.map((grafica, idx) => {\r\n                      return (\r\n                        <CCard key={\"proyectos\" + idx}>\r\n                          <CCardHeader className=\"contenedor-cabecera-grafica\">\r\n                            <h4>{grafica.nombre}</h4>\r\n                          </CCardHeader>\r\n                          <CCardBody>\r\n                            <CRow>\r\n                              <CCol sm=\"6\">\r\n                                <ProyectosInformacionSensores\r\n                                  sensores={grafica.datos}\r\n                                />\r\n                              </CCol>\r\n                              <CCol sm=\"6\">\r\n                                { grafica.tipo === 'sensor' ?  <ProyectosLandmark sensores={grafica.datos} /> : null}\r\n                              </CCol>\r\n                            </CRow>\r\n                          </CCardBody>\r\n                        </CCard>\r\n                      );\r\n                    })}\r\n                  </CTabPane>\r\n                  <CTabPane data-tab=\"tendencia\">\r\n                    {graficasProyectoInfo.map((grafica, idx) => {\r\n                      return (\r\n                        <CCard key={\"proyectos\" + idx}>\r\n                          <CCardHeader className=\"contenedor-cabecera-grafica\">\r\n                            <h4>{grafica.nombre}</h4>\r\n                          </CCardHeader>\r\n                          <CCardBody>\r\n                            <CRow>\r\n                              <CCol sm=\"6\">\r\n                                <ProyectosInformacionSensores\r\n                                  sensores={grafica.datos}\r\n                                />\r\n                              </CCol>\r\n                              <CCol sm=\"6\">\r\n                                { grafica.tipo === 'sensor' ?  <ProyectosPeligrosidad sensores={grafica.datos} /> : null}\r\n                              </CCol>\r\n                            </CRow>\r\n                          </CCardBody>\r\n                        </CCard>\r\n                      );\r\n                    })}\r\n                  </CTabPane>\r\n                </CTabContent>\r\n              </CTabs>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </CContainer>\r\n  );\r\n};\r\n\r\nexport default ProyectosInformacion;\r\n"],"sourceRoot":""}