{"version":3,"sources":["assets/icons/inactivo.svg","vistas/general/Navegacion.js","vistas/tarjetas/estadisticas/EstadisticasSensor.js","vistas/tarjetas/estadisticas/EstadisticaSensores.js","vistas/tarjetas/estadisticas/Estadisticas.js"],"names":["NavegacionTipo","TARJETA","ELEMENTO","PROYECTO","Navegacion","activo","tipo","history","direccion","servicios","useContext","ServicesContext","navegacion","useMemo","push","titulo","id","key","undefined","includes","className","variant","map","item","index","active","onClick","click","EstadisticasSensor","sensor","estado","toUpperCase","substring","icono","iconoactivo","iconoinactivo","tendencia","peligrosidad","sm","nombre","basica","src","actual","toFixed","unidades","min","promedio","max","nivelactual","nivelmin","nivelpromedio","nivelmax","paquetes","eficiencia","landmarks","deltai","deltaimin","deltaipromedio","deltaimax","deltay","deltaymin","deltaypromedio","deltaymax","landmark","EstadisticaSensores","sensores","idx","Estadisticas","nombreTarjeta","match","params","useState","graficasInfo","setGraficasInfo","sensoresInfo","setSensoresInfo","data","setData","cargando","setCargando","localStorage","getItem","token","getData","a","getTarjeta","graficas","str_sensores","forEach","getTarjetaEstadistica","estadistica","arr_sensores","i","length","alias","arr_graficas","grafica","arr_grafica","arr","estadoformato","useEffect","intervalo","setInterval","clearInterval","style","display","placeItems","height","Loader","fluid","activeTab"],"mappings":"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","file":"static/js/14.3f477c6f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/inactivo.c25580cd.svg\";","import React, { useContext, useMemo} from \"react\";\r\nimport { CCard, CCol, CRow, CNav, CNavItem, CNavLink } from \"@coreui/react\";\r\nimport { ServicesContext } from \"src/containers/UserContext\";\r\nimport propTypes from \"prop-types\";\r\nimport \"./Navegacion.css\";\r\n\r\nconst NavegacionTipo = {\r\n  TARJETA : 0,\r\n  ELEMENTO : 1,\r\n  PROYECTO : 2 \r\n}\r\nconst Navegacion = ({activo = 0,tipo = NavegacionTipo.ELEMENTO, history, direccion}) => {\r\n\r\n  const servicios = useContext(ServicesContext);\r\n  const navegacion = useMemo(() =>{\r\n    const navegacion = [];\r\n    switch(tipo) {\r\n      case NavegacionTipo.TARJETA:\r\n        navegacion.push({titulo:\"Información\",id:0,direccion:\"informacion\",key:\"tinformacion\"});\r\n        if(servicios!=undefined){\r\n          if(servicios.includes(\"TC\"))\r\n            navegacion.push({titulo:\"Configuración\",id:1,direccion:\"configuracion\",key:\"tconfiguracion\"});\r\n          if(servicios.includes(\"TGI\") || servicios.includes(\"TGII\"))\r\n            navegacion.push({titulo:\"Graficas\",id:2,direccion:\"graficas\",key:\"tgraficas\"});\r\n          if(servicios.includes(\"TE\"))\r\n            navegacion.push({titulo:\"Estadistica\",id:3,direccion:\"estadistica\",key:\"testadistica\"});\r\n        }        \r\n        break;        \r\n      case NavegacionTipo.ELEMENTO:\r\n        navegacion.push({titulo:\"Información\",id:0,direccion:\"informacion\",key:\"einformacion\"});\r\n        if(servicios!=undefined){\r\n          if(servicios.includes(\"EC\"))\r\n            navegacion.push({titulo:\"Configuración\",id:1,direccion:\"configuracion\",key:\"econfiguracion\"});\r\n          if(servicios.includes(\"EGI\") || servicios.includes(\"EGII\"))\r\n            navegacion.push({titulo:\"Graficas\",id:2, direccion:\"graficas\",key:\"egraficas\"});\r\n          if(servicios.includes(\"EE\"))\r\n            navegacion.push({titulo:\"Estadistica\",id:3,direccion:\"estadistica\",key:\"3estadistica\"});\r\n        }        \r\n        break;\r\n      case NavegacionTipo.PROYECTO:\r\n        if(servicios!=undefined){\r\n          if(servicios.includes(\"EGI\") || servicios.includes(\"EGII\"))\r\n            navegacion.push({titulo:\"Información\",id:0,direccion:\"informacion\",key:\"pinformacion\"});\r\n          if(servicios.includes(\"EC\"))\r\n            navegacion.push({titulo:\"Configuración\",id:1,direccion:\"configuracion\",key:\"pconfiguracion\"});\r\n          if(servicios.includes(\"EE\"))\r\n            navegacion.push({titulo:\"Estadistica\",id:2,direccion:\"estadistica\",key:\"pestadistica\"});\r\n          navegacion.push({titulo:\"Elementos\",id:3,direccion:\"elementos\",key:\"pelementos\"});\r\n        }\r\n        break;        \r\n    } \r\n    return navegacion;\r\n  },[servicios,tipo]);\r\n  \r\n  const click = (index) => {\r\n    \r\n    switch(tipo) {\r\n      case NavegacionTipo.TARJETA:\r\n        history.push(`/tarjetas/${direccion}/${navegacion[index].direccion}`);           \r\n        break;        \r\n      case NavegacionTipo.ELEMENTO:\r\n        history.push(`/elementos/${direccion}/${navegacion[index].direccion}`);         \r\n       break;\r\n      case NavegacionTipo.PROYECTO:\r\n        history.push(`/proyectos/${direccion}/${navegacion[index].direccion}`);         \r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CCard className=\"navegacion py-1\">                                                          \r\n        <div className=\"panel d-flex justify-content-end\">\r\n          <CNav variant=\"tabs\">\r\n            {navegacion.map((item,index) => {\r\n              return (\r\n                <CNavItem key={item.key}>\r\n                  {\r\n                    (item.id==activo)?\r\n                    <CNavLink className=\"link\" active>{item.titulo}</CNavLink>\r\n                    :\r\n                    <CNavLink className=\"link\" onClick={()=>click(index)}>{item.titulo}</CNavLink>\r\n                  }        \r\n                </CNavItem>\r\n              );\r\n            })}  \r\n          </CNav>            \r\n        </div>                  \r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nNavegacion.propTypes = {\r\n  activo: propTypes.number,\r\n  tipo: propTypes.oneOf([0,1,2]),\r\n  direccion: propTypes.string,\r\n  history: propTypes.object\r\n};\r\n\r\nexport {NavegacionTipo};\r\nexport default Navegacion;\r\n","import React from \"react\";\r\nimport { CCard, CCardBody, CCardHeader, CCol, CRow } from \"@coreui/react\";\r\nimport iconoactivo from \"../../../assets/icons/activo.svg\";\r\nimport iconoinactivo from \"../../../assets/icons/inactivo.svg\";\r\nimport \"./Estadisticas.css\";\r\n\r\nconst EstadisticasSensor = ({ sensor }) => {\r\n  const estado = sensor.estado[0].toUpperCase() + sensor.estado.substring(1);\r\n  const activo = sensor.estado == \"activo\";\r\n  const icono = activo ? iconoactivo : iconoinactivo;\r\n  let tendencia = 0;\r\n  if (sensor.peligrosidad !== null) {\r\n    tendencia =\r\n      sensor.peligrosidad.tendencia[0] + sensor.peligrosidad.tendencia[1];\r\n  }\r\n  return (\r\n    <CCol sm=\"12\">\r\n      <CCard>\r\n        <CCardHeader className=\"contenedor-cabecera card-head\">\r\n          <h5>{sensor.nombre}</h5>\r\n        </CCardHeader>\r\n        {sensor.basica === null || !activo ? (\r\n          <CCardBody className=\"shadow\">\r\n            <div className=\"container-fluid d-flex align-items-center my-4\">\r\n              <img src={icono} className=\"icono\" />\r\n              <h4 className=\"ml-2\">{estado}</h4>\r\n            </div>\r\n            <CRow>\r\n              <CCol sm=\"4\">\r\n                <CCard>\r\n                  <CCardHeader className=\"contenedor-cabecera\">\r\n                    <h5 className=\"m-0\">Básica</h5>\r\n                  </CCardHeader>\r\n                  <CCardBody>Información no disponible</CCardBody>\r\n                </CCard>\r\n              </CCol>\r\n              <CCol sm=\"4\">\r\n                <CCard>\r\n                  <CCardHeader className=\"contenedor-cabecera\">\r\n                    <h5 className=\"m-0\">Niveles</h5>\r\n                  </CCardHeader>\r\n                  <CCardBody>Información no disponible</CCardBody>\r\n                </CCard>\r\n              </CCol>\r\n              <CCol sm=\"4\">\r\n                <CCard>\r\n                  <CCardHeader className=\"contenedor-cabecera\">\r\n                    <h5 className=\"m-0\">Tendencia</h5>\r\n                  </CCardHeader>\r\n                  <CCardBody>Información no disponible</CCardBody>\r\n                </CCard>\r\n              </CCol>\r\n            </CRow>\r\n          </CCardBody>\r\n        ) : (\r\n          <CCardBody className=\"shadow\">\r\n            <div className=\"container-fluid d-flex align-items-center my-4\">\r\n              <img src={icono} className=\"icono\" />\r\n              <h4 className=\"ml-2\">{estado}</h4>\r\n            </div>\r\n            <CRow>\r\n              <CCol sm=\"4\">\r\n                <CCard>\r\n                  <CCardHeader className=\"contenedor-cabecera\">\r\n                    <h5 className=\"m-0\">Básica</h5>\r\n                  </CCardHeader>\r\n                  <CCardBody>\r\n                    <h6 className=\"my-2\">Valor</h6>\r\n                    <hr />\r\n                    <pre>\r\n                      <li>{`Actual   : ${sensor.basica.actual.toFixed(4)} ${sensor.unidades}`}</li>\r\n                      <li>{`Minimo   : ${sensor.basica.min.toFixed(4)} ${\r\n                        sensor.unidades\r\n                      }`}</li>\r\n                      <li>{`Promedio : ${sensor.basica.promedio.toFixed(4)} ${\r\n                        sensor.unidades\r\n                      }`}</li>\r\n                      <li>{`Maximo   : ${sensor.basica.max.toFixed(4)} ${\r\n                        sensor.unidades\r\n                      }`}</li>\r\n                    </pre>\r\n                    <br />\r\n                    <h6 className=\"my-2\">Nivel</h6>\r\n                    <hr />\r\n                    <pre>\r\n                      <li>{`Nivel Actual   : ${sensor.basica.nivelactual.toFixed(\r\n                        4\r\n                      )}`}</li>\r\n                      <li>{`Nivel Minimo   : ${sensor.basica.nivelmin.toFixed(\r\n                        4\r\n                      )}`}</li>\r\n                      <li>{`Nivel Promedio : ${sensor.basica.nivelpromedio.toFixed(\r\n                        4\r\n                      )}`}</li>\r\n                      <li>{`Nivel Máximo   : ${sensor.basica.nivelmax.toFixed(\r\n                        4\r\n                      )}`}</li>\r\n                    </pre>\r\n                    <br />\r\n                    <h6 className=\"my-2\">General</h6>\r\n                    <hr />\r\n                    <pre>\r\n                      <li>{`Paquetes   : ${sensor.basica.paquetes}`}</li>\r\n                      <li>{`Eficiencia : ${(\r\n                        sensor.basica.eficiencia * 100\r\n                      ).toFixed(4)} %`}</li>\r\n                    </pre>\r\n                  </CCardBody>\r\n                </CCard>\r\n              </CCol>\r\n              <CCol sm=\"4\">\r\n                <CCard>\r\n                  <CCardHeader className=\"contenedor-cabecera\">\r\n                    <h5 className=\"m-0\">Niveles</h5>\r\n                  </CCardHeader>\r\n                  <CCardBody>\r\n                    <h6 className=\"my-2\">Valor</h6>\r\n                    <hr />\r\n                    <pre>\r\n                      <li>{`Actual   : ${sensor.landmarks.actual.toFixed(\r\n                        4\r\n                      )}`}</li>\r\n                      <li>{`Minimo   : ${sensor.landmarks.min.toFixed(4)}`}</li>\r\n                      <li>{`Promedio : ${sensor.landmarks.paquetes.toFixed(\r\n                        4\r\n                      )}`}</li>\r\n                      <li>{`Máximo   : ${sensor.landmarks.max.toFixed(4)}`}</li>\r\n                    </pre>\r\n                    <br />\r\n                    <h6 className=\"my-2\">Cambio [ t ]</h6>\r\n                    <hr />\r\n                    <pre>\r\n                      <li>{`Actual   : ${\r\n                        sensor.landmarks.deltai.toFixed(4) / 2\r\n                      } min`}</li>\r\n                      <li>{`Minimo   : ${\r\n                        sensor.landmarks.deltaimin.toFixed(4) / 2\r\n                      } min`}</li>\r\n                      <li>{`Promedio : ${\r\n                        sensor.landmarks.deltaipromedio.toFixed(4) / 2\r\n                      } min`}</li>\r\n                      <li>{`Máximo   : ${\r\n                        sensor.landmarks.deltaimax.toFixed(4) / 2\r\n                      } min`}</li>\r\n                    </pre>\r\n                    <br />\r\n                    <h6 className=\"my-2\">Cambio [ f(t) ]</h6>\r\n                    <hr />\r\n                    <pre>\r\n                      <li>{`Actual     : ${sensor.landmarks.deltay.toFixed(\r\n                        4\r\n                      )}`}</li>\r\n                      <li>{`Minimo     : ${sensor.landmarks.deltaymin.toFixed(\r\n                        4\r\n                      )}`}</li>\r\n                      <li>{`Promedio   : ${sensor.landmarks.deltaypromedio.toFixed(\r\n                        4\r\n                      )}`}</li>\r\n                      <li>{`Máximo     : ${sensor.landmarks.deltaymax.toFixed(\r\n                        4\r\n                      )}`}</li>\r\n                      <hr />\r\n                      <li>{`Paquetes   : ${sensor.landmarks.paquetes}`}</li>\r\n                      <li>{`Marca      : ${\r\n                        sensor.landmarks.landmark ? \"🔵\" : \"⚪\"\r\n                      }`}</li>\r\n                    </pre>\r\n                  </CCardBody>\r\n                </CCard>\r\n              </CCol>\r\n              <CCol sm=\"4\">\r\n                <CCard>\r\n                  <CCardHeader className=\"contenedor-cabecera\">\r\n                    <h5 className=\"m-0\">Tendencia</h5>\r\n                  </CCardHeader>\r\n                  <CCardBody>\r\n                    <h6 className=\"my-2\">Valor</h6>\r\n                    <hr />\r\n                    <pre>\r\n                      <li>{`Actual   : ${sensor.peligrosidad.actual.toFixed(\r\n                        4\r\n                      )}`}</li>\r\n                      <li>{`Minimo   : ${sensor.peligrosidad.min.toFixed(\r\n                        4\r\n                      )}`}</li>\r\n                      <li>{`Promedio : ${sensor.peligrosidad.promedio.toFixed(\r\n                        4\r\n                      )}`}</li>\r\n                      <li>{`Máximo   : ${sensor.peligrosidad.max.toFixed(\r\n                        4\r\n                      )}`}</li>\r\n                    </pre>\r\n                    <br />\r\n                    <h6 className=\"my-2\">Tendencia</h6>\r\n                    <hr />\r\n                    <pre>\r\n                      <li>{`Baja   : ${\r\n                        tendencia != 0\r\n                          ? (\r\n                              (sensor.peligrosidad.tendencia[0] * 100) /\r\n                              tendencia\r\n                            ).toFixed(4)\r\n                          : 0\r\n                      } %`}</li>\r\n                      <li>{`Alta   : ${\r\n                        tendencia != 0\r\n                          ? (\r\n                              (sensor.peligrosidad.tendencia[1] * 100) /\r\n                              tendencia\r\n                            ).toFixed(4)\r\n                          : 0\r\n                      } %`}</li>\r\n\r\n                      <hr />\r\n\r\n                      <li>{`Paquetes    : ${sensor.peligrosidad.paquetes}`}</li>\r\n                      <li>{`Marca       : ${\r\n                        sensor.peligrosidad.landmark ? \"🔵\" : \"⚪\"\r\n                      }`}</li>\r\n                    </pre>\r\n                  </CCardBody>\r\n                </CCard>\r\n              </CCol>\r\n            </CRow>\r\n          </CCardBody>\r\n        )}\r\n      </CCard>\r\n    </CCol>\r\n  );\r\n};\r\n\r\nexport default EstadisticasSensor;\r\n","import { CRow } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport EstadisticasSensor from \"./EstadisticasSensor\";\r\n\r\nconst EstadisticaSensores = ({ sensores }) => {\r\n  return (\r\n    <CRow>\r\n      {sensores.map((sensor, idx) => {\r\n        return <EstadisticasSensor sensor={sensor} key={idx} />;\r\n      })}\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport default EstadisticaSensores;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CContainer,\r\n  CRow,\r\n  CCol,\r\n  CCard,\r\n  CCardHeader,\r\n  CCardBody,\r\n  CNavItem,\r\n  CNavLink,\r\n  CTabContent,\r\n  CTabPane,\r\n  CTabs,\r\n  CNav,\r\n} from \"@coreui/react\";\r\n\r\n\r\nimport {\r\n  getRecursosAPI,\r\n  getTarjeta,\r\n  getTarjetaEstadistica,\r\n} from \"src/helpers/peticionesAPI\";\r\n\r\nimport EstadisticaSensores from \"./EstadisticaSensores\";\r\nimport EstadisticasSensor from \"./EstadisticasSensor\";\r\nimport Loader from \"src/reusable/Loader\";\r\nimport iconoactivo from '../../../assets/icons/activo.svg';\r\nimport iconoinactivo from '../../../assets/icons/inactivo.svg';\r\nimport \"./Estadisticas.css\";\r\nimport Navegacion,{NavegacionTipo} from \"src/vistas/general/Navegacion\";\r\n\r\nconst Estadisticas = ({\r\n  match: {\r\n    params: { nombreTarjeta },\r\n  },\r\n  history\r\n}) => {\r\n  const [graficasInfo, setGraficasInfo] = useState([]);\r\n  const [sensoresInfo, setSensoresInfo] = useState([]);\r\n  const [data, setData] = useState({estado:\"inactivo\",icono:iconoinactivo});\r\n  const [cargando, setCargando] = useState(true);\r\n  const [token] = useState(localStorage.getItem(\"token\"));\r\n  const nombre = nombreTarjeta;\r\n\r\n  const getData = async () => {\r\n      const { graficas, sensores, estado} = await getTarjeta(nombre, token);\r\n\r\n      let str_sensores = [];\r\n      sensores.forEach((sensor) => {\r\n        str_sensores.push(`${nombre}.S${sensor.index}`);\r\n      });\r\n\r\n      let estadistica = await getTarjetaEstadistica(str_sensores, token);\r\n\r\n      let arr_sensores = [];\r\n      for (let i = 0; i < estadistica.sensores[0].length; i++) {\r\n        arr_sensores.push({\r\n          nombre: sensores[i].nombre,\r\n          alias: sensores[i].alias,\r\n          estado: sensores[i].estado,\r\n          unidades: sensores[i].unidades,\r\n          ...estadistica.sensores[0][i],\r\n        });\r\n      }\r\n      setSensoresInfo(arr_sensores);\r\n\r\n      // Arreglo que almacena las graficas que se mostraran\r\n      let arr_graficas = [];\r\n      graficas.forEach((grafica) => {\r\n        // Arreglo que almacena una grafica con sus sensores siempre  cuando almenos 1 sensor este activo\r\n        let arr_grafica = [];\r\n        for (let i = 0; i < estadistica.sensores.length; i++) {\r\n          // Arreglo que almacena UNICAMENTE los sensores activos\r\n          let arr = [];\r\n          grafica.sensores.forEach((sensor) => {\r\n            if (sensores[sensor].estado === \"activo\") {\r\n              // console.log(estadistica.sensores[i][sensor])\r\n              arr.push({\r\n                nombre: sensores[sensor].nombre,\r\n                alias: sensores[sensor].alias,\r\n                estado: sensores[sensor].estado,\r\n                unidades: sensores[sensor].unidades,\r\n                ...estadistica.sensores[i][sensor],\r\n              });\r\n            }\r\n          });\r\n          if (arr.length > 0) arr_grafica.push(arr);\r\n        }\r\n        if (arr_grafica.length > 0)\r\n          arr_graficas.push({ nombre: grafica.nombre, sensores: arr_grafica });\r\n      });\r\n      setGraficasInfo(arr_graficas);\r\n\r\n      const icono = (estado==\"activo\")?iconoactivo:iconoinactivo;      \r\n      const estadoformato = estado[0].toUpperCase() + estado.substring(1);\r\n      setData({estado:estadoformato,icono});\r\n\r\n  };\r\n\r\n  useEffect(async () => {\r\n    await getData();\r\n    const intervalo = setInterval(async () => {\r\n      await getData();\r\n    }, 30000);\r\n    setCargando(false);\r\n    return () => {\r\n      clearInterval(intervalo);\r\n    };\r\n  }, []);\r\n\r\n  if (cargando)\r\n    return (\r\n      <div style={{ display: \"grid\", placeItems: \"center\", height: \"40vh\" }}>\r\n        <Loader height=\"10vh\" />\r\n      </div>\r\n    );\r\n  return (\r\n    <>\r\n      <Navegacion activo={3} tipo={NavegacionTipo.TARJETA} history={history} direccion={nombre}/>\r\n      <CCol sm=\"12\">\r\n        <CCard className=\"shadow\">\r\n          <CCardBody>\r\n            <CRow className=\"justify-content-between\">\r\n              <CCol className=\"col-6 d-flex align-items-center\">\r\n                <img src={data.icono} className=\"icono\"/>\r\n                <h4 className=\"ml-2\">{data.estado}</h4>\r\n              </CCol>\r\n              <CCol className=\"col-6 text-right\">\r\n                <h5>Tarjeta</h5>\r\n                <h3>{nombre}</h3>\r\n              </CCol>\r\n            </CRow>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n\r\n      <CContainer fluid>\r\n        <CRow>\r\n          <CCol sm=\"12\">\r\n            <CCard className=\"shadow\">\r\n              <CCardHeader className=\"contenedor-cabecera\">\r\n                <h4>Sensores</h4>\r\n              </CCardHeader>\r\n              <CCardBody>\r\n                <CTabs activeTab=\"grupos\">\r\n                  <CNav variant=\"tabs\">\r\n                    <CNavItem>\r\n                      <CNavLink data-tab=\"grupos\">Graficas</CNavLink>\r\n                    </CNavItem>\r\n                    <CNavItem>\r\n                      <CNavLink data-tab=\"todos\">Todos</CNavLink>\r\n                    </CNavItem>\r\n                  </CNav>\r\n                  <CTabContent>\r\n                    <CTabPane data-tab=\"grupos\">\r\n                      {graficasInfo.map((grafica, idx) => {\r\n                        return (\r\n                          <div className=\"contenedor-cabecera-grafica\" key={idx}>\r\n                            <h4 className=\"my-4\">{grafica.nombre}</h4>\r\n                            <EstadisticaSensores\r\n                              sensores={grafica.sensores[0]}\r\n                            />\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </CTabPane>\r\n\r\n                    <CTabPane data-tab=\"todos\" className=\"mt-4\">\r\n                      <CRow>\r\n                        {sensoresInfo.map((sensor, idx) => {\r\n                          return (\r\n                            <EstadisticasSensor sensor={sensor} key={idx} />\r\n                          );\r\n                        })}\r\n                      </CRow>\r\n                    </CTabPane>\r\n                  </CTabContent>\r\n                </CTabs>\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Estadisticas;\r\n"],"sourceRoot":""}