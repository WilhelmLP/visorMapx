{"version":3,"sources":["assets/icons/inactivo.svg","vistas/general/Navegacion.js","vistas/elementos/estadistica_elementos/ElementosEstadisticaSensor.js","vistas/elementos/estadistica_elementos/ElementosEstadisticaSensores.js","vistas/elementos/estadistica_elementos/ElementosEstadistica.js"],"names":["NavegacionTipo","TARJETA","ELEMENTO","PROYECTO","Navegacion","activo","tipo","history","direccion","servicios","useContext","ServicesContext","navegacion","useMemo","push","titulo","id","key","undefined","includes","className","variant","map","item","index","active","onClick","click","ElementosEstadisticaSensor","sensor","estado","toUpperCase","substring","icono","iconoactivo","iconoinactivo","tendencia","peligrosidad","sm","nombre","basica","src","actual","toFixed","unidades","min","promedio","max","nivelactual","nivelmin","nivelpromedio","nivelmax","paquetes","eficiencia","landmarks","deltai","deltaimin","deltaipromedio","deltaimax","deltay","deltaymin","deltaypromedio","deltaymax","landmark","ElementosEstadisticaSensores","sensores","valores","idx","ElementosEstadisticas","idElemento","match","params","useState","sensoresElementosEstad","setSensoresElementosEstad","graficasElementosEstad","setGraficasElementosEstad","identificador","descripcion","area","linea","proceso","informacion","setInformacion","cargando","setCargando","intervalo","useRef","token","localStorage","getItem","getValor","a","getElementoById","graficas","tarjeta","length","substr","getRecursosAPI","lista_sensores","str_sensores","forEach","getTarjetaEstadistica","sensores_estadistica","arr_sensores_variables","direccion_sensor","sensor_direccion","slice","indexOf","sensor_info","find","s","parseInt","alias","clase","arr_graficas","grafica","arr_grafica","direcciones","direccion_elemento","sensor_index","datos","estadoformato","useEffect","current","clearInterval","setInterval","style","display","placeItems","height","Loader","fluid","accent","activeTab"],"mappings":"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","file":"static/js/6.a7fd8714.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/inactivo.c25580cd.svg\";","import React, { useContext, useMemo} from \"react\";\r\nimport { CCard, CCol, CRow, CNav, CNavItem, CNavLink } from \"@coreui/react\";\r\nimport { ServicesContext } from \"src/containers/UserContext\";\r\nimport propTypes from \"prop-types\";\r\nimport \"./Navegacion.css\";\r\n\r\nconst NavegacionTipo = {\r\n  TARJETA : 0,\r\n  ELEMENTO : 1,\r\n  PROYECTO : 2 \r\n}\r\nconst Navegacion = ({activo = 0,tipo = NavegacionTipo.ELEMENTO, history, direccion}) => {\r\n\r\n  const servicios = useContext(ServicesContext);\r\n  const navegacion = useMemo(() =>{\r\n    const navegacion = [];\r\n    switch(tipo) {\r\n      case NavegacionTipo.TARJETA:\r\n        navegacion.push({titulo:\"Información\",id:0,direccion:\"informacion\",key:\"tinformacion\"});\r\n        if(servicios!=undefined){\r\n          if(servicios.includes(\"TC\"))\r\n            navegacion.push({titulo:\"Configuración\",id:1,direccion:\"configuracion\",key:\"tconfiguracion\"});\r\n          if(servicios.includes(\"TGI\") || servicios.includes(\"TGII\"))\r\n            navegacion.push({titulo:\"Graficas\",id:2,direccion:\"graficas\",key:\"tgraficas\"});\r\n          if(servicios.includes(\"TE\"))\r\n            navegacion.push({titulo:\"Estadistica\",id:3,direccion:\"estadistica\",key:\"testadistica\"});\r\n        }        \r\n        break;        \r\n      case NavegacionTipo.ELEMENTO:\r\n        navegacion.push({titulo:\"Información\",id:0,direccion:\"informacion\",key:\"einformacion\"});\r\n        if(servicios!=undefined){\r\n          if(servicios.includes(\"EC\"))\r\n            navegacion.push({titulo:\"Configuración\",id:1,direccion:\"configuracion\",key:\"econfiguracion\"});\r\n          if(servicios.includes(\"EGI\") || servicios.includes(\"EGII\"))\r\n            navegacion.push({titulo:\"Graficas\",id:2, direccion:\"graficas\",key:\"egraficas\"});\r\n          if(servicios.includes(\"EE\"))\r\n            navegacion.push({titulo:\"Estadistica\",id:3,direccion:\"estadistica\",key:\"3estadistica\"});\r\n        }        \r\n        break;\r\n      case NavegacionTipo.PROYECTO:\r\n        if(servicios!=undefined){\r\n          if(servicios.includes(\"EGI\") || servicios.includes(\"EGII\"))\r\n            navegacion.push({titulo:\"Información\",id:0,direccion:\"informacion\",key:\"pinformacion\"});\r\n          if(servicios.includes(\"EC\"))\r\n            navegacion.push({titulo:\"Configuración\",id:1,direccion:\"configuracion\",key:\"pconfiguracion\"});\r\n          if(servicios.includes(\"EE\"))\r\n            navegacion.push({titulo:\"Estadistica\",id:2,direccion:\"estadistica\",key:\"pestadistica\"});\r\n          navegacion.push({titulo:\"Elementos\",id:3,direccion:\"elementos\",key:\"pelementos\"});\r\n        }\r\n        break;        \r\n    } \r\n    return navegacion;\r\n  },[servicios,tipo]);\r\n  \r\n  const click = (index) => {\r\n    \r\n    switch(tipo) {\r\n      case NavegacionTipo.TARJETA:\r\n        history.push(`/tarjetas/${direccion}/${navegacion[index].direccion}`);           \r\n        break;        \r\n      case NavegacionTipo.ELEMENTO:\r\n        history.push(`/elementos/${direccion}/${navegacion[index].direccion}`);         \r\n       break;\r\n      case NavegacionTipo.PROYECTO:\r\n        history.push(`/proyectos/${direccion}/${navegacion[index].direccion}`);         \r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CCard className=\"navegacion py-1\">                                                          \r\n        <div className=\"panel d-flex justify-content-end\">\r\n          <CNav variant=\"tabs\">\r\n            {navegacion.map((item,index) => {\r\n              return (\r\n                <CNavItem key={item.key}>\r\n                  {\r\n                    (item.id==activo)?\r\n                    <CNavLink className=\"link\" active>{item.titulo}</CNavLink>\r\n                    :\r\n                    <CNavLink className=\"link\" onClick={()=>click(index)}>{item.titulo}</CNavLink>\r\n                  }        \r\n                </CNavItem>\r\n              );\r\n            })}  \r\n          </CNav>            \r\n        </div>                  \r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nNavegacion.propTypes = {\r\n  activo: propTypes.number,\r\n  tipo: propTypes.oneOf([0,1,2]),\r\n  direccion: propTypes.string,\r\n  history: propTypes.object\r\n};\r\n\r\nexport {NavegacionTipo};\r\nexport default Navegacion;\r\n","import React from \"react\";\r\nimport { CCard, CCardBody, CCardHeader, CCol, CRow } from \"@coreui/react\";\r\nimport iconoactivo from '../../../assets/icons/activo.svg';\r\nimport iconoinactivo from '../../../assets/icons/inactivo.svg';\r\nimport \"./Estadisticas.css\"\r\n\r\nconst ElementosEstadisticaSensor = ({ sensor }) => {\r\n\r\n  const estado = sensor.estado[0].toUpperCase() + sensor.estado.substring(1);\r\n  const activo = sensor.estado == \"activo\";\r\n  const icono = activo ? iconoactivo : iconoinactivo;\r\n  const tendencia = (sensor.peligrosidad.tendencia[0] + sensor.peligrosidad.tendencia[1]);\r\n\r\n  return (\r\n    <CCol sm=\"12\">\r\n      <CCard className=\"shadow\">\r\n        <CCardHeader className=\"contenedor-cabecera\">\r\n          <h5>{sensor.nombre}</h5>\r\n        </CCardHeader>\r\n        {(sensor.basica === null || !activo) ? (\r\n          <CCardBody className=\"shadow\">\r\n            <div className=\"container-fluid d-flex align-items-center my-4\">\r\n              <img src={icono} className=\"icono\" />\r\n              <h4 className=\"ml-2\">{estado}</h4>\r\n            </div>\r\n            <CRow>\r\n              <CCol sm=\"4\">\r\n                <CCard>\r\n                  <CCardHeader className=\"contenedor-cabecera\">\r\n                    <h5 className=\"m-0\">Básica</h5>\r\n                  </CCardHeader>\r\n                  <CCardBody>Información no disponible</CCardBody>\r\n                </CCard>\r\n              </CCol>\r\n              <CCol sm=\"4\">\r\n                <CCard>\r\n                  <CCardHeader className=\"contenedor-cabecera\">\r\n                    <h5 className=\"m-0\">Niveles</h5>\r\n                  </CCardHeader>\r\n                  <CCardBody>Información no disponible</CCardBody>\r\n                </CCard>\r\n              </CCol>\r\n              <CCol sm=\"4\">\r\n                <CCard>\r\n                  <CCardHeader className=\"contenedor-cabecera\">\r\n                    <h5 className=\"m-0\">Tendencia</h5>\r\n                  </CCardHeader>\r\n                  <CCardBody>Información no disponible</CCardBody>\r\n                </CCard>\r\n              </CCol>\r\n            </CRow>\r\n          </CCardBody>\r\n          ) : (\r\n          <CCardBody>\r\n          <div className=\"container-fluid d-flex align-items-center my-4\">\r\n            <img src={icono} className=\"icono\"/>\r\n            <h4 className=\"ml-2\">{estado}</h4>\r\n          </div>\r\n          <CRow>\r\n            <CCol sm=\"4\">\r\n              <CCard>\r\n                <CCardHeader className=\"contenedor-cabecera\">\r\n                  <h5 className=\"m-0\">Basica</h5>\r\n                </CCardHeader>\r\n                <CCardBody>\r\n                  <h6 className=\"my-2\">Valor</h6>\r\n                  <hr />\r\n                  <pre>\r\n                    <li>{`Actual   : ${sensor.basica.actual.toFixed(4)} ${sensor.unidades}`}</li>\r\n                    <li>{`Minimo   : ${sensor.basica.min.toFixed(4)} ${sensor.unidades}`}</li>\r\n                    <li>{`Promedio : ${sensor.basica.promedio.toFixed(4)} ${sensor.unidades}`}</li>\r\n                    <li>{`Maximo   : ${sensor.basica.max.toFixed(4)} ${sensor.unidades}`}</li>\r\n                  </pre>\r\n                  <h6 className=\"my-2\">Nivel</h6>\r\n                  <hr />\r\n                  <pre>\r\n                    <li>{`Nivel Actual   : ${sensor.basica.nivelactual.toFixed(4)}`}</li>\r\n                    <li>{`Nivel Minimo   : ${sensor.basica.nivelmin.toFixed(4)}`}</li>\r\n                    <li>{`Nivel Promedio : ${sensor.basica.nivelpromedio.toFixed(4)}`}</li>\r\n                    <li>{`Nivel Máximo   : ${sensor.basica.nivelmax.toFixed(4)}`}</li>\r\n                  </pre>\r\n                  <h6 className=\"my-2\">General</h6>\r\n                  <hr />\r\n                  <pre>\r\n                    <li>{`Paquetes   : ${sensor.basica.paquetes}`}</li>\r\n                    <li>{`Eficiencia : ${(sensor.basica.eficiencia * 100).toFixed(4)} %`}</li>\r\n                  </pre>\r\n                </CCardBody>\r\n              </CCard>\r\n            </CCol>\r\n            <CCol sm=\"4\">\r\n              <CCard>\r\n                <CCardHeader className=\"contenedor-cabecera\">\r\n                  <h5 className=\"m-0\">Niveles</h5>\r\n                </CCardHeader>\r\n                <CCardBody>\r\n                  <h6 className=\"my-2\">Valor</h6>\r\n                  <hr />\r\n                  <pre>\r\n                    <li>{`Actual   : ${sensor.landmarks.actual.toFixed(4)}`}</li>\r\n                    <li>{`Minimo   : ${sensor.landmarks.min.toFixed(4)}`}</li>\r\n                    <li>{`Promedio : ${sensor.landmarks.promedio.toFixed(4)}`}</li>\r\n                    <li>{`Máximo   : ${sensor.landmarks.max.toFixed(4)}`}</li>\r\n                  </pre>\r\n                  <h6 className=\"my-2\">Cambio [ t ]</h6>\r\n                  <hr />\r\n                  <pre>\r\n                    <li>{`Actual   : ${sensor.landmarks.deltai.toFixed(4)/2} min`}</li>\r\n                    <li>{`Minimo   : ${sensor.landmarks.deltaimin.toFixed(4)/2 } min`}</li>\r\n                    <li>{`Promedio : ${sensor.landmarks.deltaipromedio.toFixed(4)/2} min`}</li>\r\n                    <li>{`Máximo   : ${sensor.landmarks.deltaimax.toFixed(4)/2} min`}</li>\r\n                  </pre>\r\n                  <h6 className=\"my-2\">Cambio [ f(t) ]</h6>\r\n                  <hr />\r\n                  <pre>\r\n                    <li>{`Actual     : ${sensor.landmarks.deltay.toFixed(4)}`}</li>\r\n                    <li>{`Minimo     : ${sensor.landmarks.deltaymin.toFixed(4)}`}</li>\r\n                    <li>{`Promedio   : ${sensor.landmarks.deltaypromedio.toFixed(4)}`}</li>\r\n                    <li>{`Máximo     : ${sensor.landmarks.deltaymax.toFixed(4)}`}</li>\r\n\r\n                    <hr />\r\n\r\n                    <li>{`Paquetes   : ${sensor.landmarks.paquetes}`}</li>\r\n                    <li>{`Marca : ${(sensor.landmarks.landmark)?\"🔵\":\"⚪\"}`}</li>\r\n                  </pre>\r\n                </CCardBody>\r\n              </CCard>\r\n            </CCol>\r\n            <CCol sm=\"4\">\r\n              <CCard>\r\n                <CCardHeader className=\"contenedor-cabecera\">\r\n                  <h5 className=\"m-0\">Tendencia</h5>\r\n                </CCardHeader>\r\n                <CCardBody>\r\n                  <h6 className=\"my-2\">Valor</h6>\r\n                  <hr />\r\n                  <pre>\r\n                    <li>{`Actual   : ${sensor.peligrosidad.actual.toFixed(4)}`}</li>\r\n                    <li>{`Minimo   : ${sensor.peligrosidad.min.toFixed(4)}`}</li>\r\n                    <li>{`Promedio : ${sensor.peligrosidad.promedio.toFixed(4)}`}</li>\r\n                    <li>{`Máximo   : ${sensor.peligrosidad.max.toFixed(4)}`}</li>\r\n                  </pre>\r\n                  <h6 className=\"my-2\">Tendencia</h6>\r\n                  <hr />\r\n                  <pre>\r\n                    <li>{`Baja   : ${(tendencia!=0)?(sensor.peligrosidad.tendencia[0]*100/tendencia).toFixed(4):0} %`}</li>\r\n                    <li>{`Alta   : ${(tendencia!=0)?(sensor.peligrosidad.tendencia[1]*100/tendencia).toFixed(4):0} %`}</li>\r\n\r\n                    <hr />\r\n\r\n                    <li>{`Paquetes    : ${sensor.peligrosidad.paquetes}`}</li>\r\n                    <li>{`Marca       : ${(sensor.landmarks.landmark)?\"🔵\":\"⚪\"}`}</li>\r\n                  </pre>\r\n                </CCardBody>\r\n              </CCard>\r\n            </CCol>\r\n          </CRow>\r\n        </CCardBody>\r\n          )\r\n        }\r\n      </CCard>\r\n    </CCol>\r\n  );\r\n};\r\n\r\nexport default ElementosEstadisticaSensor;\r\n","import { CRow } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport ElementosEstadisticaSensor from \"./ElementosEstadisticaSensor\";\r\n\r\nconst ElementosEstadisticaSensores = ({ sensores }) => {\r\n  return (\r\n    <CRow>\r\n      {sensores.valores.map((sensor, idx) => {\r\n        return <ElementosEstadisticaSensor sensor={sensor} key={idx} />;\r\n      })}\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport default ElementosEstadisticaSensores;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  CContainer,\r\n  CRow,\r\n  CCol,\r\n  CCard,\r\n  CCardHeader,\r\n  CCardBody,\r\n  CNavItem,\r\n  CNavLink,\r\n  CTabContent,\r\n  CTabPane,\r\n  CTabs,\r\n  CNav,\r\n  CListGroup,\r\n  CListGroupItem,\r\n} from \"@coreui/react\";\r\nimport CIcon from \"@coreui/icons-react\";\r\n\r\nimport \"../../tarjetas/estadisticas/Estadisticas.css\";\r\nimport {\r\n  getRecursosAPI,\r\n  getElementoById,\r\n  getTarjetaEstadistica,\r\n} from \"src/helpers/peticionesAPI\";\r\nimport ElementosEstadisticaSensores from \"./ElementosEstadisticaSensores\";\r\nimport ElementosEstadisticaSensor from \"./ElementosEstadisticaSensor\";\r\nimport Loader from \"src/reusable/Loader\";\r\nimport Navegacion, { NavegacionTipo } from \"../../general/Navegacion\";\r\nimport iconoactivo from '../../../assets/icons/activo.svg';\r\nimport iconoinactivo from '../../../assets/icons/inactivo.svg';\r\nimport './Estadisticas.css'\r\n\r\nconst ElementosEstadisticas = ({\r\n  match: {\r\n    params: { idElemento },\r\n  },\r\n  history\r\n}) => {\r\n  const [sensoresElementosEstad, setSensoresElementosEstad] = useState([]);\r\n  const [graficasElementosEstad, setGraficasElementosEstad] = useState([]);\r\n  const [informacion, setInformacion] = useState({\r\n    nombre: \"\",\r\n    identificador: \"\",\r\n    descripcion: \"\",\r\n    area: \"\",\r\n    linea: \"\",\r\n    tipo: \"\",\r\n    proceso: \"\",\r\n    estado:\"inactivo\",\r\n    icono:iconoinactivo\r\n  });\r\n  const [cargando, setCargando] = useState(true);\r\n  const intervalo = useRef(null);\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n  const id = idElemento;\r\n\r\n  const getValor = async () => {\r\n    const {\r\n      nombre,\r\n      identificador,\r\n      descripcion,\r\n      area,\r\n      linea,\r\n      proceso,\r\n      tipo,\r\n      estado,\r\n      sensores,\r\n      graficas,\r\n    } = await getElementoById(token, id);\r\n    let tarjeta = \"\";\r\n    if(sensores.length > 0)\r\n      tarjeta = sensores[0].direccion.substr(0,5);  \r\n    const { sensores: lista_sensores } = await getRecursosAPI(tarjeta, token);\r\n\r\n    let str_sensores = [];\r\n    sensores.forEach((sensor) => {\r\n      str_sensores.push(`${sensor.direccion}`);\r\n    });\r\n    const { sensores: sensores_estadistica } = await getTarjetaEstadistica(\r\n      str_sensores,\r\n      token\r\n    );\r\n\r\n    let arr_sensores_variables = [];\r\n    sensores.map((sensor, idx) => {\r\n      const direccion_sensor = sensor.direccion;\r\n      const sensor_direccion = direccion_sensor.slice(\r\n        direccion_sensor.indexOf(\".\") + 2,\r\n        direccion_sensor.length\r\n      );\r\n      const sensor_info = lista_sensores.find(\r\n        (s) => s.index === parseInt(sensor_direccion)\r\n      );\r\n      arr_sensores_variables.push({\r\n        nombre: sensor_info.nombre,\r\n        alias: sensor_info.alias,\r\n        estado: sensor_info.estado,\r\n        unidades: sensor_info.unidades,\r\n        clase: \"S\",\r\n        ...sensores_estadistica[0][idx],\r\n      });\r\n    });\r\n    setSensoresElementosEstad(arr_sensores_variables);\r\n\r\n    let arr_graficas = [];\r\n    graficas.forEach((grafica) => {\r\n      let arr_grafica = [];\r\n      grafica.direcciones.forEach((direccion) => {\r\n        if (direccion[0] === \"S\") {\r\n          const direccion_elemento = parseInt(direccion.substring(1));\r\n          const direccion_sensor = sensores[direccion_elemento].direccion;\r\n          const sensor_index = direccion_sensor.slice(\r\n            direccion_sensor.indexOf(\".\") + 2,\r\n            direccion_sensor.length\r\n          );\r\n          const sensor_info = lista_sensores.find(\r\n            (sensor) => sensor.index === parseInt(sensor_index)\r\n          );\r\n          if (sensor_info.estado === \"activo\") {\r\n            arr_grafica.push({\r\n              nombre: sensor_info.nombre,\r\n              alias: sensor_info.alias,\r\n              estado: sensor_info.estado,\r\n              unidades: sensor_info.unidades,\r\n              clase: \"S\",\r\n              ...sensores_estadistica[0][direccion_elemento],\r\n            });\r\n          }\r\n        }\r\n      });\r\n      if (arr_grafica.length > 0) {\r\n        arr_graficas.push({\r\n          nombre: grafica.nombre,\r\n          datos: { tipo: \"sensores\", valores: arr_grafica },\r\n        });\r\n      }\r\n    });\r\n    setGraficasElementosEstad(arr_graficas);\r\n\r\n    const icono = (estado==\"activo\")?iconoactivo:iconoinactivo;      \r\n    const estadoformato = estado[0].toUpperCase() + estado.substring(1);\r\n    setInformacion({\r\n      nombre,\r\n      identificador,\r\n      descripcion,\r\n      area,\r\n      linea,\r\n      tipo,\r\n      proceso,\r\n      estado: estadoformato,\r\n      icono,\r\n    });\r\n  };\r\n  const getIntervalo = ()=>{\r\n    return setInterval(\r\n      getValor,\r\n      30000\r\n    );\r\n  }\r\n\r\n  useEffect(()=>{\r\n    return ()=>{\r\n      if(intervalo.current!=null)\r\n        clearInterval(intervalo.current);\r\n    }\r\n  },[]);\r\n  useEffect(async () => {\r\n    setCargando(true);\r\n    if(intervalo.current!=null){\r\n      clearInterval(intervalo.current);\r\n      intervalo.current = null;\r\n    }\r\n    await getValor();\r\n    intervalo.current = getIntervalo();\r\n    setCargando(false);\r\n  }, [idElemento]);\r\n  \r\n  if(cargando)\r\n    return  (<div style={{display:'grid',placeItems:'center',height:'40vh'}}>\r\n                <Loader height=\"10vh\"/>\r\n            </div>);\r\n  return (\r\n    <CContainer fluid>\r\n      <Navegacion activo={3} tipo={NavegacionTipo.ELEMENTO} history={history} direccion={id}/>\r\n      <CRow>\r\n        <CCol sm=\"12\">        \r\n          <CCard className=\"shadow\">\r\n            <CCardBody>\r\n              <CRow className=\"justify-content-between\">\r\n                <CCol className=\"col-3 d-flex align-items-center\">\r\n                  <img src={informacion.icono} className=\"icono\"/>\r\n                  <h4 className=\"ml-2\">{informacion.estado}</h4>\r\n                </CCol>\r\n                <CCol className=\"col-9 text-right\">\r\n                  <h5>Elemento</h5>\r\n                  <h3>{`${informacion.nombre}`}</h3>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol>\r\n          <CCard className=\"shadow\">\r\n            <CCardHeader className=\"contenedor-cabecera\">\r\n              <h4>General</h4>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CListGroup accent>\r\n                <CRow>\r\n                  <CCol sm=\"4\">\r\n                    <CListGroupItem accent=\"info\">Identificador :</CListGroupItem>\r\n                  </CCol>\r\n                  <CCol sm=\"4\" className=\"align-self-center\">\r\n                    {informacion.identificador}\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                  <CCol sm=\"4\">\r\n                    <CListGroupItem accent=\"info\">Descripción :</CListGroupItem>\r\n                  </CCol>\r\n                  <CCol sm=\"4\" className=\"align-self-center\">\r\n                    {informacion.descripcion}\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                  <CCol sm=\"4\">\r\n                    <CListGroupItem accent=\"info\">Area :</CListGroupItem>\r\n                  </CCol>\r\n                  <CCol sm=\"4\" className=\"align-self-center\">\r\n                    {informacion.area}\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                  <CCol sm=\"4\">\r\n                    <CListGroupItem accent=\"info\">Linea :</CListGroupItem>\r\n                  </CCol>\r\n                  <CCol sm=\"4\" className=\"align-self-center\">\r\n                    {informacion.linea}\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                  <CCol sm=\"4\">\r\n                    <CListGroupItem accent=\"info\">Proceso :</CListGroupItem>\r\n                  </CCol>\r\n                  <CCol sm=\"4\" className=\"align-self-center\">\r\n                    {informacion.proceso}\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                  <CCol sm=\"4\">\r\n                    <CListGroupItem accent=\"info\">Tipo :</CListGroupItem>\r\n                  </CCol>\r\n                  <CCol sm=\"4\" className=\"align-self-center\">\r\n                    {informacion.tipo}\r\n                  </CCol>\r\n                </CRow>\r\n              </CListGroup>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol sm=\"12\">\r\n          <CCard className=\"shadow\">\r\n            <CCardHeader className=\"contenedor-cabecera\">\r\n              <h4>Sensores</h4>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CTabs activeTab=\"grupos\">\r\n                <CNav variant=\"tabs\">\r\n                  <CNavItem>\r\n                    <CNavLink data-tab=\"grupos\">Grupos</CNavLink>\r\n                  </CNavItem>\r\n                  {/* <CNavItem>\r\n                    <CNavLink data-tab=\"todos\">Todos</CNavLink>\r\n                  </CNavItem> */}\r\n                </CNav>\r\n                <CTabContent>\r\n                  <CTabPane data-tab=\"grupos\">\r\n                    {graficasElementosEstad.map((grafica, idx) => {\r\n                      return (\r\n                        <div className=\"contenedor-cabecera-grafica\"  key={idx}>\r\n                          <h4 className=\"my-4\">{grafica.nombre}</h4>\r\n                          <ElementosEstadisticaSensores\r\n                            sensores={grafica.datos}\r\n                          />\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </CTabPane>\r\n\r\n                  <CTabPane data-tab=\"todos\">\r\n                    <CRow>\r\n                      {sensoresElementosEstad.map((sensor, idx) => {\r\n                        return (\r\n                          <ElementosEstadisticaSensor\r\n                            sensor={sensor}\r\n                            key={idx}\r\n                          />\r\n                        );\r\n                      })}\r\n                    </CRow>\r\n                  </CTabPane>\r\n                </CTabContent>\r\n              </CTabs>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </CContainer>\r\n  );\r\n};\r\n\r\nexport default ElementosEstadisticas;\r\n"],"sourceRoot":""}