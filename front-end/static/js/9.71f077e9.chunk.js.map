{"version":3,"sources":["assets/icons/inactivo.svg","vistas/general/Navegacion.js","vistas/elementos/informacion_elementos/ElementosInformacionSensor.js","vistas/elementos/informacion_elementos/ElementosInformacionSensores.js","vistas/elementos/informacion_elementos/ElementosInformacion.js"],"names":["NavegacionTipo","TARJETA","ELEMENTO","PROYECTO","Navegacion","activo","tipo","history","direccion","servicios","useContext","ServicesContext","navegacion","useMemo","push","titulo","id","key","undefined","includes","className","variant","map","item","index","active","onClick","click","ElementosInformacionSensor","sensor","estado","toUpperCase","substring","iconoactivo","iconoinactivo","sm","nombre","basica","valor","toFixed","unidades","landmark","nivel","peligrosidad","md","src","ElementosInformacionSensores","sensores","valores","idx","ElementosInformacion","idElemento","match","params","useState","sensoresElementosInfo","setSensoresElementosInfo","graficasElementosInfo","setGraficasElementosInfo","cargando","setCargando","intervalo","useRef","descripcion","area","linea","proceso","icono","informacion","setInformacion","SA","SI","GA","GI","VA","VI","general","setGeneral","token","localStorage","getItem","getValor","a","getElementoById","identificador","variables","graficas","tarjeta","length","substr","getRecursosAPI","lista_sensores","str_sensores","str_variables","forEach","variable","Promise","all","getPaquetesAPI","getLandmarksAPI","getPeligrosidadAPI","getElementosPaquetesApi","sensores_datos","land","peligro","variables_datos","arr_sensores_variables","direccion_sensor","sensor_direccion","indexOf","sensor_info","find","s","parseInt","alias","countSA","countSI","countGA","countGI","countVA","countVI","arr_graficas","grafica","arr_grafica","direcciones","variable_index","direccion_elemento","sensor_index","slice","datos","estadoformato","useEffect","current","clearInterval","setInterval","to","style","display","placeItems","height","Loader","fluid","accent","activeTab"],"mappings":"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","file":"static/js/9.71f077e9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/inactivo.c25580cd.svg\";","import React, { useContext, useMemo} from \"react\";\r\nimport { CCard, CCol, CRow, CNav, CNavItem, CNavLink } from \"@coreui/react\";\r\nimport { ServicesContext } from \"src/containers/UserContext\";\r\nimport propTypes from \"prop-types\";\r\nimport \"./Navegacion.css\";\r\n\r\nconst NavegacionTipo = {\r\n  TARJETA : 0,\r\n  ELEMENTO : 1,\r\n  PROYECTO : 2 \r\n}\r\nconst Navegacion = ({activo = 0,tipo = NavegacionTipo.ELEMENTO, history, direccion}) => {\r\n\r\n  const servicios = useContext(ServicesContext);\r\n  const navegacion = useMemo(() =>{\r\n    const navegacion = [];\r\n    switch(tipo) {\r\n      case NavegacionTipo.TARJETA:\r\n        navegacion.push({titulo:\"Información\",id:0,direccion:\"informacion\",key:\"tinformacion\"});\r\n        if(servicios!=undefined){\r\n          if(servicios.includes(\"TC\"))\r\n            navegacion.push({titulo:\"Configuración\",id:1,direccion:\"configuracion\",key:\"tconfiguracion\"});\r\n          if(servicios.includes(\"TGI\") || servicios.includes(\"TGII\"))\r\n            navegacion.push({titulo:\"Graficas\",id:2,direccion:\"graficas\",key:\"tgraficas\"});\r\n          if(servicios.includes(\"TE\"))\r\n            navegacion.push({titulo:\"Estadistica\",id:3,direccion:\"estadistica\",key:\"testadistica\"});\r\n        }        \r\n        break;        \r\n      case NavegacionTipo.ELEMENTO:\r\n        navegacion.push({titulo:\"Información\",id:0,direccion:\"informacion\",key:\"einformacion\"});\r\n        if(servicios!=undefined){\r\n          if(servicios.includes(\"EC\"))\r\n            navegacion.push({titulo:\"Configuración\",id:1,direccion:\"configuracion\",key:\"econfiguracion\"});\r\n          if(servicios.includes(\"EGI\") || servicios.includes(\"EGII\"))\r\n            navegacion.push({titulo:\"Graficas\",id:2, direccion:\"graficas\",key:\"egraficas\"});\r\n          if(servicios.includes(\"EE\"))\r\n            navegacion.push({titulo:\"Estadistica\",id:3,direccion:\"estadistica\",key:\"3estadistica\"});\r\n        }        \r\n        break;\r\n      case NavegacionTipo.PROYECTO:\r\n        if(servicios!=undefined){\r\n          if(servicios.includes(\"EGI\") || servicios.includes(\"EGII\"))\r\n            navegacion.push({titulo:\"Información\",id:0,direccion:\"informacion\",key:\"pinformacion\"});\r\n          if(servicios.includes(\"EC\"))\r\n            navegacion.push({titulo:\"Configuración\",id:1,direccion:\"configuracion\",key:\"pconfiguracion\"});\r\n          if(servicios.includes(\"EE\"))\r\n            navegacion.push({titulo:\"Estadistica\",id:2,direccion:\"estadistica\",key:\"pestadistica\"});\r\n          navegacion.push({titulo:\"Elementos\",id:3,direccion:\"elementos\",key:\"pelementos\"});\r\n        }\r\n        break;        \r\n    } \r\n    return navegacion;\r\n  },[servicios,tipo]);\r\n  \r\n  const click = (index) => {\r\n    \r\n    switch(tipo) {\r\n      case NavegacionTipo.TARJETA:\r\n        history.push(`/tarjetas/${direccion}/${navegacion[index].direccion}`);           \r\n        break;        \r\n      case NavegacionTipo.ELEMENTO:\r\n        history.push(`/elementos/${direccion}/${navegacion[index].direccion}`);         \r\n       break;\r\n      case NavegacionTipo.PROYECTO:\r\n        history.push(`/proyectos/${direccion}/${navegacion[index].direccion}`);         \r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CCard className=\"navegacion py-1\">                                                          \r\n        <div className=\"panel d-flex justify-content-end\">\r\n          <CNav variant=\"tabs\">\r\n            {navegacion.map((item,index) => {\r\n              return (\r\n                <CNavItem key={item.key}>\r\n                  {\r\n                    (item.id==activo)?\r\n                    <CNavLink className=\"link\" active>{item.titulo}</CNavLink>\r\n                    :\r\n                    <CNavLink className=\"link\" onClick={()=>click(index)}>{item.titulo}</CNavLink>\r\n                  }        \r\n                </CNavItem>\r\n              );\r\n            })}  \r\n          </CNav>            \r\n        </div>                  \r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nNavegacion.propTypes = {\r\n  activo: propTypes.number,\r\n  tipo: propTypes.oneOf([0,1,2]),\r\n  direccion: propTypes.string,\r\n  history: propTypes.object\r\n};\r\n\r\nexport {NavegacionTipo};\r\nexport default Navegacion;\r\n","import React from \"react\";\r\nimport { CCard, CCardBody, CCardHeader, CCol, CRow } from \"@coreui/react\";\r\nimport iconoactivo from '../../../assets/icons/activo.svg';\r\nimport iconoinactivo from '../../../assets/icons/inactivo.svg';\r\nimport \"./ElementosInformacion.css\";\r\n\r\nconst ElementosInformacionSensor = ({ sensor }) => {\r\n  const estado = sensor.estado[0].toUpperCase() + sensor.estado.substring(1);\r\n  const activo = sensor.estado == \"activo\";\r\n  const icono = activo ? iconoactivo : iconoinactivo;\r\n  return (\r\n    <CCol sm=\"4\">\r\n      <CCard className=\"shadow\">\r\n        <CCardHeader className=\"contenedor-cabecera\">\r\n          <h5 className=\"m-0\">{sensor.nombre}</h5>\r\n        </CCardHeader>\r\n        {sensor.basica === null || !sensor.valor || !activo ? (\r\n          <CCardBody>\r\n            Información no disponible\r\n          </CCardBody>\r\n        ) : (\r\n          <CCardBody>\r\n            <CRow className=\"align-items-center justify-content-center\">\r\n              <CCol sm=\"8\">\r\n                <p><b> {(sensor.valor)?sensor.valor.toFixed(2):\"-\"} {sensor.unidades}</b></p>\r\n                {sensor.tipo == \"S\" ? (\r\n                  <p>NORMALIZACIÓN : {sensor.landmark.nivel[1].toFixed(4)}</p>\r\n                ) : undefined}\r\n                {sensor.tipo == \"S\" ? (\r\n                  <p>\r\n                    TENDENCIA : {sensor.peligrosidad.peligrosidad[0].toFixed(4)}\r\n                  </p>\r\n                ) : undefined}\r\n                <p>{sensor.estado.toUpperCase()} </p>\r\n              </CCol>\r\n              <CCol md=\"4\">\r\n                {sensor.tipo == \"S\" ? (\r\n                  sensor.estado == \"activo\" &&\r\n                  sensor.landmark.nivel[1] <= 1 &&\r\n                  sensor.landmark.nivel[1] >= 0 ? (\r\n                    <div className=\"contenedor-icono\">\r\n                      <img src={iconoactivo} className=\"icono\"/>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"contenedor-icono\">\r\n                      <img src={iconoinactivo} className=\"icono\"/>\r\n                    </div>\r\n                  )\r\n                ) : sensor.estado == \"activo\" ? (\r\n                    <div className=\"contenedor-icono\">\r\n                      <img src={iconoactivo} className=\"icono\"/>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"contenedor-icono\">\r\n                      <img src={iconoinactivo} className=\"icono\"/>\r\n                    </div>\r\n                )}\r\n              </CCol>\r\n            </CRow>\r\n          </CCardBody>)\r\n        }\r\n      </CCard>\r\n    </CCol>\r\n  );\r\n};\r\n\r\nexport default ElementosInformacionSensor;\r\n","import { CRow } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport ElementosInformacionSensor from \"./ElementosInformacionSensor\";\r\n\r\nconst ElementosInformacionSensores = ({sensores}) => {\r\n  return (\r\n    <div>\r\n      <CRow>\r\n        {\r\n          sensores.valores.map((sensor, idx)=>{\r\n            return(\r\n              <ElementosInformacionSensor\r\n                key = {\"graficas_sensor\"+idx} \r\n                sensor = {sensor}\r\n              />\r\n            )\r\n          })\r\n        }\r\n      </CRow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ElementosInformacionSensores;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  CContainer,\r\n  CRow,\r\n  CCol,\r\n  CCard,\r\n  CCardHeader,\r\n  CCardBody,\r\n  CTabs,\r\n  CNav,\r\n  CNavItem,\r\n  CNavLink,\r\n  CTabContent,\r\n  CTabPane,\r\n  CListGroup,\r\n  CListGroupItem,\r\n} from \"@coreui/react\";\r\nimport \"./ElementosInformacion.css\";\r\n\r\nimport {\r\n  getElementoById,\r\n  getPaquetesAPI,\r\n  getElementosPaquetesApi,\r\n  getRecursosAPI,\r\n  getLandmarksAPI,\r\n  getPeligrosidadAPI,\r\n} from \"../../../helpers/peticionesAPI\";\r\nimport ElementosInformacionSensores from \"./ElementosInformacionSensores\";\r\nimport ElementosInformacionSensor from \"./ElementosInformacionSensor\";\r\nimport Navegacion, {NavegacionTipo} from \"../../general/Navegacion\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Loader from \"src/reusable/Loader\";\r\nimport iconoactivo from '../../../assets/icons/activo.svg';\r\nimport iconoinactivo from '../../../assets/icons/inactivo.svg';\r\n\r\nconst ElementosInformacion = ({\r\n  match: {\r\n    params: { idElemento },\r\n  },\r\n  history\r\n}) => {\r\n  //Para elementos información\r\n  const [sensoresElementosInfo, setSensoresElementosInfo] = useState([]);\r\n  const [graficasElementosInfo, setGraficasElementosInfo] = useState([]);  \r\n  const [cargando, setCargando] = useState(true);\r\n  const intervalo = useRef(null);\r\n  //Para la información general\r\n  const [informacion, setInformacion] = useState({\r\n    nombre: \"\",\r\n    descripcion: \"\",\r\n    area: \"\",\r\n    linea: \"\",\r\n    tipo: \"\",\r\n    proceso: \"\",\r\n    estado:\"inactivo\",\r\n    icono:iconoinactivo\r\n  });\r\n  const [general, setGeneral] = useState({\r\n    SA: 0,\r\n    SI: 0,\r\n    GA: 0,\r\n    GI: 0,\r\n    VA: 0,\r\n    VI: 0,\r\n  });\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n  const id = idElemento;\r\n\r\n  const getValor = async () => {\r\n    if (idElemento == undefined) return;\r\n\r\n    const  {\r\n        nombre,\r\n        identificador,\r\n        descripcion,\r\n        area,\r\n        linea,\r\n        proceso,\r\n        tipo,\r\n        estado,\r\n        sensores,\r\n        variables,\r\n        graficas,\r\n      } = await getElementoById(token, id);\r\n    let tarjeta = \"\";\r\n    if(sensores.length > 0)\r\n      tarjeta = sensores[0].direccion.substr(0,5);      \r\n    const { sensores: lista_sensores } = await getRecursosAPI(tarjeta, token);\r\n\r\n    let str_sensores = [];\r\n    let str_variables = [];\r\n    variables.forEach((variable) => {\r\n      str_variables.push(`${id}.V${variable.index}`);\r\n    });\r\n    sensores.forEach((sensor) => {\r\n      str_sensores.push(`${sensor.direccion}`);\r\n    });\r\n\r\n    const [\r\n      { sensores: sensores_datos },\r\n      land,\r\n      peligro,\r\n      { variables: variables_datos },\r\n    ] = await Promise.all([\r\n      getPaquetesAPI(str_sensores, token, 1),\r\n      getLandmarksAPI(str_sensores, token, 1),\r\n      getPeligrosidadAPI(str_sensores, token, 1),\r\n      getElementosPaquetesApi(str_variables, token, 1),\r\n    ]);\r\n\r\n    let arr_sensores_variables = [];\r\n    sensores.map((sensor, idx) => {\r\n      const direccion_sensor = sensor.direccion;\r\n      const sensor_direccion = direccion_sensor.substring(\r\n        direccion_sensor.indexOf(\".\") + 2\r\n      );\r\n      const sensor_info = lista_sensores.find(\r\n        (s) => s.index === parseInt(sensor_direccion)\r\n      );\r\n      arr_sensores_variables.push({\r\n        nombre: sensor_info.nombre,\r\n        alias: sensor_info.alias,\r\n        estado: sensor_info.estado,\r\n        unidades: sensor_info.unidades,\r\n        tipo: \"S\",\r\n        ...sensores_datos[0][idx],\r\n        ...land.sensores[0][idx],\r\n        ...peligro.sensores[0][idx],\r\n      });\r\n    });\r\n    variables.forEach((variable, idx) => {\r\n      arr_sensores_variables.push({\r\n        nombre: variable.nombre,\r\n        alias: variable.alias,\r\n        estado: variable.estado,\r\n        unidades: variable.unidades,\r\n        tipo: \"V\",\r\n        ...variables_datos[0][idx],\r\n      });\r\n    });\r\n\r\n    setSensoresElementosInfo(arr_sensores_variables);\r\n\r\n    let countSA = 0;\r\n    let countSI = 0;\r\n    let countGA = 0;\r\n    let countGI = 0;\r\n    let countVA = 0;\r\n    let countVI = 0;\r\n\r\n    let arr_graficas = [];\r\n    graficas.forEach((grafica) => {\r\n      let arr_grafica = [];\r\n      grafica.direcciones.forEach((direccion) => {\r\n        if (direccion[0] === \"V\") {\r\n          const variable_index = variables.find(\r\n            (variable) => variable.index === parseInt(direccion.substring(1))\r\n          );\r\n          if (variable_index.estado === \"activo\") {\r\n            countVA += 1;\r\n            arr_grafica.push({\r\n              nombre: variable_index.nombre,\r\n              alias: variable_index.alias,\r\n              estado: variable_index.estado,\r\n              unidades: variable_index.unidades,\r\n              tipo: \"V\",\r\n              ...variables_datos[0][parseInt(variable_index.index)],\r\n            });\r\n          } else {\r\n            countVI += 1;\r\n          }\r\n        } else {\r\n          const direccion_elemento = parseInt(direccion.substring(1));\r\n          const direccion_sensor = sensores[direccion_elemento].direccion;\r\n          const sensor_index = direccion_sensor.slice(\r\n            direccion_sensor.indexOf(\".\") + 2,\r\n            direccion_sensor.length\r\n          );\r\n          const sensor_info = lista_sensores.find(\r\n            (sensor) => sensor.index === parseInt(sensor_index)\r\n          );\r\n          if (sensor_info.estado === \"activo\") {\r\n            countSA += 1;\r\n            arr_grafica.push({\r\n              nombre: sensor_info.nombre,\r\n              alias: sensor_info.alias,\r\n              estado: sensor_info.estado,\r\n              unidades: sensor_info.unidades,\r\n              tipo: \"S\",\r\n              ...sensores_datos[0][direccion_elemento],\r\n              ...land.sensores[0][direccion_elemento],\r\n              ...peligro.sensores[0][direccion_elemento],\r\n            });\r\n          } else {\r\n            countSI += 1;\r\n          }\r\n        }\r\n      });\r\n\r\n      if (arr_grafica.length > 0) {\r\n        countGA += 1;\r\n        arr_graficas.push(\r\n          grafica.direcciones[0][0] === \"V\"\r\n            ? {\r\n                nombre: grafica.nombre,\r\n                datos: { tipo: \"variables\", valores: arr_grafica },\r\n              }\r\n            : {\r\n                nombre: grafica.nombre,\r\n                datos: { tipo: \"sensores\", valores: arr_grafica },\r\n              }\r\n        );\r\n      } else {\r\n        countGI += 1;\r\n      }\r\n    });\r\n\r\n    setGraficasElementosInfo(arr_graficas);\r\n\r\n    const icono = (estado==\"activo\")?iconoactivo:iconoinactivo;      \r\n    const estadoformato = estado[0].toUpperCase() + estado.substring(1);\r\n    setInformacion({\r\n      nombre,\r\n      identificador,\r\n      descripcion,\r\n      area,\r\n      linea,\r\n      tipo,\r\n      proceso,\r\n      estado:estadoformato,\r\n      icono\r\n    });\r\n\r\n    setGeneral({\r\n      SA: countSA,\r\n      SI: countSI,\r\n      GA: countGA,\r\n      GI: countGI,\r\n      VA: countVA,\r\n      VI: countVI,\r\n    });\r\n    \r\n\r\n  };\r\n  const getIntervalo = () => {\r\n    return setInterval(getValor, 30000);\r\n  };\r\n\r\n  useEffect(async () => {\r\n    return () => {\r\n      if (intervalo.current != null) clearInterval(intervalo.current);\r\n    };\r\n  }, []);\r\n  useEffect(async () => {\r\n    setCargando(true);\r\n    if (intervalo.current != null) {\r\n      clearInterval(intervalo.current);\r\n      intervalo.current = null;\r\n    }\r\n    await getValor();\r\n    intervalo.current = getIntervalo();\r\n    setCargando(false);\r\n  }, [idElemento]);\r\n\r\n  if (idElemento == undefined) \r\n    return <Redirect to=\"/\" />;\r\n  if (cargando)\r\n    return (\r\n      <div style={{ display: \"grid\", placeItems: \"center\", height: \"40vh\" }}>\r\n        <Loader height=\"10vh\" />\r\n      </div>\r\n    );\r\n  return (\r\n    <CContainer fluid>\r\n      <Navegacion activo={0} tipo={NavegacionTipo.ELEMENTO} history={history} direccion={id}/>\r\n      <CRow>\r\n        <CCol sm=\"12\">\r\n          <CCard className=\"shadow\">\r\n            <CCardBody>\r\n              <CRow className=\"justify-content-between\">\r\n                <CCol className=\"col-3 d-flex align-items-center\">\r\n                  <img src={informacion.icono} className=\"icono\"/>\r\n                  <h4 className=\"ml-2\">{informacion.estado}</h4>\r\n                </CCol>\r\n                <CCol className=\"col-9 text-right\">\r\n                  <h5>Proyecto</h5>\r\n                  <h3>{`${informacion.nombre}`}</h3>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CRow>\r\n        <CCol>\r\n          <CCard className=\"shadow\">\r\n            <CCardHeader className=\"contenedor-cabecera-principal\">\r\n              General\r\n            </CCardHeader>\r\n\r\n            <CCardBody>\r\n              <CListGroup accent>\r\n                <CRow>\r\n                  <CCol sm=\"4\">\r\n                    <CListGroupItem accent=\"info\">Identificador :</CListGroupItem>\r\n                  </CCol>\r\n                  <CCol sm=\"4\" className=\"align-self-center\">\r\n                    {informacion.identificador}\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                  <CCol sm=\"4\">\r\n                    <CListGroupItem accent=\"info\">Descripcion :</CListGroupItem>\r\n                  </CCol>\r\n                  <CCol sm=\"4\" className=\"align-self-center\">\r\n                    {informacion.descripcion}\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                  <CCol sm=\"4\">\r\n                    <CListGroupItem accent=\"info\">Area :</CListGroupItem>\r\n                  </CCol>\r\n                  <CCol sm=\"4\" className=\"align-self-center\">\r\n                    {informacion.area}\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                  <CCol sm=\"4\">\r\n                    <CListGroupItem accent=\"info\">Linea :</CListGroupItem>\r\n                  </CCol>\r\n                  <CCol sm=\"4\" className=\"align-self-center\">\r\n                    {informacion.linea}\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                  <CCol sm=\"4\">\r\n                    <CListGroupItem accent=\"info\">Proceso :</CListGroupItem>\r\n                  </CCol>\r\n                  <CCol sm=\"4\" className=\"align-self-center\">\r\n                    {informacion.proceso}\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                  <CCol sm=\"4\">\r\n                    <CListGroupItem accent=\"info\">Tipo :</CListGroupItem>\r\n                  </CCol>\r\n                  <CCol sm=\"4\" className=\"align-self-center\">\r\n                    {informacion.tipo}\r\n                  </CCol>\r\n                </CRow>\r\n              </CListGroup>\r\n              <hr />\r\n              <CListGroup accent>\r\n                <CRow className=\"justify-content-end\">\r\n                  <CCol sm=\"3\" className=\"align-self-center encabezado_general\">\r\n                    Sensores\r\n                  </CCol>\r\n                  <CCol sm=\"3\" className=\"align-self-center encabezado_general\">\r\n                    Variables\r\n                  </CCol>\r\n                  <CCol sm=\"3\" className=\"align-self-center encabezado_general\">\r\n                    Grupos\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                  <CCol sm=\"3\">\r\n                    <CListGroupItem accent=\"dark\">Inactivos :</CListGroupItem>\r\n                  </CCol>\r\n                  <CCol sm=\"3\" className=\"align-self-center\">\r\n                    {general.SI}\r\n                  </CCol>\r\n                  <CCol sm=\"3\" className=\"align-self-center\">\r\n                    {general.VI}\r\n                  </CCol>\r\n                  <CCol sm=\"3\" className=\"align-self-center\">\r\n                    {general.GI}\r\n                  </CCol>\r\n                </CRow>\r\n\r\n                <CRow>\r\n                  <CCol sm=\"3\">\r\n                    <CListGroupItem accent=\"dark\">Activos :</CListGroupItem>\r\n                  </CCol>\r\n                  <CCol sm=\"3\" className=\"align-self-center\">\r\n                    {general.SA}\r\n                  </CCol>\r\n                  <CCol sm=\"3\" className=\"align-self-center\">\r\n                    {general.VA}\r\n                  </CCol>\r\n                  <CCol sm=\"3\" className=\"align-self-center\">\r\n                    {general.GA}\r\n                  </CCol>\r\n                </CRow>\r\n\r\n                <CRow>\r\n                  <CCol sm=\"3\">\r\n                    <CListGroupItem accent=\"dark\">Totales :</CListGroupItem>\r\n                  </CCol>\r\n                  <CCol sm=\"3\" className=\"align-self-center\">\r\n                    {general.SA + general.SI}\r\n                  </CCol>\r\n                  <CCol sm=\"3\" className=\"align-self-center\">\r\n                    {general.VA + general.VI}\r\n                  </CCol>\r\n                  <CCol sm=\"3\" className=\"align-self-center\">\r\n                    {general.GA + general.GI}\r\n                  </CCol>\r\n                </CRow>                \r\n              </CListGroup>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CRow>\r\n        <CCol>\r\n          <CCard className=\"shadow\">\r\n            <CCardHeader className=\"contenedor-cabecera-principal\">\r\n              Sensores / Variables\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CTabs activeTab=\"grupos\">\r\n                <CNav variant=\"tabs\">\r\n                  <CNavItem>\r\n                    <CNavLink data-tab=\"grupos\">Grupos</CNavLink>\r\n                  </CNavItem>\r\n                  {/* <CNavItem>\r\n                    <CNavLink data-tab=\"todos\">Todos</CNavLink>\r\n                  </CNavItem> */}\r\n                </CNav>\r\n                <CTabContent className=\"mt-4\">\r\n                  <CTabPane data-tab=\"grupos\">\r\n                    {graficasElementosInfo.map((grafica, idx) => {\r\n                      return (\r\n                        <CCard key={\"grupos\" + idx}>\r\n                          <CCardHeader className=\"contenedor-cabecera-grafica\">\r\n                            <h4>{grafica.nombre}</h4>\r\n                          </CCardHeader>\r\n                          <CCardBody>\r\n                            <ElementosInformacionSensores\r\n                              sensores={grafica.datos}\r\n                            />\r\n                          </CCardBody>\r\n                        </CCard>\r\n                      );\r\n                    })}\r\n                  </CTabPane>\r\n                  <CTabPane data-tab=\"todos\">\r\n                    <CRow>\r\n                      {sensoresElementosInfo.map((sensor, idx) => {\r\n                        return (\r\n                          <ElementosInformacionSensor\r\n                            key={\"todos\" + idx}\r\n                            sensor={sensor}\r\n                          />\r\n                        );\r\n                      })}\r\n                    </CRow>\r\n                  </CTabPane>\r\n                </CTabContent>\r\n              </CTabs>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </CContainer>\r\n  );\r\n};\r\n\r\nexport default ElementosInformacion;\r\n"],"sourceRoot":""}