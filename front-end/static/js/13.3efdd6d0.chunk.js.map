{"version":3,"sources":["assets/icons/inactivo.svg","vistas/general/Navegacion.js","vistas/tarjetas/configuracion/ConfiguracionesSensor.js","vistas/tarjetas/configuracion/ConfiguracionesSensores.js","vistas/tarjetas/configuracion/Configuraciones.js"],"names":["NavegacionTipo","TARJETA","ELEMENTO","PROYECTO","Navegacion","activo","tipo","history","direccion","servicios","useContext","ServicesContext","navegacion","useMemo","push","titulo","id","key","undefined","includes","className","variant","map","item","index","active","onClick","click","ConfiguracionesSensor","tarjeta","sensor","icono","estado","iconoactivo","iconoinactivo","toUpperCase","substring","sm","nombre","src","alias","unidades","parametros","rango","toFixed","resolucion","peligrosidad","React","memo","ConfiguracionesSensores","sensores","idx","Configuraciones","nombreTarjeta","match","params","useState","graficasInfo","setGraficasInfo","sensoresInfo","setSensoresInfo","data","setData","cargando","setCargando","token","localStorage","getItem","getValor","a","getTarjeta","graficas","arr_graficas","forEach","grafica","arr_grafica","arr","estadoformato","useEffect","to","style","display","placeItems","height","Loader","fluid","activeTab"],"mappings":"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","file":"static/js/13.3efdd6d0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/inactivo.c25580cd.svg\";","import React, { useContext, useMemo} from \"react\";\r\nimport { CCard, CCol, CRow, CNav, CNavItem, CNavLink } from \"@coreui/react\";\r\nimport { ServicesContext } from \"src/containers/UserContext\";\r\nimport propTypes from \"prop-types\";\r\nimport \"./Navegacion.css\";\r\n\r\nconst NavegacionTipo = {\r\n  TARJETA : 0,\r\n  ELEMENTO : 1,\r\n  PROYECTO : 2 \r\n}\r\nconst Navegacion = ({activo = 0,tipo = NavegacionTipo.ELEMENTO, history, direccion}) => {\r\n\r\n  const servicios = useContext(ServicesContext);\r\n  const navegacion = useMemo(() =>{\r\n    const navegacion = [];\r\n    switch(tipo) {\r\n      case NavegacionTipo.TARJETA:\r\n        navegacion.push({titulo:\"Información\",id:0,direccion:\"informacion\",key:\"tinformacion\"});\r\n        if(servicios!=undefined){\r\n          if(servicios.includes(\"TC\"))\r\n            navegacion.push({titulo:\"Configuración\",id:1,direccion:\"configuracion\",key:\"tconfiguracion\"});\r\n          if(servicios.includes(\"TGI\") || servicios.includes(\"TGII\"))\r\n            navegacion.push({titulo:\"Graficas\",id:2,direccion:\"graficas\",key:\"tgraficas\"});\r\n          if(servicios.includes(\"TE\"))\r\n            navegacion.push({titulo:\"Estadistica\",id:3,direccion:\"estadistica\",key:\"testadistica\"});\r\n        }        \r\n        break;        \r\n      case NavegacionTipo.ELEMENTO:\r\n        navegacion.push({titulo:\"Información\",id:0,direccion:\"informacion\",key:\"einformacion\"});\r\n        if(servicios!=undefined){\r\n          if(servicios.includes(\"EC\"))\r\n            navegacion.push({titulo:\"Configuración\",id:1,direccion:\"configuracion\",key:\"econfiguracion\"});\r\n          if(servicios.includes(\"EGI\") || servicios.includes(\"EGII\"))\r\n            navegacion.push({titulo:\"Graficas\",id:2, direccion:\"graficas\",key:\"egraficas\"});\r\n          if(servicios.includes(\"EE\"))\r\n            navegacion.push({titulo:\"Estadistica\",id:3,direccion:\"estadistica\",key:\"3estadistica\"});\r\n        }        \r\n        break;\r\n      case NavegacionTipo.PROYECTO:\r\n        if(servicios!=undefined){\r\n          if(servicios.includes(\"EGI\") || servicios.includes(\"EGII\"))\r\n            navegacion.push({titulo:\"Información\",id:0,direccion:\"informacion\",key:\"pinformacion\"});\r\n          if(servicios.includes(\"EC\"))\r\n            navegacion.push({titulo:\"Configuración\",id:1,direccion:\"configuracion\",key:\"pconfiguracion\"});\r\n          if(servicios.includes(\"EE\"))\r\n            navegacion.push({titulo:\"Estadistica\",id:2,direccion:\"estadistica\",key:\"pestadistica\"});\r\n          navegacion.push({titulo:\"Elementos\",id:3,direccion:\"elementos\",key:\"pelementos\"});\r\n        }\r\n        break;        \r\n    } \r\n    return navegacion;\r\n  },[servicios,tipo]);\r\n  \r\n  const click = (index) => {\r\n    \r\n    switch(tipo) {\r\n      case NavegacionTipo.TARJETA:\r\n        history.push(`/tarjetas/${direccion}/${navegacion[index].direccion}`);           \r\n        break;        \r\n      case NavegacionTipo.ELEMENTO:\r\n        history.push(`/elementos/${direccion}/${navegacion[index].direccion}`);         \r\n       break;\r\n      case NavegacionTipo.PROYECTO:\r\n        history.push(`/proyectos/${direccion}/${navegacion[index].direccion}`);         \r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CCard className=\"navegacion py-1\">                                                          \r\n        <div className=\"panel d-flex justify-content-end\">\r\n          <CNav variant=\"tabs\">\r\n            {navegacion.map((item,index) => {\r\n              return (\r\n                <CNavItem key={item.key}>\r\n                  {\r\n                    (item.id==activo)?\r\n                    <CNavLink className=\"link\" active>{item.titulo}</CNavLink>\r\n                    :\r\n                    <CNavLink className=\"link\" onClick={()=>click(index)}>{item.titulo}</CNavLink>\r\n                  }        \r\n                </CNavItem>\r\n              );\r\n            })}  \r\n          </CNav>            \r\n        </div>                  \r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nNavegacion.propTypes = {\r\n  activo: propTypes.number,\r\n  tipo: propTypes.oneOf([0,1,2]),\r\n  direccion: propTypes.string,\r\n  history: propTypes.object\r\n};\r\n\r\nexport {NavegacionTipo};\r\nexport default Navegacion;\r\n","import React from \"react\";\r\nimport { CCard, CCardBody, CCardHeader, CCol } from \"@coreui/react\";\r\nimport iconoactivo from '../../../assets/icons/activo.svg';\r\nimport iconoinactivo from '../../../assets/icons/inactivo.svg';\r\nimport \"./Configuraciones.css\";\r\n\r\nconst ConfiguracionesSensor = ({tarjeta,sensor }) => {\r\n\r\n  const icono =  (sensor.estado==\"activo\")?iconoactivo:iconoinactivo;\r\n  const estado = sensor.estado[0].toUpperCase() + sensor.estado.substring(1); \r\n  \r\n  return (\r\n    <CCol sm=\"4\">\r\n      <CCard className=\"shadow\">\r\n        <CCardHeader className=\"card-head contenedor-cabecera \">\r\n          <h5>{sensor.nombre}</h5>\r\n        </CCardHeader>{\" \"}\r\n        <CCardBody>          \r\n            <div className=\"mb-4 d-flex align-items-center\">\r\n              <img src = {icono} className=\"icono\"/>\r\n              <h5 className=\"ml-2\">{estado}</h5>\r\n            </div>         \r\n          <pre>\r\n            <li>{`Dirección : ${tarjeta}.S${sensor.index}`}</li>\r\n            <li>{`Alias     : ${sensor.alias}`}</li>\r\n            <li>{`Unidades  : ${sensor.unidades}`}</li>\r\n            <li>{`Rango     : [${sensor.parametros.rango[0].toFixed(4)}, ${sensor.parametros.rango[1].toFixed(4)}] ${sensor.unidades}`}</li>\r\n          </pre>\r\n          <br />\r\n          <h6>Nivel</h6>\r\n          <hr />\r\n          <pre>\r\n            <li>{`Resolución t    : ${sensor.parametros.resolucion[0].toFixed(4) / 2} min`}</li>\r\n            <li>{`Resolución f(t) : ${sensor.parametros.resolucion[1].toFixed(4)}`}</li>\r\n          </pre>\r\n          <br />\r\n          <h6>Tendencia</h6>\r\n          <hr />\r\n          <pre>\r\n            <li>{`Función : Lineal`}</li>\r\n            <li>{`Filtro  : ${sensor.parametros.peligrosidad}`}</li>\r\n          </pre>\r\n        </CCardBody>\r\n      </CCard>\r\n    </CCol>\r\n  );\r\n};\r\n\r\nexport default React.memo(ConfiguracionesSensor);\r\n","import React from \"react\";\r\nimport { CRow } from \"@coreui/react\";\r\nimport ConfiguracionesSensor from \"./ConfiguracionesSensor\";\r\n\r\nconst ConfiguracionesSensores = ({tarjeta,sensores }) => {\r\n  return (\r\n    <div>\r\n      <CRow>\r\n        {sensores.map((sensor, idx) => {\r\n          return <ConfiguracionesSensor tarjeta={tarjeta} sensor={sensor} key={idx} />;\r\n        })}\r\n      </CRow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfiguracionesSensores;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {\r\n  CContainer,\r\n  CRow,\r\n  CCol,\r\n  CCard,\r\n  CCardHeader,\r\n  CCardBody,\r\n  CTabs,\r\n  CNav,\r\n  CNavItem,\r\n  CNavLink,\r\n  CTabContent,\r\n  CTabPane,\r\n} from \"@coreui/react\";\r\nimport { getRecursosAPI, getTarjeta } from \"src/helpers/peticionesAPI\";\r\nimport ConfiguracionesSensores from \"./ConfiguracionesSensores\";\r\nimport ConfiguracionesSensor from \"./ConfiguracionesSensor\";\r\n\r\n\r\nimport Loader from \"src/reusable/Loader\";\r\nimport iconoactivo from '../../../assets/icons/activo.svg';\r\nimport iconoinactivo from '../../../assets/icons/inactivo.svg';\r\nimport \"./Configuraciones.css\";\r\nimport Navegacion, {NavegacionTipo} from \"src/vistas/general/Navegacion\";\r\nconst Configuraciones = ({\r\n  match: {\r\n    params: { nombreTarjeta },\r\n  },\r\n  history\r\n}) => {\r\n  const [graficasInfo, setGraficasInfo] = useState([]);\r\n  const [sensoresInfo, setSensoresInfo] = useState([]);\r\n  const [data, setData] = useState({estado:\"Inactivo\",icono:iconoinactivo});\r\n  const [cargando, setCargando] = useState(true);\r\n  const token = localStorage.getItem(\"token\");\r\n  const nombre = nombreTarjeta;\r\n\r\n  const getValor = async () => {\r\n    if (nombre == undefined) \r\n      return;\r\n\r\n    const { graficas, sensores, estado} = await getTarjeta(nombre, token);\r\n    setSensoresInfo(sensores);\r\n\r\n    let arr_graficas = [];\r\n    graficas.forEach((grafica) => {\r\n      let arr_grafica = [];\r\n      let arr = [];\r\n      grafica.sensores.forEach((sensor) => {\r\n        arr.push({\r\n          ...sensores[sensor],\r\n        });\r\n      });\r\n      arr_grafica.push(...arr);\r\n      arr_graficas.push({ nombre: grafica.nombre, sensores: arr_grafica });\r\n    });\r\n    \r\n    setGraficasInfo(arr_graficas);\r\n\r\n    const icono = (estado==\"activo\")?iconoactivo:iconoinactivo;      \r\n    const estadoformato = estado[0].toUpperCase() + estado.substring(1);\r\n\r\n    setData({estado:estadoformato,icono}); \r\n\r\n  };\r\n\r\n  useEffect(async () => {\r\n    setCargando(true);\r\n    await getValor();\r\n    setCargando(false);\r\n  }, []);\r\n\r\n  if (nombreTarjeta == undefined) \r\n    return <Redirect to=\"/\" />;\r\n  if (cargando)\r\n    return (\r\n      <div style={{ display: \"grid\", placeItems: \"center\", height: \"40vh\" }}>\r\n        <Loader height=\"10vh\" />\r\n      </div>\r\n    );    \r\n  return (\r\n    <CContainer fluid>\r\n      <Navegacion activo={1} tipo={NavegacionTipo.TARJETA} history={history} direccion={nombre}/>\r\n      <CRow>\r\n        <CCol sm=\"12\">\r\n          <CCard className=\"shadow\">\r\n            <CCardBody>\r\n              <CRow className=\"justify-content-between\">\r\n              <CCol className=\"col-6 d-flex align-items-center\">\r\n                  <img src={data.icono} className=\"icono\"/>\r\n                  <h4 className=\"ml-2\">{data.estado}</h4>\r\n                </CCol>\r\n                <CCol className=\"col-6 text-right\">\r\n                  <h5>Tarjeta</h5>\r\n                  <h3>{nombre}</h3>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol sm=\"12\">\r\n          <CCard className=\"shadow\">\r\n            <CCardHeader className=\"contenedor-cabecera\">\r\n              <h4>Sensores</h4>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CTabs activeTab=\"grupos\">\r\n                <CNav variant=\"tabs\">\r\n                  <CNavItem>\r\n                    <CNavLink data-tab=\"grupos\">Grupos</CNavLink>\r\n                  </CNavItem>\r\n                  <CNavItem>\r\n                    <CNavLink data-tab=\"todos\">Todos</CNavLink>\r\n                  </CNavItem>\r\n                </CNav>\r\n                <CTabContent>\r\n                  <CTabPane data-tab=\"grupos\">\r\n                    {graficasInfo.map((grafica, idx) => {\r\n                      return (\r\n                        <div className=\"contenedor-cabecera-grafica\" key={idx}>\r\n                          <h4 className=\"my-4\">{grafica.nombre}</h4>\r\n                          <ConfiguracionesSensores\r\n                            tarjeta = {nombre}\r\n                            sensores = {grafica.sensores}\r\n                          />\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </CTabPane>\r\n                  <CTabPane data-tab=\"todos\" className=\"mt-4\">\r\n                    <CRow>\r\n                      {sensoresInfo.map((sensor, idx) => {\r\n                        return (\r\n                          <ConfiguracionesSensor \r\n                              tarjeta={nombre} \r\n                              sensor={sensor} \r\n                              key={idx} \r\n                          />\r\n                        );\r\n                      })}\r\n                    </CRow>\r\n                  </CTabPane>\r\n                </CTabContent>\r\n              </CTabs>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </CContainer>\r\n  );\r\n};\r\n\r\nexport default Configuraciones;\r\n"],"sourceRoot":""}