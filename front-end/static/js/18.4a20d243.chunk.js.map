{"version":3,"sources":["assets/icons/inactivo.svg","vistas/elementos/panel_elementos/ElementosPanel.js"],"names":["ElementosPanel","history","token","localStorage","getItem","servicios","useContext","ServicesContext","useState","cargando","setCargando","elementos","setElementos","details","setDetails","getElementos","a","Promise","callback","lista_elementos","promesas","getUserAPI","user_proyectos","proyectos","getProyectoByIds","forEach","proyecto","elemento","includes","elemento_info","getElementoById","push","then","res","nombre","descripcion","tipo","estado","id","_id","all","click","direccion","useEffect","intervalo","setInterval","clearInterval","style","display","placeItems","height","fluid","sm","className","items","fields","key","_style","width","label","sorter","filter","columnFilter","itemsPerPage","responsive","pagination","onRowClick","item","console","log","scopedSlots","onClick","icono","iconoactivo","iconoinactivo","src","show_details","index","size","position","indexOf","newDetails","slice","splice","toggleDetails","show","find","element"],"mappings":"yGAAe,QAA0B,sC,mLC4O1BA,UAlNQ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAClBC,EAAQC,aAAaC,QAAQ,SAC7BC,EAAYC,qBAAWC,KAC7B,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA8BJ,mBAAS,IAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KA2BMC,EAAY,uCAAG,sBAAAC,EAAA,+EACZ,IAAIC,QAAJ,uCAAY,WAAOC,GAAP,uBAAAF,EAAA,6DAEXG,EAAkB,GAClBC,EAAW,GAHA,SAIqCC,YAAWnB,GAJhD,uBAIEoB,EAJF,EAITC,UAA2BZ,EAJlB,EAIkBA,UAJlB,SAKOa,YAAiBtB,EAAOoB,GAL/B,cAOPG,QAAV,uCAAkB,WAAOC,GAAP,SAAAV,EAAA,sDAChBU,EAASf,UAAUc,SAAQ,SAACE,GAC1B,GAAIhB,EAAUiB,SAASD,EAASA,UAAhC,CAEA,IAAME,EAAgBC,YAAgB5B,EAAOyB,EAASA,UACtDP,EAASW,KAAKF,GACdA,EAAcG,MAAK,SAACC,GAClBd,EAAgBY,KAAK,CACnBG,OAAQD,EAAIC,OACZC,YAAaF,EAAIE,YACjBC,KAAMH,EAAIG,KACVC,OAAQJ,EAAII,OACZX,SAAUA,EAASQ,OACnBI,GAAIL,EAAIM,aAbE,2CAAlB,uDAmBAtB,QAAQuB,IAAIpB,GAAUY,MAAK,WACzBpB,EAAaO,GACbD,GAAS,MA5BM,4CAAZ,wDADY,2CAAH,qDAsCZuB,EAAQ,SAACH,EAAII,GACjBzC,EAAQ8B,KAAR,qBAA2BO,EAA3B,YAAiCI,KAWnC,OARAC,oBAAS,sBAAC,4BAAA3B,EAAA,6DACRN,GAAY,GADJ,SAEFK,IAFE,cAGF6B,EAVCC,YAAY9B,EAAa,KAWhCL,GAAY,GAJJ,mBAKD,kBAAIoC,cAAcF,MALjB,2CAMP,IAECnC,EAEA,qBAAKsC,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUC,OAAQ,QAA7D,SACE,cAAC,IAAD,CAAQA,OAAO,WAInB,cAAC,IAAD,CAAYC,OAAK,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMC,GAAG,KAAT,SACE,eAAC,IAAD,CAAOC,UAAU,SAAjB,UACE,cAAC,IAAD,CAAaA,UAAU,sBAAvB,SACE,oBAAIA,UAAU,MAAd,yBAEF,cAAC,IAAD,UACE,cAAC,IAAD,CACEC,MAAO3C,EACP4C,OAjFC,CACb,CAAEC,IAAK,SAAUC,OAAQ,CAAEC,MAAO,QAClC,CAAEF,IAAK,WAAYC,OAAQ,CAAEC,MAAO,QACpC,CAAEF,IAAK,SAAUC,OAAQ,CAAEC,MAAO,QAClC,CACEF,IAAK,eACLG,MAAO,GACPF,OAAQ,CAAEC,MAAO,MACjBE,QAAQ,EACRC,QAAQ,IAyEEC,cAAY,EACZC,aAAc,EACdH,QAAM,EACNI,YAAU,EACVC,YAAU,EACVC,WAAY,SAACC,GAAD,OAAUC,QAAQC,IAAIF,IAClCG,YAAa,CACXpC,OAAQ,SAACiC,GACP,OACE,qBAAKd,UAAU,mBAAmBkB,QAAS,kBAAM9B,EAAM0B,EAAK7B,GAAI,gBAAhE,SAAiF6B,EAAKjC,UAG1FG,OAAQ,SAAC8B,GACP,IAAMK,EACW,UAAfL,EAAK9B,OAAqBoC,IAAcC,IAC1C,OACE,6BACE,qBAAKC,IAAKH,EAAOnB,UAAU,aAIjCuB,aAAc,SAACT,EAAMU,GACnB,OACE,oBAAIxB,UAAU,OAAd,SACE,cAAC,IAAD,CACEA,UAAU,iBACVyB,KAAK,KACLP,QAAS,YAxHX,SAACM,GACrB,IAAME,EAAWlE,EAAQmE,QAAQH,GAC7BI,EAAapE,EAAQqE,SACP,IAAdH,EACFE,EAAWE,OAAOJ,EAAU,GAE5BE,EAAU,sBAAOpE,GAAP,CAAgBgE,IAE5B/D,EAAWmE,GAiHaG,CAAcP,IAJlB,SAOGhE,EAAQe,SAASiD,GACd,UACA,uBAKZhE,QAAS,SAACsD,EAAMU,GACd,OACE,cAAC,IAAD,CAAWQ,KAAMxE,EAAQe,SAASiD,GAAlC,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMxB,UAAU,OAAhB,SACE,sBAAKA,UAAU,qEAAf,UACE,oBAAIA,UAAU,MAAd,mBAAwBc,EAAKhC,eAC7B,oBAAIkB,UAAU,MAAd,mBAAwBc,EAAK/B,eAInC,eAAC,IAAD,WACE,cAAC,IAAD,CAAMgB,GAAG,IAAIC,UAAU,OAAvB,SACE,cAAC,IAAD,CACEA,UAAU,iBACVkB,QAAS,kBAAM9B,EAAM0B,EAAK7B,GAAI,gBAFhC,8BAODjC,EAAUiF,MAAK,SAACC,GAAD,MAAyB,OAAZA,KAC3B,cAAC,IAAD,CAAMnC,GAAG,IAAIC,UAAU,OAAvB,SACE,cAAC,IAAD,CACEA,UAAU,iBACVkB,QAAS,kBACP9B,EAAM0B,EAAK7B,GAAI,kBAHnB,gCASA,KACHjC,EAAUiF,MACT,SAACC,GAAD,MACc,QAAZA,GAAiC,SAAZA,KAEvB,cAAC,IAAD,CAAMnC,GAAG,IAAIC,UAAU,OAAvB,SACE,cAAC,IAAD,CACEA,UAAU,iBACVkB,QAAS,kBAAM9B,EAAM0B,EAAK7B,GAAI,aAFhC,wBAOA,KACHjC,EAAUiF,MAAK,SAACC,GAAD,MAAyB,OAAZA,KAC3B,cAAC,IAAD,CAAMnC,GAAG,IAAIC,UAAU,OAAvB,SACE,cAAC,IAAD,CACEA,UAAU,iBACVkB,QAAS,kBAAM9B,EAAM0B,EAAK7B,GAAI,gBAFhC,4BAOA","file":"static/js/18.4a20d243.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/inactivo.c25580cd.svg\";","import React, { useContext, useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  CDataTable,\r\n  CButton,\r\n  CCollapse,\r\n  CContainer,\r\n  CRow,\r\n  CCol,\r\n  CCard,\r\n  CCardHeader,\r\n  CCardBody,\r\n} from \"@coreui/react\";\r\nimport {\r\n  getElementoById,\r\n  getProyectoByIds,\r\n  getUserAPI,\r\n} from \"src/helpers/peticionesAPI\";\r\n\r\nimport iconoactivo from \"../../../assets/icons/activo.svg\";\r\nimport iconoinactivo from \"../../../assets/icons/inactivo.svg\";\r\n\r\nimport \"./ElementosPanel.css\";\r\nimport { ServicesContext } from \"src/containers/UserContext\";\r\nimport Loader from \"src/reusable/Loader\";\r\n\r\nconst ElementosPanel = ({ history }) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const servicios = useContext(ServicesContext);\r\n  const [cargando, setCargando] = useState(true);\r\n\r\n  const [elementos, setElementos] = useState([]);\r\n  const [details, setDetails] = useState([]);\r\n\r\n  const toggleDetails = (index) => {\r\n    const position = details.indexOf(index);\r\n    let newDetails = details.slice();\r\n    if (position !== -1) {\r\n      newDetails.splice(position, 1);\r\n    } else {\r\n      newDetails = [...details, index];\r\n    }\r\n    setDetails(newDetails);\r\n  };\r\n\r\n  const fields = [\r\n    { key: \"nombre\", _style: { width: \"60%\" } },\r\n    { key: \"proyecto\", _style: { width: \"30%\" } },\r\n    { key: \"estado\", _style: { width: \"10%\" } },\r\n    {\r\n      key: \"show_details\",\r\n      label: \"\",\r\n      _style: { width: \"1%\" },\r\n      sorter: false,\r\n      filter: false,\r\n    },\r\n  ];\r\n\r\n\r\n  const getElementos = async () => {\r\n    return new Promise(async (callback) => {\r\n\r\n      const lista_elementos = [];\r\n      const promesas = [];\r\n      const { proyectos: user_proyectos, elementos} = await getUserAPI(token);\r\n      const proyectos = await getProyectoByIds(token, user_proyectos);\r\n\r\n      proyectos.forEach(async (proyecto) => {\r\n        proyecto.elementos.forEach((elemento) => {\r\n          if(!elementos.includes(elemento.elemento))\r\n            return;\r\n          const elemento_info = getElementoById(token, elemento.elemento);\r\n          promesas.push(elemento_info);\r\n          elemento_info.then((res) => {\r\n            lista_elementos.push({\r\n              nombre: res.nombre,\r\n              descripcion: res.descripcion,\r\n              tipo: res.tipo,\r\n              estado: res.estado,\r\n              proyecto: proyecto.nombre,\r\n              id: res._id,\r\n            });\r\n          });        \r\n        });\r\n      });\r\n\r\n      Promise.all(promesas).then(() => {\r\n        setElementos(lista_elementos);\r\n        callback(true);\r\n      });\r\n\r\n    });\r\n  };\r\n  const getIntervalo = ()=> {\r\n    return setInterval(getElementos,30000);\r\n  }\r\n\r\n  const click = (id, direccion) => {\r\n    history.push(`/elementos/${id}/${direccion}`);\r\n  };\r\n\r\n  useEffect(async () => {\r\n    setCargando(true);\r\n    await getElementos();\r\n    const intervalo = getIntervalo(); \r\n    setCargando(false);\r\n    return ()=>clearInterval(intervalo);\r\n  }, []);\r\n\r\n  if (cargando)\r\n    return (\r\n      <div style={{ display: \"grid\", placeItems: \"center\", height: \"40vh\" }}>\r\n        <Loader height=\"10vh\" />\r\n      </div>\r\n    );\r\n  return (\r\n    <CContainer fluid>\r\n      <CRow>\r\n        <CCol sm=\"12\">\r\n          <CCard className=\"shadow\">\r\n            <CCardHeader className=\"contenedor-cabecera\">\r\n              <h4 className=\"m-0\">Elementos</h4>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CDataTable\r\n                items={elementos}\r\n                fields={fields}\r\n                columnFilter\r\n                itemsPerPage={5}\r\n                sorter\r\n                responsive\r\n                pagination\r\n                onRowClick={(item) => console.log(item)}\r\n                scopedSlots={{\r\n                  nombre: (item) => {\r\n                    return (\r\n                      <div className=\"mt-2 pt-1 cursor\" onClick={() => click(item.id, \"informacion\")}>{item.nombre}</div>\r\n                    )\r\n                  },\r\n                  estado: (item) => {\r\n                    const icono =\r\n                      item.estado == \"activo\" ? iconoactivo : iconoinactivo;\r\n                    return (\r\n                      <td>\r\n                        <img src={icono} className=\"icono\" />\r\n                      </td>\r\n                    );\r\n                  },\r\n                  show_details: (item, index) => {\r\n                    return (\r\n                      <td className=\"py-2\">\r\n                        <CButton\r\n                          className=\"boton-elemento\"\r\n                          size=\"sm\"\r\n                          onClick={() => {\r\n                            toggleDetails(index);\r\n                          }}\r\n                        >\r\n                          {details.includes(index)\r\n                            ? \"Ocultar\"\r\n                            : \"Caracteristicas\"}\r\n                        </CButton>\r\n                      </td>\r\n                    );\r\n                  },\r\n                  details: (item, index) => {\r\n                    return (\r\n                      <CCollapse show={details.includes(index)}>\r\n                        <CCardBody>\r\n                          <CRow>\r\n                            <CCol className=\"mb-4\">\r\n                              <div className=\"d-flex justify-content-center align-items-center flex-column w-100\">\r\n                                <h4 className=\"m-0\">{`${item.descripcion}`}</h4>\r\n                                <h4 className=\"m-0\">{`${item.tipo}`}</h4>\r\n                              </div>\r\n                            </CCol>\r\n                          </CRow>\r\n                          <CRow>\r\n                            <CCol sm=\"3\" className=\"my-1\">\r\n                              <CButton\r\n                                className=\"boton-elemento\"\r\n                                onClick={() => click(item.id, \"informacion\")}\r\n                              >\r\n                                Información\r\n                              </CButton>\r\n                            </CCol>\r\n                            {servicios.find((element) => element === \"EC\") ? (\r\n                              <CCol sm=\"3\" className=\"my-1\">\r\n                                <CButton\r\n                                  className=\"boton-elemento\"\r\n                                  onClick={() =>\r\n                                    click(item.id, \"configuracion\")\r\n                                  }\r\n                                >\r\n                                  Configuración\r\n                                </CButton>\r\n                              </CCol>\r\n                            ) : null}\r\n                            {servicios.find(\r\n                              (element) =>\r\n                                element === \"EGI\" || element === \"EGII\"\r\n                            ) ? (\r\n                              <CCol sm=\"3\" className=\"my-1\">\r\n                                <CButton\r\n                                  className=\"boton-elemento\"\r\n                                  onClick={() => click(item.id, \"graficas\")}\r\n                                >\r\n                                  Graficas\r\n                                </CButton>\r\n                              </CCol>\r\n                            ) : null}\r\n                            {servicios.find((element) => element === \"EE\") ? (\r\n                              <CCol sm=\"3\" className=\"my-1\">\r\n                                <CButton\r\n                                  className=\"boton-elemento\"\r\n                                  onClick={() => click(item.id, \"estadistica\")}\r\n                                >\r\n                                  Estadisticas\r\n                                </CButton>\r\n                              </CCol>\r\n                            ) : null}\r\n                          </CRow>\r\n                        </CCardBody>\r\n                      </CCollapse>\r\n                    );\r\n                  },\r\n                }}\r\n              />\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </CContainer>\r\n  );\r\n};\r\n\r\nexport default ElementosPanel;\r\n"],"sourceRoot":""}