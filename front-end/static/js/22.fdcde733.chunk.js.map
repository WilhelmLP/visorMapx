{"version":3,"sources":["vistas/pages/login/NavBar.js","vistas/pages/login/Login.js","reusable/SweatAlerts.js"],"names":["NavBar","className","exact","to","src","VisorBlanco","alt","Login","useState","usuario","pass","operacion","user","setUser","acceso","setAcceso","handleForm","e","target","name","value","handleLogin","a","preventDefault","undefined","Swal","fire","title","text","icon","confirmButtonText","getTokenUsuario","status_token","status","respuesta_token","respuesta","position","showConfirmButton","timer","getSesion","respuesta_sesion","localStorage","setItem","md","LogoBlanco","onSubmit","type","placeholder","autoComplete","onChange","xs","lg","Footer"],"mappings":"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","file":"static/js/22.fdcde733.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport VisorBlanco from \"../../../assets/img/VisorBlanco.png\";\r\nimport \"./Login.css\";\r\n\r\nfunction NavBar(){\r\n  \r\n  return (\r\n        <div className=\"nav-app\">\r\n          <nav className=\"navbar navbar-expand-lg navbar-dark\">\r\n              <NavLink exact to=\"/\" className=\"navbar-brand\">\r\n                <img src={VisorBlanco} alt=\"Logo\" className=\"logo ml-4\"/>\r\n              </NavLink>\r\n              {\r\n                /*\r\n                <button className=\"navbar-toggler mr-4\" type=\"button\" data-toggle=\"collapse\" data-target=\"#opciones\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse justify-content-center\" id=\"opciones\">\r\n                  <ul className=\"navbar-nav my-1\">                 \r\n                  </ul>\r\n                </div> \r\n                */\r\n              }\r\n              \r\n            </nav>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { useState } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport LogoBlanco from \"../../../assets/img/VisorBlanco.png\";\r\n\r\nimport {\r\n  AlertaToastSucces,\r\n  AlertaToastDenied,\r\n  AlertaCamposVacios,\r\n  AlertaToastCredentialsIncorrect,\r\n} from \"../../../reusable/SweatAlerts\";\r\n\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CRow,\r\n} from \"@coreui/react\";\r\n\r\nimport \"./Login.css\";\r\n\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport { getSesion, getTokenUsuario } from \"src/helpers/peticionesAPI\";\r\nimport NavBar from \"./NavBar\";\r\nimport Footer from \"../land-page/Footer\";\r\n\r\n\r\nconst Login = () => {\r\n  const [user, setUser] = useState({\r\n    usuario: \"\",\r\n    pass: \"\",\r\n    operacion: \"gettoken\",\r\n  });\r\n  const {usuario, pass } = user;\r\n  const [acceso, setAcceso] = useState(false);\r\n\r\n  const handleForm = (e) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (\r\n      usuario == \"\" ||\r\n      usuario == undefined ||\r\n      pass == \"\" ||\r\n      pass == undefined\r\n    ) {\r\n      AlertaCamposVacios();\r\n    } else {\r\n      //peticion del helper para usuario registrado en el backend\r\n      const { status: status_token, respuesta: respuesta_token } =\r\n        await getTokenUsuario(usuario, pass);\r\n\r\n      if (!status_token) {\r\n        AlertaToastCredentialsIncorrect();\r\n        setAcceso(status_token);\r\n        return;\r\n      }\r\n\r\n      const { status: status_sesiones, respuesta: respuesta_sesion } =\r\n        await getSesion(respuesta_token);\r\n      if (respuesta_sesion) {\r\n        AlertaToastSucces();\r\n        localStorage.setItem(\"token\", respuesta_token);\r\n      } else {\r\n        AlertaToastDenied();\r\n      }\r\n      setAcceso(respuesta_sesion);\r\n    }\r\n  };\r\n  if (acceso) {\r\n    localStorage.setItem(\"isAutehenticated\", acceso);\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <>\r\n      <section className=\"c-app login flex-row align-items-center\">\r\n        <NavBar />\r\n        <CContainer className=\"contenedor mt-5\">\r\n          <CRow className=\"justify-content-center\">\r\n            <CCol md=\"8\">\r\n              <CCardGroup className=\"shadow\">\r\n                <CCard className=\"contenedor-presentacion m-0\">\r\n                  <CCardBody className=\"text-center text-white descripción\">\r\n                    <div className=\"d-flex flex-column justify-content-center align-items-center h-100\">\r\n                      <img src={LogoBlanco} className=\"logoGradient\" />\r\n                      <h5 className=\"mt-3\">\r\n                        Sistema modular basado en tecnologías de microservicios\r\n                        alojados en en la Nube orientado en la adquisión,\r\n                        almacenamiento, análisis y entrega de resultados de datos\r\n                        IIoT para la Industria 4.0\r\n                      </h5>\r\n                    </div>\r\n                  </CCardBody>\r\n                </CCard>\r\n                <CCard className=\"p-1 p-md-4 m-0\">\r\n                  <CCardBody>\r\n                    <CForm onSubmit={handleLogin}>\r\n                      <h3 className=\"my-3\">Iniciar sesión</h3>\r\n                      <p className=\"text-muted\">Inicia con tu cuenta</p>\r\n                      <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText>\r\n                            <CIcon name=\"cil-user\" />\r\n                          </CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput\r\n                          type=\"text\"\r\n                          placeholder=\"Nombre de usuario\"\r\n                          autoComplete=\"username\"\r\n                          name=\"usuario\"\r\n                          onChange={handleForm}\r\n                        />\r\n                      </CInputGroup>\r\n                      <CInputGroup className=\"mb-4\">\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText>\r\n                            <CIcon name=\"cil-lock-locked\" />\r\n                          </CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput\r\n                          type=\"password\"\r\n                          placeholder=\"Contraseña\"\r\n                          autoComplete=\"current-password\"\r\n                          name=\"pass\"\r\n                          onChange={handleForm}\r\n                        />\r\n                      </CInputGroup>\r\n                      <CRow className=\"w-100 mx-auto mx-lg-0\">\r\n                        <CCol xs=\"12\" lg=\"10\">\r\n                          <CButton className=\"px-5 py-3 btn-login w-100 mx-auto\" type=\"submit\">\r\n                            Iniciar sesión\r\n                          </CButton>\r\n                        </CCol>                      \r\n                      </CRow>\r\n                    </CForm>\r\n                  </CCardBody>\r\n                </CCard>              \r\n              </CCardGroup>\r\n            </CCol>\r\n          </CRow>\r\n        </CContainer>      \r\n      </section>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import Swal from 'sweetalert2';\r\n\r\nexport const AlertaToastSucces = () => {\r\n  Swal.fire({\r\n    position: 'center',\r\n    icon: 'success',\r\n    title: 'Acceso Concedido',\r\n    showConfirmButton: false,\r\n    timer: 1500\r\n  })\r\n}\r\n\r\nexport const AlertaToastDenied = () => {\r\n  Swal.fire({\r\n    position: 'center',\r\n    icon: 'warning',\r\n    title: 'Sesión abierta en otro dispositivo',\r\n    showConfirmButton: false,\r\n    timer: 1500\r\n  })\r\n}\r\n\r\nexport const AlertaToastCredentialsIncorrect = () => {\r\n  Swal.fire({\r\n    position: 'center',\r\n    icon: 'error',\r\n    title: 'Usuario/Contraseña Incorrecta',\r\n    showConfirmButton: false,\r\n    timer: 1500\r\n  })\r\n}\r\n\r\nexport const AlertaToastWarning = (idx, nombre) => {\r\n  const Toast = Swal.mixin({\r\n    toast: true,\r\n    position: 'top-end',\r\n    showConfirmButton: false,\r\n    showCloseButton: true, \r\n    didOpen: (toast) => {\r\n      toast.addEventListener('mouseenter', Swal.stopTimer)\r\n      toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n    }\r\n  })\r\n  \r\n  Toast.fire({\r\n    icon: 'warning',\r\n    title: `Limites en \"${nombre} - Sensor No. ${idx}\" fuera de rango `\r\n  })\r\n}\r\n\r\nexport const AlertaCamposVacios = () => {\r\n  Swal.fire({\r\n  title: \"Error!\",\r\n  text: \"Todos los campos deben se llenados\",\r\n  icon: \"error\",\r\n  confirmButtonText: \"ok\",\r\n});\r\n}\r\n\r\n// export {AlertaToastSucces,AlertaCamposVacios,AlertaToastDenied};"],"sourceRoot":""}