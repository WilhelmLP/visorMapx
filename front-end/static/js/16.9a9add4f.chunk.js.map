{"version":3,"sources":["assets/icons/inactivo.svg","vistas/general/Navegacion.js","vistas/tarjetas/informacion/Sensor.js","vistas/tarjetas/informacion/InformacionSensor.js","vistas/tarjetas/informacion/Informacion.js"],"names":["NavegacionTipo","TARJETA","ELEMENTO","PROYECTO","Navegacion","activo","tipo","history","direccion","servicios","useContext","ServicesContext","navegacion","useMemo","push","titulo","id","key","undefined","includes","className","variant","map","item","index","active","onClick","click","Sensor","sensor","sm","nombre","valor","toFixed","unidades","landmark","nivel","peligrosidad","estado","toUpperCase","md","src","iconoactivo","iconoinactivo","InformacionSensor","sensores","idx","Informacion","nombreTarjeta","match","params","useState","SA","SI","GA","GI","general","setGeneral","token","localStorage","getItem","setDisponible","graficasInfo","setGraficasInfo","sensoresInfo","setSensoresInfo","icono","data","setData","cargando","setCargando","getData","a","getTarjeta","graficas","str_sensores","forEach","Promise","all","getPaquetesAPI","getLandmarksAPI","getPeligrosidadAPI","land","peligro","arr_sensores","i","length","alias","min","parametros","rango","max","countSA","countSI","countGA","countGI","arr_graficas","grafica","arr_grafica","arr","estadoformato","substring","useEffect","intervalo","setInterval","reverse","clearInterval","style","display","placeItems","height","Loader","fluid","accent","activeTab","graficaActiva"],"mappings":"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","file":"static/js/16.9a9add4f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/inactivo.c25580cd.svg\";","import React, { useContext, useMemo} from \"react\";\r\nimport { CCard, CCol, CRow, CNav, CNavItem, CNavLink } from \"@coreui/react\";\r\nimport { ServicesContext } from \"src/containers/UserContext\";\r\nimport propTypes from \"prop-types\";\r\nimport \"./Navegacion.css\";\r\n\r\nconst NavegacionTipo = {\r\n  TARJETA : 0,\r\n  ELEMENTO : 1,\r\n  PROYECTO : 2 \r\n}\r\nconst Navegacion = ({activo = 0,tipo = NavegacionTipo.ELEMENTO, history, direccion}) => {\r\n\r\n  const servicios = useContext(ServicesContext);\r\n  const navegacion = useMemo(() =>{\r\n    const navegacion = [];\r\n    switch(tipo) {\r\n      case NavegacionTipo.TARJETA:\r\n        navegacion.push({titulo:\"Información\",id:0,direccion:\"informacion\",key:\"tinformacion\"});\r\n        if(servicios!=undefined){\r\n          if(servicios.includes(\"TC\"))\r\n            navegacion.push({titulo:\"Configuración\",id:1,direccion:\"configuracion\",key:\"tconfiguracion\"});\r\n          if(servicios.includes(\"TGI\") || servicios.includes(\"TGII\"))\r\n            navegacion.push({titulo:\"Graficas\",id:2,direccion:\"graficas\",key:\"tgraficas\"});\r\n          if(servicios.includes(\"TE\"))\r\n            navegacion.push({titulo:\"Estadistica\",id:3,direccion:\"estadistica\",key:\"testadistica\"});\r\n        }        \r\n        break;        \r\n      case NavegacionTipo.ELEMENTO:\r\n        navegacion.push({titulo:\"Información\",id:0,direccion:\"informacion\",key:\"einformacion\"});\r\n        if(servicios!=undefined){\r\n          if(servicios.includes(\"EC\"))\r\n            navegacion.push({titulo:\"Configuración\",id:1,direccion:\"configuracion\",key:\"econfiguracion\"});\r\n          if(servicios.includes(\"EGI\") || servicios.includes(\"EGII\"))\r\n            navegacion.push({titulo:\"Graficas\",id:2, direccion:\"graficas\",key:\"egraficas\"});\r\n          if(servicios.includes(\"EE\"))\r\n            navegacion.push({titulo:\"Estadistica\",id:3,direccion:\"estadistica\",key:\"3estadistica\"});\r\n        }        \r\n        break;\r\n      case NavegacionTipo.PROYECTO:\r\n        if(servicios!=undefined){\r\n          if(servicios.includes(\"EGI\") || servicios.includes(\"EGII\"))\r\n            navegacion.push({titulo:\"Información\",id:0,direccion:\"informacion\",key:\"pinformacion\"});\r\n          if(servicios.includes(\"EC\"))\r\n            navegacion.push({titulo:\"Configuración\",id:1,direccion:\"configuracion\",key:\"pconfiguracion\"});\r\n          if(servicios.includes(\"EE\"))\r\n            navegacion.push({titulo:\"Estadistica\",id:2,direccion:\"estadistica\",key:\"pestadistica\"});\r\n          navegacion.push({titulo:\"Elementos\",id:3,direccion:\"elementos\",key:\"pelementos\"});\r\n        }\r\n        break;        \r\n    } \r\n    return navegacion;\r\n  },[servicios,tipo]);\r\n  \r\n  const click = (index) => {\r\n    \r\n    switch(tipo) {\r\n      case NavegacionTipo.TARJETA:\r\n        history.push(`/tarjetas/${direccion}/${navegacion[index].direccion}`);           \r\n        break;        \r\n      case NavegacionTipo.ELEMENTO:\r\n        history.push(`/elementos/${direccion}/${navegacion[index].direccion}`);         \r\n       break;\r\n      case NavegacionTipo.PROYECTO:\r\n        history.push(`/proyectos/${direccion}/${navegacion[index].direccion}`);         \r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CCard className=\"navegacion py-1\">                                                          \r\n        <div className=\"panel d-flex justify-content-end\">\r\n          <CNav variant=\"tabs\">\r\n            {navegacion.map((item,index) => {\r\n              return (\r\n                <CNavItem key={item.key}>\r\n                  {\r\n                    (item.id==activo)?\r\n                    <CNavLink className=\"link\" active>{item.titulo}</CNavLink>\r\n                    :\r\n                    <CNavLink className=\"link\" onClick={()=>click(index)}>{item.titulo}</CNavLink>\r\n                  }        \r\n                </CNavItem>\r\n              );\r\n            })}  \r\n          </CNav>            \r\n        </div>                  \r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nNavegacion.propTypes = {\r\n  activo: propTypes.number,\r\n  tipo: propTypes.oneOf([0,1,2]),\r\n  direccion: propTypes.string,\r\n  history: propTypes.object\r\n};\r\n\r\nexport {NavegacionTipo};\r\nexport default Navegacion;\r\n","import React from \"react\";\r\nimport { CCard, CCardBody, CCol, CRow, CCardHeader } from \"@coreui/react\";\r\nimport iconoactivo from \"../../../assets/icons/activo.svg\";\r\nimport iconoinactivo from \"../../../assets/icons/inactivo.svg\";\r\nimport \"./Informacion.css\";\r\n\r\nconst Sensor = ({ sensor }) => {\r\n  return (\r\n    <CCol sm=\"4\">\r\n      <CCard className=\"shadow\">\r\n        <CCardHeader className=\"contenedor-cabecera\">\r\n          <h5>{sensor.nombre}</h5>\r\n        </CCardHeader>\r\n        {sensor.valor === null ? (\r\n          <CCardBody>\r\n            Información no disponible\r\n          </CCardBody>\r\n        ) : (\r\n          <CCardBody>\r\n            <CRow className=\"align-items-center justify-content-center\">\r\n              <CCol sm=\"8\">\r\n                <p>\r\n                  <b>\r\n                    {sensor.valor.toFixed(4)} {sensor.unidades}\r\n                  </b>\r\n                </p>\r\n                <p>NORMALIZACIÓN : {(sensor.landmark.nivel[0])?sensor.landmark.nivel[1].toFixed(4):\"-\"}</p>\r\n                <p>\r\n                  TENDENCIA : {sensor.peligrosidad.peligrosidad[0].toFixed(4)}\r\n                </p>\r\n                <p>{sensor.estado.toUpperCase()} </p>\r\n              </CCol>\r\n              <CCol md=\"4\">\r\n                {sensor.estado === \"activo\" &&\r\n                sensor.landmark.nivel[1] <= 1 &&\r\n                sensor.landmark.nivel[1] >= 0 ? (\r\n                  <div className=\"contenedor-icono\">\r\n                    <img src={iconoactivo} className=\"icono\" />\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"contenedor-icono\">\r\n                    <img src={iconoinactivo} className=\"icono\" />\r\n                  </div>\r\n                )}\r\n              </CCol>\r\n            </CRow>\r\n          </CCardBody>\r\n        )}\r\n      </CCard>\r\n    </CCol>\r\n  );\r\n};\r\n\r\nexport default Sensor;\r\n","import { CRow } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport Sensor from \"./Sensor\";\r\n\r\nconst InformacionSensor = ({ sensores }) => {\r\n  return (\r\n    <div>\r\n      <CRow>\r\n        {sensores.map((sensor, idx) => {\r\n          return (\r\n            <Sensor sensor={sensor} key={idx}/>\r\n          );\r\n        })}\r\n      </CRow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InformacionSensor;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { ServicesContext } from \"../../../containers/UserContext\";\r\nimport {\r\n  CContainer,\r\n  CRow,\r\n  CCol,\r\n  CCard,\r\n  CCardHeader,\r\n  CCardBody,\r\n  CListGroup,\r\n  CListGroupItem,\r\n  CTabs,\r\n  CNav,\r\n  CNavItem,\r\n  CNavLink,\r\n  CTabContent,\r\n  CTabPane,\r\n} from \"@coreui/react\";\r\nimport {\r\n  getLandmarksAPI,\r\n  getPaquetesAPI,\r\n  getPeligrosidadAPI,\r\n  getTarjeta,\r\n} from \"src/helpers/peticionesAPI\";\r\n\r\nimport InformacionSensor from \"./InformacionSensor\";\r\nimport Sensor from \"./Sensor\";\r\nimport Loader from \"src/reusable/Loader\";\r\nimport iconoactivo from \"../../../assets/icons/activo.svg\";\r\n\r\nimport iconoinactivo from \"../../../assets/icons/inactivo.svg\";\r\nimport \"./Informacion.css\";\r\nimport Navegacion, { NavegacionTipo } from \"src/vistas/general/Navegacion\";\r\nconst Informacion = ({\r\n  match: {\r\n    params: { nombreTarjeta },\r\n  },\r\n  history,\r\n}) => {\r\n  const [general, setGeneral] = useState({\r\n    SA: 0,\r\n    SI: 0,\r\n    GA: 0,\r\n    GI: 0,\r\n  });\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n  const nombre = nombreTarjeta;\r\n\r\n  const [disponible, setDisponible] = useState(false);\r\n  const [graficasInfo, setGraficasInfo] = useState([]);\r\n  const [sensoresInfo, setSensoresInfo] = useState([]);\r\n  const [data, setData] = useState({\r\n    estado: \"inactivo\",\r\n    icono: iconoinactivo,\r\n  });\r\n  const [cargando, setCargando] = useState(true);\r\n\r\n  const getData = async () => {\r\n    const { graficas, sensores, estado } = await getTarjeta(nombre, token);\r\n\r\n    let str_sensores = [];\r\n    sensores.forEach((sensor) => {\r\n      str_sensores.push(`${nombre}.S${sensor.index}`);\r\n    });\r\n\r\n    let [valor, land, peligro] = await Promise.all([\r\n      getPaquetesAPI(str_sensores, token, 1),\r\n      getLandmarksAPI(str_sensores, token, 1),\r\n      getPeligrosidadAPI(str_sensores, token, 1),\r\n    ]);\r\n\r\n    let arr_sensores = [];\r\n    for (let i = 0; i < valor.sensores[0].length; i++) {\r\n      arr_sensores.push({\r\n        nombre: sensores[i].nombre,\r\n        alias: sensores[i].alias,\r\n        estado: sensores[i].estado,\r\n        unidades: sensores[i].unidades,\r\n        min: sensores[i].parametros.rango[0],\r\n        max: sensores[i].parametros.rango[1],\r\n        ...valor.sensores[0][i],\r\n        ...land.sensores[0][i],\r\n        ...peligro.sensores[0][i],\r\n      });\r\n    }\r\n\r\n    let countSA = 0;\r\n    let countSI = 0;\r\n    let countGA = 0;\r\n    let countGI = 0;\r\n    let arr_graficas = [];\r\n\r\n    graficas.forEach((grafica) => {\r\n      let arr_grafica = [];\r\n      for (let i = 0; i < valor.sensores.length; i++) {\r\n        let arr = [];\r\n        grafica.sensores.forEach((sensor) => {\r\n          if (sensores[sensor].estado === \"activo\") {\r\n            countSA += 1;\r\n            arr.push({\r\n              nombre: sensores[sensor].nombre,\r\n              alias: sensores[sensor].alias,\r\n              estado: sensores[sensor].estado,\r\n              unidades: sensores[sensor].unidades,\r\n              min: sensores[sensor].parametros.rango[0],\r\n              max: sensores[sensor].parametros.rango[1],\r\n              ...valor.sensores[i][sensor],\r\n              ...land.sensores[i][sensor],\r\n              ...peligro.sensores[i][sensor],\r\n            });\r\n          }\r\n          if (sensores[sensor].estado === \"inactivo\") countSI += 1;\r\n        });\r\n        if (arr.length > 0) countGA += 1;\r\n        if (arr.length < 1) countGI += 1;\r\n        arr_grafica.push(arr);\r\n      }\r\n\r\n      arr_graficas.push({ nombre: grafica.nombre, sensores: arr_grafica });\r\n    });\r\n    setGeneral({\r\n      SA: countSA,\r\n      SI: countSI,\r\n      GA: countGA,\r\n      GI: countGI,\r\n    });\r\n    setSensoresInfo(arr_sensores);\r\n    setGraficasInfo(arr_graficas);\r\n    setDisponible(true);\r\n\r\n    const icono = estado == \"activo\" ? iconoactivo : iconoinactivo;\r\n    const estadoformato = estado[0].toUpperCase() + estado.substring(1);\r\n    setData({ estado: estadoformato, icono });\r\n  };\r\n  const getIntervalo = () => {\r\n    setInterval(async () => {\r\n      const { graficas, sensores, estado } = await getTarjeta(nombre, token);\r\n\r\n      let str_sensores = [];\r\n      sensores.forEach((sensor) => {\r\n        str_sensores.push(`${nombre}.S${sensor.index}`);\r\n      });\r\n\r\n      let [valor, land, peligro] = await Promise.all([\r\n        getPaquetesAPI(str_sensores, token, 1),\r\n        getLandmarksAPI(str_sensores, token, 1),\r\n        getPeligrosidadAPI(str_sensores, token, 1),\r\n      ]);\r\n\r\n      valor.sensores = valor.sensores.reverse();\r\n      land.sensores = land.sensores.reverse();\r\n      peligro.sensores = peligro.sensores.reverse();\r\n\r\n      let arr_sensores = [];\r\n      for (let i = 0; i < valor.sensores[0].length; i++) {\r\n        if (valor.sensores[0][i].valor === null) continue;\r\n        else {\r\n          arr_sensores.push({\r\n            nombre: sensores[i].nombre,\r\n            alias: sensores[i].alias,\r\n            estado: sensores[i].estado,\r\n            unidades: sensores[i].unidades,\r\n            min: sensores[i].parametros.rango[0],\r\n            max: sensores[i].parametros.rango[1],\r\n            ...valor.sensores[0][i],\r\n            ...land.sensores[0][i],\r\n            ...peligro.sensores[0][i],\r\n          });\r\n        }\r\n      }\r\n\r\n      let countSA = 0;\r\n      let countSI = 0;\r\n      let countGA = 0;\r\n      let countGI = 0;\r\n      let arr_graficas = [];\r\n\r\n      if (arr_sensores.length < 1) {\r\n        return;\r\n      } else {\r\n        graficas.forEach((grafica) => {\r\n          let arr_grafica = [];\r\n          for (let i = 0; i < valor.sensores.length; i++) {\r\n            let arr = [];\r\n            grafica.sensores.forEach((sensor) => {\r\n              if (sensores[sensor].estado === \"activo\") {\r\n                countSA += 1;\r\n                arr.push({\r\n                  nombre: sensores[sensor].nombre,\r\n                  alias: sensores[sensor].alias,\r\n                  estado: sensores[sensor].estado,\r\n                  unidades: sensores[sensor].unidades,\r\n                  min: sensores[sensor].parametros.rango[0],\r\n                  max: sensores[sensor].parametros.rango[1],\r\n                  ...valor.sensores[i][sensor],\r\n                  ...land.sensores[i][sensor],\r\n                  ...peligro.sensores[i][sensor],\r\n                });\r\n              }\r\n              if (sensores[sensor].estado === \"inactivo\") countSI += 1;\r\n            });\r\n\r\n            if (arr.length > 0) countGA += 1;\r\n            if (arr.length < 1) countGI += 1;\r\n            arr_grafica.push(arr);\r\n          }\r\n\r\n          arr_graficas.push({ nombre: grafica.nombre, sensores: arr_grafica });\r\n        });\r\n\r\n        setGeneral({\r\n          SA: countSA,\r\n          SI: countSI,\r\n          GA: countGA,\r\n          GI: countGI,\r\n        });\r\n        setSensoresInfo(arr_sensores);\r\n        setGraficasInfo(arr_graficas);\r\n        setDisponible(true);\r\n\r\n        const icono = estado == \"activo\" ? iconoactivo : iconoinactivo;\r\n        const estadoformato = estado[0].toUpperCase() + estado.substring(1);\r\n        setData({ estado: estadoformato, icono });\r\n      }\r\n    }, 30000);\r\n  };\r\n\r\n  useEffect(async () => {\r\n    await getData();\r\n    const intervalo = getIntervalo();\r\n    setCargando(false);\r\n    return () => clearInterval(intervalo);\r\n  }, []);\r\n\r\n  if (cargando)\r\n    return (\r\n      <div style={{ display: \"grid\", placeItems: \"center\", height: \"40vh\" }}>\r\n        <Loader height=\"10vh\" />\r\n      </div>\r\n    );\r\n  return (\r\n    <CContainer fluid>\r\n      <Navegacion\r\n        activo={0}\r\n        tipo={NavegacionTipo.TARJETA}\r\n        history={history}\r\n        direccion={nombre}\r\n      />\r\n      <CRow>\r\n        <CCol sm=\"12\">\r\n          <CCard className=\"shadow\">\r\n            <CCardBody className=\"shadow\">\r\n              <CRow className=\"justify-content-between\">\r\n                <CCol className=\"col-3 d-flex align-items-center\">\r\n                  <img src={data.icono} className=\"icono\" />\r\n                  <h4 className=\"ml-2\">{data.estado}</h4>\r\n                </CCol>\r\n                <CCol className=\"col-9 text-right\">\r\n                  <h5>Tarjeta</h5>\r\n                  <h3>{nombre}</h3>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CRow>\r\n        <CCol>\r\n          <CCard className=\"shadow\">\r\n            <CCardHeader className=\"contenedor-cabecera-principal\">\r\n              General\r\n            </CCardHeader>\r\n            <CCardBody className=\"shadow\">\r\n              <CListGroup accent>\r\n                <CRow className=\"justify-content-end\">\r\n                  <CCol sm=\"4\" className=\"align-self-center encabezado_general\">\r\n                    Sensores\r\n                  </CCol>\r\n                  <CCol sm=\"4\" className=\"align-self-center encabezado_general\">\r\n                    Graficas\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                  <CCol sm=\"4\">\r\n                    <CListGroupItem accent=\"dark\">Activos :</CListGroupItem>\r\n                  </CCol>\r\n                  <CCol sm=\"4\" className=\"align-self-center\">\r\n                    {general.SA}\r\n                  </CCol>\r\n                  <CCol sm=\"4\" className=\"align-self-center\">\r\n                    {general.GA}\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                  <CCol sm=\"4\">\r\n                    <CListGroupItem accent=\"dark\">Inactivos :</CListGroupItem>\r\n                  </CCol>\r\n                  <CCol sm=\"4\" className=\"align-self-center\">\r\n                    {general.SI}\r\n                  </CCol>\r\n                  <CCol sm=\"4\" className=\"align-self-center\">\r\n                    {general.GI}\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                  <CCol sm=\"4\">\r\n                    <CListGroupItem accent=\"dark\">Totales :</CListGroupItem>\r\n                  </CCol>\r\n                  <CCol sm=\"4\" className=\"align-self-center\">\r\n                    {general.SA + general.SI}\r\n                  </CCol>\r\n                  <CCol sm=\"4\" className=\"align-self-center\">\r\n                    {general.GA + general.GI}\r\n                  </CCol>\r\n                </CRow>\r\n              </CListGroup>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CRow>\r\n        <CCol>\r\n          <CCard className=\"shadow\">\r\n            <CCardHeader className=\"contenedor-cabecera-principal\">\r\n              Sensores\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CTabs activeTab=\"grupos\">\r\n                <CNav variant=\"tabs\">\r\n                  <CNavItem>\r\n                    <CNavLink data-tab=\"grupos\">Grupos</CNavLink>\r\n                  </CNavItem>\r\n                  <CNavItem>\r\n                    <CNavLink data-tab=\"todos\">Todos</CNavLink>\r\n                  </CNavItem>\r\n                </CNav>\r\n                <CTabContent className=\"mt-4\">\r\n                  <CTabPane data-tab=\"grupos\">\r\n                    {graficasInfo.map((graficaActiva, idx) => {\r\n                      return (\r\n                        <CCard key={idx}>\r\n                          <CCardHeader className=\"contenedor-cabecera-grafica\">\r\n                            <h4>{graficaActiva.nombre}</h4>\r\n                          </CCardHeader>\r\n                          <CCardBody>\r\n                            <InformacionSensor\r\n                              sensores={graficaActiva.sensores[0]}\r\n                            />\r\n                          </CCardBody>\r\n                        </CCard>\r\n                      );\r\n                    })}\r\n                  </CTabPane>\r\n                  <CTabPane data-tab=\"todos\">\r\n                    <CRow>\r\n                      {sensoresInfo.map((sensor, idx) => {\r\n                        return <Sensor sensor={sensor} key={idx} />;\r\n                      })}\r\n                    </CRow>\r\n                  </CTabPane>\r\n                </CTabContent>\r\n              </CTabs>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </CContainer>\r\n  );\r\n};\r\n\r\nexport default Informacion;\r\n"],"sourceRoot":""}