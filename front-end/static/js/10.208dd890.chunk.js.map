{"version":3,"sources":["assets/icons/inactivo.svg","vistas/general/Navegacion.js","vistas/proyectos/configuracion_proyectos/ProyectosConfiguracionSensor.js","vistas/proyectos/configuracion_proyectos/ProyectosConfiguracionSensores.js","vistas/proyectos/configuracion_proyectos/ProyectosConfiguracion.js"],"names":["NavegacionTipo","TARJETA","ELEMENTO","PROYECTO","Navegacion","activo","tipo","history","direccion","servicios","useContext","ServicesContext","navegacion","useMemo","push","titulo","id","key","undefined","includes","className","variant","map","item","index","active","onClick","click","ProyectosConfiguracionSensor","tarjeta","sensor","icono","estado","iconoactivo","iconoinactivo","toUpperCase","substring","sm","nombre","clase","src","alias","unidades","parametros","rango","toFixed","resolucion","peligrosidad","proyecto","direcciones","idx","ProyectosConfiguracionSensores","sensores","valores","ProyectosConfiguracion","idProyecto","match","params","useState","descripcion","area","linea","proceso","identificador","informacion","setInformacion","cargando","setCargando","graficasProyectoConf","setGraficasProyectoConf","sensoresProyectoConf","setSensoresProyectoConf","token","localStorage","getItem","getValor","a","getProyectoById","graficas_proyecto","graficas","variables_proyecto","variables","sensores_proyecto","length","substr","getRecursosAPI","lista_sensores","arr_sensores_variables","direccion_sensor","sensor_direccion","slice","indexOf","sensor_info","find","s","parseInt","forEach","variable","elemento","arr_graficas","grafica","arr_grafica","variable_index","sensor_index","datos","estadoformato","useEffect","intervalo","setInterval","clearInterval","style","display","placeItems","height","Loader","fluid","accent","activeTab"],"mappings":"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","file":"static/js/10.208dd890.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/inactivo.c25580cd.svg\";","import React, { useContext, useMemo} from \"react\";\r\nimport { CCard, CCol, CRow, CNav, CNavItem, CNavLink } from \"@coreui/react\";\r\nimport { ServicesContext } from \"src/containers/UserContext\";\r\nimport propTypes from \"prop-types\";\r\nimport \"./Navegacion.css\";\r\n\r\nconst NavegacionTipo = {\r\n  TARJETA : 0,\r\n  ELEMENTO : 1,\r\n  PROYECTO : 2 \r\n}\r\nconst Navegacion = ({activo = 0,tipo = NavegacionTipo.ELEMENTO, history, direccion}) => {\r\n\r\n  const servicios = useContext(ServicesContext);\r\n  const navegacion = useMemo(() =>{\r\n    const navegacion = [];\r\n    switch(tipo) {\r\n      case NavegacionTipo.TARJETA:\r\n        navegacion.push({titulo:\"Información\",id:0,direccion:\"informacion\",key:\"tinformacion\"});\r\n        if(servicios!=undefined){\r\n          if(servicios.includes(\"TC\"))\r\n            navegacion.push({titulo:\"Configuración\",id:1,direccion:\"configuracion\",key:\"tconfiguracion\"});\r\n          if(servicios.includes(\"TGI\") || servicios.includes(\"TGII\"))\r\n            navegacion.push({titulo:\"Graficas\",id:2,direccion:\"graficas\",key:\"tgraficas\"});\r\n          if(servicios.includes(\"TE\"))\r\n            navegacion.push({titulo:\"Estadistica\",id:3,direccion:\"estadistica\",key:\"testadistica\"});\r\n        }        \r\n        break;        \r\n      case NavegacionTipo.ELEMENTO:\r\n        navegacion.push({titulo:\"Información\",id:0,direccion:\"informacion\",key:\"einformacion\"});\r\n        if(servicios!=undefined){\r\n          if(servicios.includes(\"EC\"))\r\n            navegacion.push({titulo:\"Configuración\",id:1,direccion:\"configuracion\",key:\"econfiguracion\"});\r\n          if(servicios.includes(\"EGI\") || servicios.includes(\"EGII\"))\r\n            navegacion.push({titulo:\"Graficas\",id:2, direccion:\"graficas\",key:\"egraficas\"});\r\n          if(servicios.includes(\"EE\"))\r\n            navegacion.push({titulo:\"Estadistica\",id:3,direccion:\"estadistica\",key:\"3estadistica\"});\r\n        }        \r\n        break;\r\n      case NavegacionTipo.PROYECTO:\r\n        if(servicios!=undefined){\r\n          if(servicios.includes(\"EGI\") || servicios.includes(\"EGII\"))\r\n            navegacion.push({titulo:\"Información\",id:0,direccion:\"informacion\",key:\"pinformacion\"});\r\n          if(servicios.includes(\"EC\"))\r\n            navegacion.push({titulo:\"Configuración\",id:1,direccion:\"configuracion\",key:\"pconfiguracion\"});\r\n          if(servicios.includes(\"EE\"))\r\n            navegacion.push({titulo:\"Estadistica\",id:2,direccion:\"estadistica\",key:\"pestadistica\"});\r\n          navegacion.push({titulo:\"Elementos\",id:3,direccion:\"elementos\",key:\"pelementos\"});\r\n        }\r\n        break;        \r\n    } \r\n    return navegacion;\r\n  },[servicios,tipo]);\r\n  \r\n  const click = (index) => {\r\n    \r\n    switch(tipo) {\r\n      case NavegacionTipo.TARJETA:\r\n        history.push(`/tarjetas/${direccion}/${navegacion[index].direccion}`);           \r\n        break;        \r\n      case NavegacionTipo.ELEMENTO:\r\n        history.push(`/elementos/${direccion}/${navegacion[index].direccion}`);         \r\n       break;\r\n      case NavegacionTipo.PROYECTO:\r\n        history.push(`/proyectos/${direccion}/${navegacion[index].direccion}`);         \r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CCard className=\"navegacion py-1\">                                                          \r\n        <div className=\"panel d-flex justify-content-end\">\r\n          <CNav variant=\"tabs\">\r\n            {navegacion.map((item,index) => {\r\n              return (\r\n                <CNavItem key={item.key}>\r\n                  {\r\n                    (item.id==activo)?\r\n                    <CNavLink className=\"link\" active>{item.titulo}</CNavLink>\r\n                    :\r\n                    <CNavLink className=\"link\" onClick={()=>click(index)}>{item.titulo}</CNavLink>\r\n                  }        \r\n                </CNavItem>\r\n              );\r\n            })}  \r\n          </CNav>            \r\n        </div>                  \r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nNavegacion.propTypes = {\r\n  activo: propTypes.number,\r\n  tipo: propTypes.oneOf([0,1,2]),\r\n  direccion: propTypes.string,\r\n  history: propTypes.object\r\n};\r\n\r\nexport {NavegacionTipo};\r\nexport default Navegacion;\r\n","import React from \"react\";\r\nimport { CCard, CCardBody, CCardHeader, CCol } from \"@coreui/react\";\r\nimport iconoactivo from '../../../assets/icons/activo.svg';\r\nimport iconoinactivo from '../../../assets/icons/inactivo.svg';\r\nimport \"./ProyectosConfiguracion.css\";\r\n\r\nconst ProyectosConfiguracionSensor = ({ tarjeta,sensor }) => {\r\n\r\n  const icono  =  (sensor.estado==\"activo\")?iconoactivo:iconoinactivo;\r\n  const estado = sensor.estado[0].toUpperCase() + sensor.estado.substring(1);\r\n\r\n  return (\r\n    <CCol sm=\"4\">\r\n      <CCard className=\"shadow\">\r\n        <CCardHeader className=\"contenedor-cabecera\">\r\n          <h5>{sensor.nombre}</h5>\r\n        </CCardHeader>{\" \"}\r\n        {sensor.clase === \"S\" ? (\r\n          <CCardBody>\r\n            <div className=\"mb-4 d-flex align-items-center\">\r\n              <img src = {icono} className=\"icono\"/>\r\n              <h5 className=\"ml-2\">{estado}</h5>\r\n            </div>   \r\n            <pre>\r\n              <li>{`Dirección : ${tarjeta}.S${sensor.index}`}</li>\r\n              <li>{`Alias     : ${sensor.alias}`}</li>\r\n              <li>{`Unidades  : ${sensor.unidades}`}</li>\r\n              <li>{`Rango     : [${sensor.parametros.rango[0].toFixed(4)}, ${sensor.parametros.rango[1].toFixed(4)}] ${sensor.unidades}`}</li>\r\n            </pre>\r\n            <h6>Nivel</h6>\r\n            <hr />\r\n            <pre>\r\n              <li>{`Resolución (i)    : ${sensor.parametros.resolucion[0].toFixed(4) / 2} min`}</li>\r\n              <li>{`Resolución (f(i)) : ${sensor.parametros.resolucion[1].toFixed(4)}`}</li>\r\n            </pre>\r\n            <h6>Tendencia</h6>\r\n            <hr />\r\n            <pre>\r\n              <li>{`Función : Lineal`}</li>\r\n              <li>{`Filtro  : ${sensor.parametros.peligrosidad}`}</li>\r\n            </pre>\r\n          </CCardBody>\r\n        ) : (\r\n          <CCardBody>            \r\n            <div className=\"mb-4 d-flex align-items-center\">\r\n              <img src = {icono} className=\"icono\"/>\r\n              <h5 className=\"ml-2\">{estado}</h5>\r\n            </div>  \r\n            <pre>\r\n              <li>{`Dirección : ${sensor.proyecto}.${sensor.clase}${sensor.index}`}</li>\r\n              <li>{`Alias     : ${sensor.alias}`}</li>\r\n              <li>{`Unidades  : ${sensor.unidades}`}</li>\r\n              <li>{`Tipo      : ${sensor.tipo}`}</li>\r\n            </pre>\r\n            <h6>Direcciones</h6>\r\n            <hr />\r\n            <pre>\r\n              {sensor.direcciones.map((direccion, idx) => {\r\n                return (\r\n                  <li key={idx}>\r\n                    [{idx}] {direccion}\r\n                  </li>\r\n                );\r\n              })}\r\n            </pre>\r\n          </CCardBody>\r\n        )}\r\n      </CCard>\r\n    </CCol>\r\n  );\r\n};\r\n\r\nexport default ProyectosConfiguracionSensor;\r\n","import React from \"react\";\r\nimport { CRow } from \"@coreui/react\";\r\nimport ProyectosConfiguracionSensor from \"./ProyectosConfiguracionSensor\";\r\n\r\nconst ProyectosConfiguracionSensores = ({ tarjeta,sensores }) => {\r\n  return (\r\n    <div>\r\n      <CRow>\r\n        {sensores.valores.map((sensor, idx) => {\r\n          return <ProyectosConfiguracionSensor tarjeta={tarjeta} sensor={sensor} key={idx} />;\r\n        })}\r\n      </CRow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProyectosConfiguracionSensores;\r\n","import {\r\n  CContainer,\r\n  CRow,\r\n  CCol,\r\n  CCard,\r\n  CCardBody,\r\n  CNavLink,\r\n  CTabContent,\r\n  CNavItem,\r\n  CCardHeader,\r\n  CTabPane,\r\n  CTabs,\r\n  CNav,\r\n  CButton,\r\n  CListGroup,\r\n  CListGroupItem,\r\n} from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  getProyectoById,\r\n  getRecursosAPI,\r\n} from \"src/helpers/peticionesAPI\";\r\nimport ProyectosConfiguracionSensores from \"./ProyectosConfiguracionSensores\";\r\nimport ProyectosConfiguracionSensor from \"./ProyectosConfiguracionSensor\";\r\nimport \"./ProyectosConfiguracion.css\";\r\n\r\nimport Loader from \"src/reusable/Loader\";\r\n\r\nimport iconoactivo from '../../../assets/icons/activo.svg';\r\nimport iconoinactivo from '../../../assets/icons/inactivo.svg';\r\nimport Navegacion,{NavegacionTipo} from \"src/vistas/general/Navegacion\";\r\n\r\nconst ProyectosConfiguracion = ({\r\n  match: {\r\n    params: { idProyecto },\r\n  },\r\n  history\r\n}) => {\r\n  const [informacion, setInformacion] = useState({\r\n    tarjeta: \"\",\r\n    nombre: \"\",\r\n    descripcion: \"\",\r\n    area : \"\",\r\n    linea : \"\",\r\n    proceso : \"\",\r\n    identificador : \"\",\r\n    tipo: \"\",\r\n    estado:\"inactivo\",\r\n    icono:iconoinactivo\r\n  });\r\n  const [cargando, setCargando] = useState(true);\r\n\r\n  const [graficasProyectoConf, setGraficasProyectoConf] = useState([]);\r\n  const [sensoresProyectoConf, setSensoresProyectoConf] = useState([]);\r\n  const token = localStorage.getItem(\"token\");\r\n  const id = idProyecto;\r\n  const tarjeta = \"19686\";\r\n\r\n  const getValor = async () => {\r\n    const \r\n    {\r\n      nombre,\r\n      descripcion,\r\n      area,\r\n      linea,\r\n      proceso,\r\n      identificador,\r\n      tipo,      \r\n      estado,\r\n      graficas: graficas_proyecto,\r\n      variables: variables_proyecto,\r\n      sensores: sensores_proyecto,\r\n    } = await getProyectoById(token, id);\r\n    let tarjeta = \"\";\r\n    if(sensores_proyecto.length > 0)\r\n      tarjeta = sensores_proyecto[0].direccion.substr(0,5);   \r\n    const { sensores: lista_sensores } = await getRecursosAPI(tarjeta, token);\r\n\r\n    let arr_sensores_variables = [];\r\n    sensores_proyecto.map((sensor) => {\r\n      const direccion_sensor = sensor.direccion;\r\n      const sensor_direccion = direccion_sensor.slice(\r\n        direccion_sensor.indexOf(\".\") + 2,\r\n        direccion_sensor.length\r\n      );\r\n      const sensor_info = lista_sensores.find(\r\n        (s) => s.index === parseInt(sensor_direccion)\r\n      );\r\n      arr_sensores_variables.push({\r\n        clase: \"S\",\r\n        ...sensor_info,\r\n      });\r\n    });\r\n    variables_proyecto.forEach((variable) => {\r\n      arr_sensores_variables.push({\r\n        clase: \"V\",\r\n        elemento: id.substring(id.length - 6),\r\n        ...variable,\r\n      });\r\n    });\r\n    setSensoresProyectoConf(arr_sensores_variables);\r\n\r\n    let arr_graficas = [];\r\n    graficas_proyecto.forEach((grafica) => {\r\n      let arr_grafica = [];\r\n      grafica.direcciones.forEach((direccion) => {\r\n        if (direccion[0] == \"V\") {\r\n          const variable_index = variables_proyecto.find(\r\n            (variable) => variable.index === parseInt(direccion.substring(1))\r\n          );\r\n          if (variable_index.estado === \"activo\") {\r\n            arr_grafica.push({\r\n              clase: \"V\",\r\n              proyecto: id.substring(id.length - 6),\r\n              ...variable_index,\r\n            });\r\n          }\r\n        }\r\n        if (direccion[0] == \"S\") {\r\n          const direccion_sensor = sensores_proyecto[parseInt(direccion.substring(1))].direccion;\r\n          const sensor_index = direccion_sensor.substring(\r\n            direccion_sensor.indexOf(\".\") + 2            \r\n          );\r\n          const sensor_info = lista_sensores.find(\r\n            (sensor) => sensor.index === parseInt(sensor_index)\r\n          );\r\n          if (sensor_info.estado === \"activo\") {\r\n            arr_grafica.push({\r\n              clase: \"S\",\r\n              ...sensor_info,\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n      if (arr_grafica.length > 0)\r\n        arr_graficas.push(\r\n          grafica.direcciones[0][0] === \"V\"\r\n            ? {\r\n                nombre: grafica.nombre,\r\n                datos: { tipo: \"variables\", valores: arr_grafica },\r\n              }\r\n            : {\r\n                nombre: grafica.nombre,\r\n                datos: { tipo: \"sensores\", valores: arr_grafica },\r\n              }\r\n        );\r\n    });\r\n    const icono = (estado==\"activo\")?iconoactivo:iconoinactivo;      \r\n    const estadoformato = estado[0].toUpperCase() + estado.substring(1);\r\n    setInformacion({\r\n      nombre,\r\n      identificador,\r\n      descripcion,\r\n      area,\r\n      linea,\r\n      proceso,      \r\n      tipo,\r\n      estado:estadoformato,\r\n      icono,\r\n      tarjeta\r\n    });\r\n    setGraficasProyectoConf(arr_graficas);\r\n  };\r\n  const getIntervalo = ()=>{\r\n    return setInterval(getValor,30000);\r\n  }\r\n\r\n  useEffect(async () => {\r\n    setCargando(true);\r\n    await getValor();\r\n    const intervalo = getIntervalo();\r\n    setCargando(false);\r\n    return ()=> clearInterval(intervalo);\r\n  }, []);\r\n\r\n  if (cargando)\r\n    return (\r\n      <div style={{ display: \"grid\", placeItems: \"center\", height: \"40vh\" }}>\r\n        <Loader height=\"10vh\" />\r\n      </div>\r\n    );\r\n  return (\r\n    <CContainer fluid>\r\n      <Navegacion activo={1} tipo={NavegacionTipo.PROYECTO} history={history} direccion={id}/>\r\n      <CRow>\r\n        <CCol sm=\"12\">\r\n          <CCard className=\"shadow\">\r\n            <CCardBody>\r\n              <CRow className=\"justify-content-between\">\r\n                <CCol className=\"col-3 d-flex align-items-center\">\r\n                  <img src={informacion.icono} className=\"icono\"/>\r\n                  <h4 className=\"ml-2\">{informacion.estado}</h4>\r\n                </CCol>\r\n                <CCol className=\"col-9 text-right\">\r\n                  <h5>Proyecto</h5>\r\n                  <h3>{`${informacion.nombre}`}</h3>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol>\r\n          <CCard className=\"shadow\">\r\n            <CCardHeader className=\"contenedor-cabecera\">General</CCardHeader>\r\n            <CCardBody>\r\n              <CListGroup accent>\r\n                <CRow>\r\n                  <CCol sm=\"4\">\r\n                    <CListGroupItem accent=\"info\">Identificador :</CListGroupItem>\r\n                  </CCol>\r\n                  <CCol sm=\"4\" className=\"align-self-center\">\r\n                    {informacion.identificador}\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                  <CCol sm=\"4\">\r\n                    <CListGroupItem accent=\"info\">Descripcion :</CListGroupItem>\r\n                  </CCol>\r\n                  <CCol sm=\"4\" className=\"align-self-center\">\r\n                    {informacion.descripcion}\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                  <CCol sm=\"4\">\r\n                    <CListGroupItem accent=\"info\">Area :</CListGroupItem>\r\n                  </CCol>\r\n                  <CCol sm=\"4\" className=\"align-self-center\">\r\n                    {informacion.area}\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                  <CCol sm=\"4\">\r\n                    <CListGroupItem accent=\"info\">Linea :</CListGroupItem>\r\n                  </CCol>\r\n                  <CCol sm=\"4\" className=\"align-self-center\">\r\n                    {informacion.linea}\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                  <CCol sm=\"4\">\r\n                    <CListGroupItem accent=\"info\">Proceso :</CListGroupItem>\r\n                  </CCol>\r\n                  <CCol sm=\"4\" className=\"align-self-center\">\r\n                    {informacion.proceso}\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                  <CCol sm=\"4\">\r\n                    <CListGroupItem accent=\"info\">Tipo :</CListGroupItem>\r\n                  </CCol>\r\n                  <CCol sm=\"4\" className=\"align-self-center\">\r\n                    {informacion.tipo}\r\n                  </CCol>\r\n                </CRow>\r\n              </CListGroup>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>      \r\n      <CRow>\r\n        <CCol sm=\"12\">\r\n          <CCard className=\"shadow\">\r\n            <CCardHeader className=\"contenedor-cabecera\">\r\n              <h4>\r\n                Sensores/Variables\r\n              </h4>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CTabs activeTab=\"grupos\">\r\n                <CNav variant=\"tabs\">\r\n                  <CNavItem>\r\n                    <CNavLink data-tab=\"grupos\">Grupos</CNavLink>\r\n                  </CNavItem>\r\n                  {/*<CNavItem>\r\n                    <CNavLink data-tab=\"todos\">Todos</CNavLink>\r\n                  </CNavItem>*/}\r\n                </CNav>\r\n                <CTabContent>\r\n                  <CTabPane data-tab=\"grupos\">\r\n                    {graficasProyectoConf.map((grafica, idx) => {\r\n                      return (\r\n                        <div className=\"contenedor-cabecera-grafica\" key={idx}>\r\n                          <h4 className=\"my-4\">{grafica.nombre}</h4>\r\n                          <ProyectosConfiguracionSensores\r\n                            tarjeta={informacion.tarjeta}\r\n                            sensores={grafica.datos}\r\n                          />\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </CTabPane>\r\n                  <CTabPane data-tab=\"todos\" className=\"mt-4\">\r\n                    <CRow>\r\n                      {sensoresProyectoConf.map((sensor, idx) => {\r\n                        return (\r\n                          <ProyectosConfiguracionSensor\r\n                            tarjeta={informacion.tarjeta}\r\n                            sensor={sensor}\r\n                            key={idx}\r\n                          />\r\n                        );\r\n                      })}\r\n                    </CRow>\r\n                  </CTabPane>\r\n                </CTabContent>\r\n              </CTabs>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </CContainer>\r\n  );\r\n};\r\n\r\nexport default ProyectosConfiguracion;\r\n"],"sourceRoot":""}